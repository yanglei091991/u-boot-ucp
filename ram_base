common/cli_hush.c:3311:		addr = (ulong) (r->literal) + gd->reloc_off;
common/bootstage.c:52:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:99:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:172:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:186:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:251:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:309:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:363:	const struct bootstage_data *data = gd->bootstage;
common/bootstage.c:419:	struct bootstage_data *data = gd->bootstage;
common/bootstage.c:496:	gd->bootstage = (struct bootstage_data *)malloc(size);
common/bootstage.c:497:	if (!gd->bootstage)
common/bootstage.c:499:	data = gd->bootstage;
common/board_info.c:22:	model = fdt_getprop(gd->fdt_blob, 0, "model", NULL);
common/stdio.c:298:	ulong relocation_offset = gd->reloc_off;
common/command.c:447:	if (gd->reloc_off == 0)
common/command.c:453:		addr = (ulong)(cmdtp->cmd) + gd->reloc_off;
common/command.c:460:		addr = (ulong)(cmdtp->name) + gd->reloc_off;
common/command.c:463:			addr = (ulong)(cmdtp->usage) + gd->reloc_off;
common/command.c:468:			addr = (ulong)(cmdtp->help) + gd->reloc_off;
common/command.c:474:			addr = (ulong)(cmdtp->complete) + gd->reloc_off;
common/image-fdt.c:487:		fdt_ret = ft_board_setup(blob, gd->bd);
common/image-fdt.c:495:		fdt_ret = ft_system_setup(blob, gd->bd);
common/image-fdt.c:527:		ft_board_setup_ex(blob, gd->bd);
Binary file common/.board_r.c.swp matches
common/log.c:91:	list_for_each_entry(ldev, &gd->log_head, sibling_node) {
common/log.c:158:		if (rec->level > gd->default_log_level)
common/log.c:191:	list_for_each_entry(ldev, &gd->log_head, sibling_node) {
common/log.c:215:	if (!gd || !(gd->flags & GD_FLG_LOG_READY)) {
common/log.c:217:			gd->log_drop_count++;
common/log.c:302:	INIT_LIST_HEAD((struct list_head *)&gd->log_head);
common/log.c:314:			      (struct list_head *)&gd->log_head);
common/log.c:317:	gd->flags |= GD_FLG_LOG_READY;
common/log.c:318:	if (!gd->default_log_level)
common/log.c:319:		gd->default_log_level = LOGL_INFO;
common/log.c:320:	gd->log_fmt = LOGF_DEFAULT;
common/bootm.c:567:	else if (want_silent == -1 && !(gd->flags & GD_FLG_SILENT))
common/cli_readline.c:8: * JinHua Luo, GuangDong Linux Center, <luo.jinhua@gd-linux.com>
common/cli_readline.c:540:	if (gd->flags & GD_FLG_RELOC) {
common/cli_simple.c:8: * JinHua Luo, GuangDong Linux Center, <luo.jinhua@gd-linux.com>
common/malloc_simple.c:20:	new_ptr = gd->malloc_ptr + bytes;
common/malloc_simple.c:22:	      gd->malloc_limit);
common/malloc_simple.c:23:	if (new_ptr > gd->malloc_limit) {
common/malloc_simple.c:27:	ptr = map_sysmem(gd->malloc_base + gd->malloc_ptr, bytes);
common/malloc_simple.c:28:	gd->malloc_ptr = ALIGN(new_ptr, sizeof(new_ptr));
common/malloc_simple.c:39:	addr = ALIGN(gd->malloc_base + gd->malloc_ptr, align);
common/malloc_simple.c:40:	new_ptr = addr + bytes - gd->malloc_base;
common/malloc_simple.c:41:	if (new_ptr > gd->malloc_limit) {
common/malloc_simple.c:47:	gd->malloc_ptr = ALIGN(new_ptr, sizeof(new_ptr));
common/lcd.c:153:	lcd_base = map_sysmem(gd->fb_base, 0);
common/lcd.c:261:	 * by setting up gd->fb_base. Check for this condition and fixup
common/lcd.c:264:	if (map_to_sysmem(lcdbase) != gd->fb_base)
common/lcd.c:265:		lcd_base = map_sysmem(gd->fb_base, 0);
common/iotrace.c:47:	if (!(gd->flags & GD_FLG_RELOC) || !iotrace.enabled)
common/image.c:474:	return gd->bd->bi_dram[0].start;
common/image.c:491:	start = gd->bd->bi_dram[0].start;
common/image.c:492:	size = gd->bd->bi_dram[0].size;
common/image.c:494:	start = gd->bd->bi_memstart;
common/image.c:495:	size = gd->bd->bi_memsize;
common/image.c:622:	return entry->lname + gd->reloc_off;
common/image.c:646:	return entry->sname + gd->reloc_off;
common/image.c:682:	return table->lname + gd->reloc_off;
common/image.c:710:	return table->sname + gd->reloc_off;
common/image.c:761:		if (t->sname && strcasecmp(t->sname + gd->reloc_off, name) == 0)
common/image.c:1471:	**kbd = *(gd->bd);
common/lcd_simplefb.c:43:	fb_base = gd->fb_base;
common/bootm_os.c:118:	(*loader)(gd->bd, os_hdr, "", cmdline);
common/bootm_os.c:173:	(*entry_point)(gd->bd);
common/bootm_os.c:543:				boot_os[i] += gd->reloc_off;
common/hwconfig.c:78:		if (!(gd->flags & GD_FLG_ENV_READY)) {
common/dlmalloc.c:571:		*p = (mbinptr)((ulong)*p + gd->reloc_off);
common/dlmalloc.c:1258:	if (!(gd->flags & GD_FLG_FULL_MALLOC_INIT))
common/dlmalloc.c:1527:	if (!(gd->flags & GD_FLG_FULL_MALLOC_INIT))
common/dlmalloc.c:1686:	if (!(gd->flags & GD_FLG_FULL_MALLOC_INIT)) {
common/dlmalloc.c:1895:	if (!(gd->flags & GD_FLG_FULL_MALLOC_INIT)) {
common/dlmalloc.c:2089:	if (!(gd->flags & GD_FLG_FULL_MALLOC_INIT)) {
common/dlmalloc.c:2390:	assert(gd->malloc_base);	/* Set up by crt0.S */
common/dlmalloc.c:2391:	gd->malloc_limit = CONFIG_VAL(SYS_MALLOC_F_LEN);
common/dlmalloc.c:2392:	gd->malloc_ptr = 0;
common/memsize.c:96:	return gd->ram_size;
common/memsize.c:99:	return ((gd->ram_size > CONFIG_MAX_MEM_MAPPED) ?
common/memsize.c:100:		CONFIG_MAX_MEM_MAPPED : gd->ram_size);
common/board_f.c:120:	gd->baudrate = env_get_ulong("baudrate", 10, CONFIG_BAUDRATE);
common/board_f.c:212:		size += gd->bd->bi_dram[i].size;
common/board_f.c:214:		      (unsigned long long)(gd->bd->bi_dram[i].start));
common/board_f.c:216:		print_size(gd->bd->bi_dram[i].size, "\n");
common/board_f.c:221:	size = gd->ram_size;
common/board_f.c:234:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
common/board_f.c:235:	gd->bd->bi_dram[0].size = get_effective_memsize();
common/board_f.c:275:	gd->mon_len = (ulong)&__bss_end - (ulong)_start;
common/board_f.c:277:	gd->mon_len = (ulong)&_end - (ulong)_init;
common/board_f.c:279:	gd->mon_len = CONFIG_SYS_MONITOR_LEN;
common/board_f.c:281:	gd->mon_len = (ulong)(&__bss_end) - (ulong)(&_start);
common/board_f.c:284:	gd->mon_len = (ulong)&__bss_end - CONFIG_SYS_MONITOR_BASE;
common/board_f.c:307:	if (gd->ram_top < CONFIG_SYS_SDRAM_BASE)
common/board_f.c:314:	return gd->ram_top;
common/board_f.c:319:	debug("Monitor len: %08lX\n", gd->mon_len);
common/board_f.c:323:	debug("Ram size: %08lX\n", (ulong)gd->ram_size);
common/board_f.c:327:	 * get "touched" at all by U-Boot. By fixing up gd->ram_size
common/board_f.c:335:	gd->ram_size -= CONFIG_SYS_MEM_TOP_HIDE;
common/board_f.c:338:	gd->ram_base = CONFIG_SYS_SDRAM_BASE;
common/board_f.c:340:	gd->ram_top = gd->ram_base + get_effective_memsize();
common/board_f.c:341:	gd->ram_top = board_get_usable_ram_top(gd->mon_len);
common/board_f.c:342:	gd->relocaddr = gd->ram_top;
common/board_f.c:343:	debug("Ram top: %08lX\n", (ulong)gd->ram_top);
common/board_f.c:349:	if (gd->relocaddr > determine_mp_bootpg(NULL)) {
common/board_f.c:350:		gd->relocaddr = determine_mp_bootpg(NULL);
common/board_f.c:351:		debug("Reserving MP boot page to %08lx\n", gd->relocaddr);
common/board_f.c:364:	gd->relocaddr -= (reg << 10);		/* size is in kB */
common/board_f.c:366:	      gd->relocaddr);
common/board_f.c:374:	gd->relocaddr &= ~(4096 - 1);
common/board_f.c:383:	gd->arch.tlb_size = PGTABLE_SIZE;
common/board_f.c:384:	gd->relocaddr -= gd->arch.tlb_size;
common/board_f.c:387:	gd->relocaddr &= ~(0x10000 - 1);
common/board_f.c:389:	gd->arch.tlb_addr = gd->relocaddr;
common/board_f.c:390:	debug("TLB table from %08lx to %08lx\n", gd->arch.tlb_addr,
common/board_f.c:391:	      gd->arch.tlb_addr + gd->arch.tlb_size);
common/board_f.c:395:	 * Record allocated tlb_addr in case gd->tlb_addr to be overwritten
common/board_f.c:398:	gd->arch.tlb_allocated = gd->arch.tlb_addr;
common/board_f.c:412:	addr = gd->relocaddr;
common/board_f.c:416:	gd->relocaddr = addr;
common/board_f.c:419:	gd->fb_base = CONFIG_FB_ADDR;
common/board_f.c:422:	gd->relocaddr = lcd_setmem(gd->relocaddr);
common/board_f.c:423:	gd->fb_base = gd->relocaddr;
common/board_f.c:430:	gd->relocaddr = video_setmem(gd->relocaddr);
common/board_f.c:431:	gd->fb_base = gd->relocaddr;
common/board_f.c:440:	gd->relocaddr -= CONFIG_TRACE_BUFFER_SIZE;
common/board_f.c:441:	gd->trace_buff = map_sysmem(gd->relocaddr, CONFIG_TRACE_BUFFER_SIZE);
common/board_f.c:443:	      CONFIG_TRACE_BUFFER_SIZE >> 10, gd->relocaddr);
common/board_f.c:451:	if (!(gd->flags & GD_FLG_SKIP_RELOC)) {
common/board_f.c:456:		gd->relocaddr -= gd->mon_len;
common/board_f.c:457:		gd->relocaddr &= ~(4096 - 1);
common/board_f.c:460:		gd->relocaddr &= ~(65536 - 1);
common/board_f.c:464:		      gd->mon_len >> 10, gd->relocaddr);
common/board_f.c:467:	gd->start_addr_sp = gd->relocaddr;
common/board_f.c:475:	gd->start_addr_sp = gd->start_addr_sp - TOTAL_MALLOC_LEN;
common/board_f.c:477:	      TOTAL_MALLOC_LEN >> 10, gd->start_addr_sp);
common/board_f.c:484:	if (!gd->bd) {
common/board_f.c:485:		gd->start_addr_sp -= sizeof(bd_t);
common/board_f.c:486:		gd->bd = (bd_t *)map_sysmem(gd->start_addr_sp, sizeof(bd_t));
common/board_f.c:487:		memset(gd->bd, '\0', sizeof(bd_t));
common/board_f.c:489:		      sizeof(bd_t), gd->start_addr_sp);
common/board_f.c:497:	gd->bd->bi_arch_number = CONFIG_MACH_TYPE; /* board id for Linux */
common/board_f.c:504:	gd->start_addr_sp -= sizeof(gd_t);
common/board_f.c:505:	gd->new_gd = (gd_t *)map_sysmem(gd->start_addr_sp, sizeof(gd_t));
common/board_f.c:507:	      sizeof(gd_t), gd->start_addr_sp);
common/board_f.c:519:	if (gd->fdt_blob) {
common/board_f.c:520:		gd->fdt_size = ALIGN(fdt_totalsize(gd->fdt_blob) + 0x1000, 32);
common/board_f.c:522:		gd->start_addr_sp -= gd->fdt_size;
common/board_f.c:523:		gd->new_fdt = map_sysmem(gd->start_addr_sp, gd->fdt_size);
common/board_f.c:525:		      gd->fdt_size, gd->start_addr_sp);
common/board_f.c:537:	gd->start_addr_sp -= size;
common/board_f.c:538:	gd->new_bootstage = map_sysmem(gd->start_addr_sp, size);
common/board_f.c:540:	      gd->start_addr_sp);
common/board_f.c:554:	gd->start_addr_sp -= 16;
common/board_f.c:555:	gd->start_addr_sp &= ~0xf;
common/board_f.c:558:	 * let the architecture-specific code tailor gd->start_addr_sp and
common/board_f.c:559:	 * gd->irq_sp
common/board_f.c:566:	debug("New Stack Pointer is: %08lx\n", gd->start_addr_sp);
common/board_f.c:575:	bd_t *bd = gd->bd;
common/board_f.c:581:	bd->bi_memsize = gd->ram_size;			/* size in bytes */
common/board_f.c:605:	bd_t *bd = gd->bd;
common/board_f.c:607:	bd->bi_intfreq = gd->cpu_clk;	/* Internal Freq, in Hz */
common/board_f.c:608:	bd->bi_busfreq = gd->bus_clk;	/* Bus Freq,      in Hz */
common/board_f.c:610:	bd->bi_cpmfreq = gd->arch.cpm_clk;
common/board_f.c:611:	bd->bi_brgfreq = gd->arch.brg_clk;
common/board_f.c:612:	bd->bi_sccfreq = gd->arch.scc_clk;
common/board_f.c:613:	bd->bi_vco = gd->arch.vco_out;
common/board_f.c:616:	bd->bi_pcifreq = gd->pci_clk;
common/board_f.c:619:	bd->bi_inpfreq = gd->arch.inp_clk;	/* input Freq in Hz */
common/board_f.c:620:	bd->bi_vcofreq = gd->arch.vco_clk;	/* vco Freq in Hz */
common/board_f.c:621:	bd->bi_flbfreq = gd->arch.flb_clk;	/* flexbus Freq in Hz */
common/board_f.c:641:	if (gd->flags & GD_FLG_SKIP_RELOC)
common/board_f.c:643:	if (gd->new_fdt) {
common/board_f.c:644:		memcpy(gd->new_fdt, gd->fdt_blob, gd->fdt_size);
common/board_f.c:645:		gd->fdt_blob = gd->new_fdt;
common/board_f.c:655:	if (gd->flags & GD_FLG_SKIP_RELOC)
common/board_f.c:657:	if (gd->new_bootstage) {
common/board_f.c:661:		      gd->bootstage, gd->new_bootstage, size);
common/board_f.c:662:		memcpy(gd->new_bootstage, gd->bootstage, size);
common/board_f.c:663:		gd->bootstage = gd->new_bootstage;
common/board_f.c:672:	if (gd->flags & GD_FLG_SKIP_RELOC) {
common/board_f.c:679:	gd->reloc_off = gd->relocaddr - (unsigned long)__image_copy_start;
common/board_f.c:685:	gd->reloc_off = gd->relocaddr - (CONFIG_SYS_TEXT_BASE + 0x400);
common/board_f.c:687:	gd->reloc_off = gd->relocaddr - CONFIG_SYS_TEXT_BASE;
common/board_f.c:690:	memcpy(gd->new_gd, (char *)gd, sizeof(gd_t));
common/board_f.c:692:	debug("Relocation Offset is: %08lx\n", gd->reloc_off);
common/board_f.c:694:	      gd->relocaddr, (ulong)map_to_sysmem(gd->new_gd),
common/board_f.c:695:	      gd->start_addr_sp);
common/board_f.c:703:	return board_fix_fdt((void *)gd->fdt_blob);
common/board_f.c:713:	if (gd->flags & GD_FLG_SKIP_RELOC)
common/board_f.c:730:	arch_setup_gd(gd->new_gd);
common/board_f.c:731:	board_init_f_r_trampoline(gd->start_addr_sp);
common/board_f.c:733:	relocate_code(gd->start_addr_sp, gd->new_gd, gd->relocaddr);
common/board_f.c:954:	gd->flags = boot_flags;
common/board_f.c:955:	gd->have_console = 0;
common/board_f.c:977: *  - Global Data (gd->xxx) is read/write
common/board_f.c:1006:	gd->flags &= ~(GD_FLG_SERIAL_READY | GD_FLG_LOG_READY);
common/board_f.c:1008:	gd->timer = NULL;
common/board_f.c:1016:	(board_init_r + gd->reloc_off)((gd_t *)gd, gd->relocaddr);
common/exports.c:17:#define EXPORT_FUNC(f, a, x, ...)  gd->jt->x = f;
common/exports.c:28:	gd->jt = malloc(sizeof(struct jt_funcs));
common/board_r.c:88:	trace_init(gd->trace_buff, CONFIG_TRACE_BUFFER_SIZE);
common/board_r.c:97:	gd->flags |= GD_FLG_RELOC | GD_FLG_FULL_MALLOC_INIT;
common/board_r.c:127:	monitor_flash_len = (ulong)&__init_end - gd->relocaddr;
common/board_r.c:131:	 * The gd->cpu pointer is set to an address in flash before relocation.
common/board_r.c:133:	 * TODO: why not just add gd->reloc_ofs?
common/board_r.c:135:	gd->arch.cpu += gd->relocaddr - CONFIG_SYS_MONITOR_BASE;
common/board_r.c:148:	gd->env_addr += gd->reloc_off;
common/board_r.c:155:	gd->fdt_blob += gd->reloc_off;
common/board_r.c:158:	efi_runtime_relocate(gd->relocaddr, NULL);
common/board_r.c:177:	trap_init(gd->relocaddr);
common/board_r.c:235:	debug("Pre-reloc malloc() used %#lx bytes (%ld KB)\n", gd->malloc_ptr,
common/board_r.c:236:	      gd->malloc_ptr / 1024);
common/board_r.c:239:	malloc_start = gd->relocaddr - TOTAL_MALLOC_LEN;
common/board_r.c:268:	ret = of_live_build(gd->fdt_blob, (struct device_node **)&gd->of_root);
common/board_r.c:283:	gd->dm_root_f = gd->dm_root;
common/board_r.c:284:	gd->dm_root = NULL;
common/board_r.c:286:	gd->timer = NULL;
common/board_r.c:317:	debug("Now running in RAM - U-Boot at: %08lx\n", gd->relocaddr);
common/board_r.c:334:	bd_t *bd = gd->bd;
common/board_r.c:421:	mmc_initialize(gd->bd);
common/board_r.c:440:	return fdtdec_get_config_int(gd->fdt_blob, "load-environment", 1);
common/board_r.c:456:	env_set_addr("fdtcontroladdr", gd->fdt_blob);
common/board_r.c:468:	gd->bd->bi_boot_params = (ulong)malloc(CONFIG_SYS_BOOTPARAMS_LEN);
common/board_r.c:469:	if (!gd->bd->bi_boot_params) {
common/board_r.c:504:	bd_t *bd = gd->bd;
common/board_r.c:622:	sprintf(memsz, "%ldk", (long int)((gd->ram_size / 1024) - pram));
common/board_r.c:869:	gd->flags &= ~GD_FLG_LOG_READY;
common/board_r.c:873:		init_sequence_r[i] += gd->reloc_off;
common/console.c:38:	if (console == -1 || (gd->flags & GD_FLG_DEVINIT) == 0)
common/console.c:80:		gd->flags |= GD_FLG_SILENT;
common/console.c:82:		gd->flags &= ~GD_FLG_SILENT;
common/console.c:132:			gd->jt->getc = getc;
common/console.c:133:			gd->jt->tstc = tstc;
common/console.c:136:			gd->jt->putc  = putc;
common/console.c:137:			gd->jt->puts  = puts;
common/console.c:138:			gd->jt->printf = printf;
common/console.c:388:	if (gd->flags & GD_FLG_DISABLE_CONSOLE)
common/console.c:392:	if (!gd->have_console)
common/console.c:396:	if (gd->console_in.start) {
common/console.c:399:		ch = membuff_getbyte(&gd->console_in);
common/console.c:404:	if (gd->flags & GD_FLG_DEVINIT) {
common/console.c:416:	if (gd->flags & GD_FLG_DISABLE_CONSOLE)
common/console.c:420:	if (!gd->have_console)
common/console.c:423:	if (gd->console_in.start) {
common/console.c:424:		if (membuff_peekbyte(&gd->console_in) != -1)
common/console.c:428:	if (gd->flags & GD_FLG_DEVINIT) {
common/console.c:449:	buffer[CIRC_BUF_IDX(gd->precon_buf_idx++)] = c;
common/console.c:467:	if (gd->precon_buf_idx > CONFIG_PRE_CON_BUF_SZ)
common/console.c:468:		in = gd->precon_buf_idx - CONFIG_PRE_CON_BUF_SZ;
common/console.c:470:	while (in < gd->precon_buf_idx)
common/console.c:495:	if (!gd || !(gd->flags & GD_FLG_SERIAL_READY)) {
common/console.c:502:	if (!gd || !(gd->flags & GD_FLG_SERIAL_READY)) {
common/console.c:510:	if ((gd->flags & GD_FLG_RECORD) && gd->console_out.start)
common/console.c:511:		membuff_putbyte(&gd->console_out, c);
common/console.c:514:	if (gd->flags & GD_FLG_SILENT)
common/console.c:519:	if (gd->flags & GD_FLG_DISABLE_CONSOLE)
common/console.c:523:	if (!gd->have_console)
common/console.c:526:	if (gd->flags & GD_FLG_DEVINIT) {
common/console.c:539:	if (!gd || !(gd->flags & GD_FLG_SERIAL_READY)) {
common/console.c:551:	if ((gd->flags & GD_FLG_RECORD) && gd->console_out.start)
common/console.c:552:		membuff_put(&gd->console_out, s, strlen(s));
common/console.c:555:	if (gd->flags & GD_FLG_SILENT)
common/console.c:560:	if (gd->flags & GD_FLG_DISABLE_CONSOLE)
common/console.c:564:	if (!gd->have_console)
common/console.c:567:	if (gd->flags & GD_FLG_DEVINIT) {
common/console.c:582:	ret = membuff_new(&gd->console_out, CONFIG_CONSOLE_RECORD_OUT_SIZE);
common/console.c:585:	ret = membuff_new(&gd->console_in, CONFIG_CONSOLE_RECORD_IN_SIZE);
common/console.c:592:	membuff_purge(&gd->console_out);
common/console.c:593:	membuff_purge(&gd->console_in);
common/console.c:599:	gd->flags |= GD_FLG_RECORD;
common/console.c:608:	if (!ctrlc_disabled && gd->have_console) {
common/console.c:720:		gd->flags |= GD_FLG_SILENT;
common/console.c:722:		gd->flags &= ~GD_FLG_SILENT;
common/console.c:742:	gd->have_console = 1;
common/console.c:790:	gd->jt->getc  = serial_getc;
common/console.c:791:	gd->jt->tstc  = serial_tstc;
common/console.c:792:	gd->jt->putc  = serial_putc;
common/console.c:793:	gd->jt->puts  = serial_puts;
common/console.c:794:	gd->jt->printf = serial_printf;
common/console.c:858:	gd->flags |= GD_FLG_DEVINIT;	/* device initialization completed */
common/console.c:890:		if (!(gd->flags & GD_FLG_SILENT))
common/console.c:936:	gd->flags |= GD_FLG_DEVINIT;	/* device initialization completed */
common/autoboot.c:267:		gd->flags &= ~GD_FLG_SILENT;
common/autoboot.c:279:	addr = fdtdec_get_config_int(gd->fdt_blob, "kernel-offset", 0);
common/autoboot.c:284:	addr = fdtdec_get_config_int(gd->fdt_blob, "rootdisk-offset", 0);
common/autoboot.c:301:	bootdelay = fdtdec_get_config_int(gd->fdt_blob, "bootdelay",
common/autoboot.c:313:	if (gd->flags & GD_FLG_POSTFAIL) {
common/autoboot.c:322:	process_fdt_options(gd->fdt_blob);
common/splash_source.c:90:	if (bmp_load_addr + bmp_header_size >= gd->start_addr_sp)
common/splash_source.c:100:	if (bmp_load_addr + bmp_size >= gd->start_addr_sp)
common/splash_source.c:248:	if (bmp_load_addr + bmp_size >= gd->start_addr_sp) {
common/init/board_init.c:84: * Do not use 'gd->' until arch_setup_gd() has been called!
common/init/board_init.c:125:	gd->malloc_base = base;
common/cli.c:8: * JinHua Luo, GuangDong Linux Center, <luo.jinhua@gd-linux.com>
common/cli.c:148:	char *env = fdtdec_get_config_string(gd->fdt_blob, "bootcmd");
common/cli.c:156:	return fdtdec_get_config_int(gd->fdt_blob, "bootsecure", 0) != 0;
common/log_console.c:16:	int fmt = gd->log_fmt;
common/spl/spl_spi.c:94:	payload_offs = fdtdec_get_config_int(gd->fdt_blob,
common/spl/spl.c:328:		gd->malloc_base = CONFIG_MALLOC_F_ADDR;
common/spl/spl.c:330:		gd->malloc_limit = CONFIG_VAL(SYS_MALLOC_F_LEN);
common/spl/spl.c:331:		gd->malloc_ptr = 0;
common/spl/spl.c:364:	if (!gd->bd)
common/spl/spl.c:365:		gd->bd = &bdata;
common/spl/spl.c:377:	gd->flags |= GD_FLG_SPL_EARLY_INIT;
common/spl/spl.c:390:	if (!(gd->flags & GD_FLG_SPL_EARLY_INIT)) {
common/spl/spl.c:395:	gd->flags |= GD_FLG_SPL_INIT;
common/spl/spl.c:491:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
common/spl/spl.c:493:	if (!(gd->flags & GD_FLG_SPL_INIT)) {
common/spl/spl.c:557:	debug("SPL malloc() used %#lx bytes (%ld KB)\n", gd->malloc_ptr,
common/spl/spl.c:558:	      gd->malloc_ptr / 1024);
common/spl/spl.c:582:	gd->baudrate = CONFIG_BAUDRATE;
common/spl/spl.c:586:	gd->have_console = 1;
common/spl/spl.c:625:		gd->malloc_base = ptr;
common/spl/spl.c:626:		gd->malloc_limit = CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN;
common/spl/spl.c:627:		gd->malloc_ptr = 0;
drivers/pinctrl/pinctrl-generic.c:246:	const void *fdt = gd->fdt_blob;
drivers/pinctrl/pinctrl-generic.c:301:	const void *fdt = gd->fdt_blob;
drivers/pinctrl/pinctrl-at91.c:366:	const void *blob = gd->fdt_blob;
drivers/pinctrl/pinctrl-uclass.c:114:	bool pre_reloc_only = !(gd->flags & GD_FLG_RELOC);
drivers/pinctrl/rockchip/pinctrl_rk3188.c:892:	const void *blob = gd->fdt_blob;
drivers/pinctrl/rockchip/pinctrl_rk3288.c:765:	const void *blob = gd->fdt_blob;
drivers/pinctrl/rockchip/pinctrl_rk322x.c:821:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(periph),
drivers/pinctrl/rockchip/pinctrl_rk3128.c:115:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(periph),
drivers/pinctrl/pinctrl-at91-pio4.c:110:	const void *blob = gd->fdt_blob;
drivers/pinctrl/ath79/pinctrl_qca953x.c:97:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(periph),
drivers/pinctrl/ath79/pinctrl_ar933x.c:77:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(periph),
drivers/pinctrl/pinctrl_pic32.c:255:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(periph),
drivers/pinctrl/pinctrl_pic32.c:311:	void *fdt = (void *)gd->fdt_blob;
drivers/pinctrl/pinctrl-single.c:77:	const void *fdt = gd->fdt_blob;
drivers/pinctrl/pinctrl-single.c:103:	pdata->width = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/pinctrl/pinctrl-single.c:106:	res = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev),
drivers/pinctrl/pinctrl-single.c:119:	pdata->mask = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/pinctrl/mvebu/pinctrl-mvebu.c:41:	const void *blob = gd->fdt_blob;
drivers/pinctrl/mvebu/pinctrl-mvebu.c:69:	const void *blob = gd->fdt_blob;
drivers/pinctrl/mvebu/pinctrl-mvebu.c:130:	const void *blob = gd->fdt_blob;
drivers/pinctrl/mvebu/pinctrl-mvebu.c:184:	const void *blob = gd->fdt_blob;
drivers/pinctrl/mvebu/pinctrl-armada-37xx.c:537:	const void *blob = gd->fdt_blob;
drivers/pinctrl/pinctrl-sti.c:212:	const void *blob = gd->fdt_blob;
drivers/pinctrl/nxp/pinctrl-imx.c:36:	prop = fdt_getprop(gd->fdt_blob, node, "fsl,pins", &size);
drivers/pinctrl/nxp/pinctrl-imx.c:52:	if (fdtdec_get_int_array(gd->fdt_blob, node, "fsl,pins",
drivers/pinctrl/nxp/pinctrl-imx.c:196:	addr = fdtdec_get_addr_size(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/pinctrl/nxp/pinctrl-imx.c:207:	info->mux_mask = fdtdec_get_int(gd->fdt_blob, node, "fsl,mux_mask", 0);
drivers/pinctrl/nxp/pinctrl-imx.c:212:	if (fdtdec_get_bool(gd->fdt_blob, node, "fsl,input-sel")) {
drivers/pinctrl/nxp/pinctrl-imx.c:213:		ret = fdtdec_parse_phandle_with_args(gd->fdt_blob,
drivers/pinctrl/nxp/pinctrl-imx.c:221:		addr = fdtdec_get_addr_size(gd->fdt_blob, arg.node, "reg",
drivers/pinctrl/meson/pinctrl-meson.c:264:	index = fdt_stringlist_search(gd->fdt_blob, offset, "reg-names", name);
drivers/pinctrl/meson/pinctrl-meson.c:268:	reg = fdt_getprop(gd->fdt_blob, offset, "reg", &len);
drivers/pinctrl/meson/pinctrl-meson.c:274:	return fdt_translate_address((void *)gd->fdt_blob, offset, reg);
drivers/pinctrl/meson/pinctrl-meson.c:287:	na = fdt_address_cells(gd->fdt_blob, dev_of_offset(dev->parent));
drivers/pinctrl/meson/pinctrl-meson.c:293:	ns = fdt_size_cells(gd->fdt_blob, dev_of_offset(dev->parent));
drivers/pinctrl/meson/pinctrl-meson.c:299:	fdt_for_each_subnode(node, gd->fdt_blob, dev_of_offset(dev)) {
drivers/pinctrl/meson/pinctrl-meson.c:300:		if (fdt_getprop(gd->fdt_blob, node, "gpio-controller", &len)) {
drivers/pinctrl/exynos/pinctrl-exynos.c:71:	const void *fdt = gd->fdt_blob;
drivers/pinctrl/pinctrl_stm32.c:76:	gpio_ctl->speed = fdtdec_get_int(gd->fdt_blob, node, "slew-rate", 0);
drivers/pinctrl/pinctrl_stm32.c:78:	if (fdtdec_get_bool(gd->fdt_blob, node, "drive-open-drain"))
drivers/pinctrl/pinctrl_stm32.c:83:	if (fdtdec_get_bool(gd->fdt_blob, node, "bias-pull-up"))
drivers/pinctrl/pinctrl_stm32.c:85:	else if (fdtdec_get_bool(gd->fdt_blob, node, "bias-pull-down"))
drivers/pinctrl/pinctrl_stm32.c:106:	fdt_for_each_subnode(offset, gd->fdt_blob, offset) {
drivers/pinctrl/pinctrl_stm32.c:111:		len = fdtdec_get_int_array_count(gd->fdt_blob, offset,
drivers/pinctrl/pinctrl_stm32.c:148:	const void *fdt = gd->fdt_blob;
drivers/spmi/spmi-msm.c:159:	priv->spmi_core = fdtdec_get_addr_size_auto_parent(gd->fdt_blob,
drivers/spmi/spmi-msm.c:161:	priv->spmi_obs = fdtdec_get_addr_size_auto_parent(gd->fdt_blob,
drivers/mailbox/k3-sec-proxy.c:309:	const void *blob = gd->fdt_blob;
drivers/ddr/altera/sdram_s10.c:338:		gd->ram_size = PHYS_SDRAM_1_SIZE;
drivers/ddr/altera/sdram_s10.c:340:		gd->ram_size = size;
drivers/ddr/altera/sdram_arria10.c:230:	gd->arch.tlb_addr = 0x4000;
drivers/ddr/altera/sdram_arria10.c:231:	gd->arch.tlb_size = PGTABLE_SIZE;
drivers/ddr/altera/sdram_arria10.c:726:		gd->ram_size = PHYS_SDRAM_1_SIZE;
drivers/ddr/altera/sdram_arria10.c:728:		gd->ram_size = DDR_SIZE_2GB_HEX;
drivers/ddr/altera/sdram_arria10.c:730:		gd->ram_size = (u32)size;
drivers/ddr/altera/sdram_arria10.c:735:	if (of_sdram_firewall_setup(gd->fdt_blob))
drivers/ddr/altera/sdram_arria10.c:739:		sdram_init_ecc_bits(gd->ram_size);
drivers/ram/rockchip/sdram_rk322x.c:719:	const void *blob = gd->fdt_blob;
drivers/ram/sandbox_ram.c:18:	info->size = gd->ram_size;
drivers/ram/mpc83xx_sdram.c:110:	/* FIXME(mario.six@gdsys.cc): Set gd->ram_size? */
drivers/ram/mpc83xx_sdram.c:118:		return gd->ram_size;
drivers/ram/mpc83xx_sdram.c:121:	return ((gd->ram_size > CONFIG_MAX_MEM_MAPPED) ?
drivers/ram/mpc83xx_sdram.c:122:		CONFIG_MAX_MEM_MAPPED : gd->ram_size);
drivers/ram/mpc83xx_sdram.c:1068:	gd->ram_size = priv->total_size;
drivers/i2c/fsl_i2c.c:206:		return gd->arch.i2c2_clk;	/* I2C2 clock */
drivers/i2c/fsl_i2c.c:208:		return gd->arch.i2c1_clk;	/* I2C1 clock */
drivers/i2c/fsl_i2c.c:591:		dev->i2c_clk = dev->index ? gd->arch.i2c2_clk :
drivers/i2c/fsl_i2c.c:592:					    gd->arch.i2c1_clk;
drivers/i2c/mvtwsi.c:793:	dev->index = fdtdec_get_int(gd->fdt_blob, dev_of_offset(bus),
drivers/i2c/mvtwsi.c:795:	dev->slaveadd = fdtdec_get_int(gd->fdt_blob, dev_of_offset(bus),
drivers/i2c/mvtwsi.c:797:	dev->speed = fdtdec_get_int(gd->fdt_blob, dev_of_offset(bus),
drivers/i2c/s3c24x0_i2c.c:306:	const void *blob = gd->fdt_blob;
drivers/i2c/mxc_i2c.c:808:	const void *fdt = gd->fdt_blob;
drivers/i2c/exynos_hs_i2c.c:520:	const void *blob = gd->fdt_blob;
drivers/i2c/cros_ec_tunnel.c:35:	const void *blob = gd->fdt_blob;
drivers/i2c/at91_i2c.c:223:	const void *blob = gd->fdt_blob;
drivers/i2c/sh_i2c.c:210:	if (!(gd->flags & GD_FLG_RELOC))
drivers/i2c/i2c-gpio.c:311:	const void *blob = gd->fdt_blob;
drivers/i2c/tegra186_bpmp_i2c.c:92:	priv->bpmp_bus_id = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/i2c/i2c_core.c:179:	if (gd->flags & GD_FLG_RELOC) {
drivers/i2c/i2c_core.c:219:	return gd->cur_i2c_bus;
drivers/i2c/i2c_core.c:259:	gd->cur_i2c_bus = bus;
drivers/i2c/i2c_core.c:309:	if (gd->flags & GD_FLG_RELOC)
drivers/i2c/muxes/i2c-mux-uclass.c:42:	channel = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "reg", -1);
drivers/i2c/muxes/i2c-arb-gpio-challenge.c:90:	const void *blob = gd->fdt_blob;
drivers/i2c/muxes/pca954x.c:104:	priv->addr = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "reg", 0);
drivers/i2c/muxes/i2c-mux-gpio.c:71:	const void *fdt = gd->fdt_blob;
drivers/remoteproc/ti_power_proc.c:37:	const void *blob = gd->fdt_blob;
drivers/remoteproc/rproc-uclass.c:120:		const void *blob = gd->fdt_blob;
drivers/mmc/omap_hsmmc.c:1590:	const void *fdt = gd->fdt_blob;
drivers/mmc/omap_hsmmc.c:1613:	const void *fdt = gd->fdt_blob;
drivers/mmc/omap_hsmmc.c:1629:	const void *fdt = gd->fdt_blob;
drivers/mmc/omap_hsmmc.c:1712:	const void *fdt = gd->fdt_blob;
drivers/mmc/omap_hsmmc.c:1826:	const void *fdt = gd->fdt_blob;
drivers/mmc/pic32_sdhci.c:34:	const void *fdt = gd->fdt_blob;
drivers/mmc/pic32_sdhci.c:47:	host->bus_width	= fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/pic32_sdhci.c:51:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/sh_mmcif.c:704:	switch (fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "bus-width",
drivers/mmc/xenon_sdhci.c:407:	switch (fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "bus-width",
drivers/mmc/xenon_sdhci.c:459:	name = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "marvell,pad-type",
drivers/mmc/tmio-common.c:757:	if (fdt_get_property(gd->fdt_blob, dev_of_offset(dev), "non-removable",
drivers/mmc/socfpga_dw_mmc.c:107:	fifo_depth = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/socfpga_dw_mmc.c:116:	host->buswidth = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/socfpga_dw_mmc.c:127:	priv->drvsel = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/socfpga_dw_mmc.c:129:	priv->smplsel = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/atmel_sdhci.c:75:	host->bus_width	= fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/exynos_dw_mmc.c:272:	err = exynos_dwmci_get_config(gd->fdt_blob, dev_of_offset(dev), host,
drivers/mmc/fsl_esdhc.c:1303:	cfg->sdhc_clk = gd->arch.sdhc_clk;
drivers/mmc/fsl_esdhc.c:1315:	gd->arch.sdhc_adapter = card_id;
drivers/mmc/fsl_esdhc.c:1369:			       gd->arch.sdhc_clk, 1);
drivers/mmc/fsl_esdhc.c:1372:			       gd->arch.sdhc_clk, 1);
drivers/mmc/fsl_esdhc.c:1376:			       (u32)(gd->arch.sdhc_adapter), 1);
drivers/mmc/fsl_esdhc.c:1392:	const void *fdt = gd->fdt_blob;
drivers/mmc/ftsdc010_mci.c:397:	chip->buswidth = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/ftsdc010_mci.c:400:	priv->fifo_depth = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/ftsdc010_mci.c:402:	priv->fifo_mode = fdtdec_get_bool(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/ftsdc010_mci.c:404:	if (fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/ftsdc010_mci.c:406:		int val = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/sti_sdhci.c:120:	host->bus_width = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/s5p_sdhci.c:249:	ret = sdhci_get_config(gd->fdt_blob, dev_of_offset(dev), host);
drivers/mmc/renesas-sdhi.c:341:		ret = fdt_get_resource(gd->fdt_blob, dev_of_offset(dev),
drivers/mmc/msm_sdhci.c:53:	uint clk_rate = fdtdec_get_uint(gd->fdt_blob, node, "clock-frequency",
drivers/mmc/msm_sdhci.c:61:	ret = fdtdec_get_int_array(gd->fdt_blob, node, "clock", clkd, 2);
drivers/mmc/msm_sdhci.c:65:	clk_offset = fdt_node_offset_by_phandle(gd->fdt_blob, clkd[0]);
drivers/mmc/msm_sdhci.c:174:	host->bus_width = fdtdec_get_int(gd->fdt_blob, node, "bus-width", 4);
drivers/mmc/msm_sdhci.c:175:	host->index = fdtdec_get_uint(gd->fdt_blob, node, "index", 0);
drivers/mmc/msm_sdhci.c:176:	priv->base = (void *)fdtdec_get_addr_size_auto_parent(gd->fdt_blob,
drivers/mmc/mvebu_mmc.c:362:		size = gd->bd->bi_dram[i].size;
drivers/mmc/mvebu_mmc.c:363:		base = gd->bd->bi_dram[i].start;
drivers/mmc/sh_sdhi.c:862:	switch (fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "bus-width",
drivers/mmc/sdhci-cadence.c:268:	ret = sdhci_cdns_phy_init(plat, gd->fdt_blob, dev_of_offset(dev));
drivers/usb/common/common.c:25:	const void *fdt = gd->fdt_blob;
drivers/usb/common/common.c:53:	const void *fdt = gd->fdt_blob;
drivers/usb/host/ehci-fsl.c:63:	prop = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy_type",
drivers/usb/host/ehci-marvell.c:188:		size = gd->bd->bi_dram[i].size;
drivers/usb/host/ehci-marvell.c:189:		base = gd->bd->bi_dram[i].start;
drivers/usb/host/ehci-mx6.c:438:	const void *blob = gd->fdt_blob;
drivers/usb/host/ehci-mx6.c:486:	mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "dr_mode", NULL);
drivers/usb/host/xhci-exynos5.c:56:	const void *blob = gd->fdt_blob;
drivers/usb/host/dwc3-sti-glue.c:112:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev),
drivers/usb/host/dwc3-sti-glue.c:159:	dwc3_node = fdt_first_subnode(gd->fdt_blob, dev_of_offset(dev));
drivers/usb/host/dwc3-sti-glue.c:166:	if (fdt_node_check_compatible(gd->fdt_blob, dwc3_node,
drivers/usb/host/xhci-zynqmp.c:124:	const void *blob = gd->fdt_blob;
drivers/usb/host/ehci-vf.c:219:	const void *dt_blob = gd->fdt_blob;
drivers/usb/host/ehci-exynos.c:47:	const void *blob = gd->fdt_blob;
drivers/usb/musb-new/pic32.c:220:	void *fdt = (void *)gd->fdt_blob;
drivers/usb/musb-new/omap2430.c:151:	const void *fdt = gd->fdt_blob;
drivers/usb/musb-new/ti-musb.c:42:	const void *fdt = gd->fdt_blob;
drivers/usb/musb-new/ti-musb.c:84:	const void *fdt = gd->fdt_blob;
drivers/usb/musb-new/ti-musb.c:179:	const void *fdt = gd->fdt_blob;
drivers/usb/musb-new/ti-musb.c:207:	const void *fdt = gd->fdt_blob;
drivers/usb/dwc3/dwc3-generic.c:103:	const void *fdt = gd->fdt_blob;
drivers/usb/phy/rockchip_usb2_phy.c:74:		if (fdt_node_check_compatible(gd->fdt_blob, pdata->phy_of_node,
drivers/pci/pcie_dw_mvebu.c:441:	u32 size = gd->ram_size;
drivers/pci/pcie_layerscape.c:439:	const void *fdt = gd->fdt_blob;
drivers/pci/pcie_xilinx.c:147:	err = fdt_get_resource(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/pci/pcie_intel_fpga.c:387:	ret = fdt_get_named_resource(gd->fdt_blob, node, "reg", "reg-names",
drivers/pci/pcie_intel_fpga.c:398:	ret = fdt_get_named_resource(gd->fdt_blob, node, "reg", "reg-names",
drivers/pci/pcie_ecam_generic.c:111:	err = fdt_get_resource(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/pci/pci_rom.c:45:	if (gd->arch.prev_sleep_state == ACPI_S3) {
drivers/pci/pci_mvebu.c:410:			       gd->ram_size,
drivers/pci/pci.c:114:	if (gd->hose)
drivers/pci/pci.c:115:		return gd->hose;
drivers/pci/pci.c:427:	if (!gd->pcidelay_done) {
drivers/pci/pci.c:435:		gd->pcidelay_done = 1;
drivers/pci/pci-uclass.c:675:			if (!(gd->flags & GD_FLG_RELOC) &&
drivers/pci/pci-uclass.c:704:	if (!(gd->flags & GD_FLG_RELOC) && !bridge)
drivers/pci/pci-uclass.c:886:	bd_t *bd = gd->bd;
drivers/pci/pci-uclass.c:903:	size = gd->ram_size;
drivers/pci/pci-uclass.c:907:	if (gd->pci_ram_top && gd->pci_ram_top < base + size)
drivers/pci/pci-uclass.c:908:		size = gd->pci_ram_top - base;
drivers/pci/pci-uclass.c:971:	if ((gd->flags & GD_FLG_RELOC) && (bus->seq == 0)) {
drivers/pci/fsl_pci_init.c:88:	u64 sz = min((u64)gd->ram_size, (1ull << 32));
drivers/pci/fsl_pci_init.c:158:	pci_sz = 1ull << __ilog2_u64(gd->ram_size);
drivers/pci/fsl_pci_init.c:160:	if (gd->ram_size > pci_sz)
drivers/pci/fsl_pci_init.c:161:		pci_sz = 1ull << (__ilog2_u64(gd->ram_size) + 1);
drivers/pci/fsl_pci_init.c:189:	if (sz && (((u64)gd->ram_size) < (1ull << 32)))
drivers/pci/fsl_pci_init.c:327:				    ((gd->bus_clk / 1000000) *
drivers/reset/sti-reset.c:200:	node = fdt_node_offset_by_compatible(gd->fdt_blob, -1,
drivers/reset/reset-socfpga.c:80:	const void *blob = gd->fdt_blob;
drivers/input/i8042.c:317:	if (fdtdec_get_bool(gd->fdt_blob, dev_of_offset(dev),
drivers/sysreset/sysreset_mpc83xx.c:85:	int etype = (gd->arch.arbiter_event_attributes & AEATR_EVENT)
drivers/sysreset/sysreset_mpc83xx.c:87:	int mstr_id = (gd->arch.arbiter_event_attributes & AEATR_MSTR_ID)
drivers/sysreset/sysreset_mpc83xx.c:89:	int tbst = (gd->arch.arbiter_event_attributes & AEATR_TBST)
drivers/sysreset/sysreset_mpc83xx.c:91:	int tsize = (gd->arch.arbiter_event_attributes & AEATR_TSIZE)
drivers/sysreset/sysreset_mpc83xx.c:93:	int ttype = (gd->arch.arbiter_event_attributes & AEATR_TTYPE)
drivers/sysreset/sysreset_mpc83xx.c:103:	if (!force && !gd->arch.arbiter_event_address)
drivers/sysreset/sysreset_mpc83xx.c:114:			       "Event Address", gd->arch.arbiter_event_address,
drivers/sysreset/sysreset_mpc83xx.c:122:			       gd->arch.arbiter_event_attributes,
drivers/sysreset/sysreset_mpc83xx.c:123:			       gd->arch.arbiter_event_address);
drivers/sysreset/sysreset_mpc83xx.c:149:	ulong rsr = gd->arch.reset_status;
drivers/sysreset/sysreset_sti.c:38:	ret = fdtdec_parse_phandle_with_args(gd->fdt_blob, dev_of_offset(dev),
drivers/sysreset/sysreset-uclass.c:129:			ops->request += gd->reloc_off;
drivers/bootcount/bootcount_ram.c:28:		size += gd->bd->bi_dram[i].size;
drivers/bootcount/bootcount_ram.c:51:		size += gd->bd->bi_dram[i].size;
drivers/timer/mpc83xx_timer.c:148:	struct udevice *timer = gd->timer;
drivers/timer/mpc83xx_timer.c:152:	 * During initialization, gd->timer might not be set yet, but the timer
drivers/timer/sti-timer.c:52:	addr = fdtdec_get_addr(gd->fdt_blob, dev_of_offset(dev), "reg");
drivers/timer/timer-uclass.c:79:	if (count < gd->timebase_l)
drivers/timer/timer-uclass.c:80:		gd->timebase_h++;
drivers/timer/timer-uclass.c:81:	gd->timebase_l = count;
drivers/timer/timer-uclass.c:82:	return ((u64)gd->timebase_h << 32) | gd->timebase_l;
drivers/timer/timer-uclass.c:91:	if (gd->timer)
drivers/timer/timer-uclass.c:95:	 * Directly access gd->dm_root to suppress error messages, if the
drivers/timer/timer-uclass.c:98:	if (gd->dm_root == NULL)
drivers/timer/timer-uclass.c:127:		gd->timer = dev;
drivers/timer/rockchip_timer.c:52:		rate = timer_get_rate(gd->timer);
drivers/timer/rockchip_timer.c:53:		timer_get_count(gd->timer, &ticks);
drivers/timer/cadence-ttc.c:45:		rate = timer_get_rate(gd->timer);
drivers/timer/cadence-ttc.c:46:		timer_get_count(gd->timer, &ticks);
drivers/timer/tsc_timer.c:26:	if (gd->arch.x86_vendor != X86_VENDOR_INTEL)
drivers/timer/tsc_timer.c:102:	if (gd->arch.x86_vendor != X86_VENDOR_INTEL)
drivers/timer/tsc_timer.c:105:	cpu_index = match_cpu(gd->arch.x86, gd->arch.x86_model);
drivers/timer/tsc_timer.c:339:	*count = now_tick - gd->arch.tsc_base;
drivers/timer/tsc_timer.c:346:	if (gd->arch.tsc_base)
drivers/timer/tsc_timer.c:348:	gd->arch.tsc_base = rdtsc();
drivers/timer/tsc_timer.c:350:	if (!gd->arch.clock_rate) {
drivers/timer/tsc_timer.c:371:		gd->arch.clock_rate = fast_calibrate * 1000000;
drivers/timer/tsc_timer.c:381:	if (!gd->arch.clock_rate) {
drivers/timer/tsc_timer.c:389:		uc_priv->clock_rate = gd->arch.clock_rate;
drivers/timer/tsc_timer.c:404:	return gd->arch.clock_rate;
drivers/timer/tsc_timer.c:409:	return rdtsc() - gd->arch.tsc_base;
drivers/timer/arc_timer.c:53:	id = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "reg", -1);
drivers/serial/serial_s5p.c:189:	plat->port_id = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/serial_linflexuart.c:45:	ibr = (u32) (clk / (16 * gd->baudrate));
drivers/serial/serial_linflexuart.c:46:	fbr = (u32) (clk % (16 * gd->baudrate)) * 16;
drivers/serial/serial_ns16550.c:84:				CONFIG_SYS_NS16550_CLK, gd->baudrate); \
drivers/serial/serial_ns16550.c:151:					     gd->baudrate);
drivers/serial/serial_sti_asc.c:177:	sti_asc_serial_setbrg(dev, gd->baudrate);
drivers/serial/serial_pic32.c:143:	addr = fdtdec_get_addr_size(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/serial/serial.c:64:		if (gd->baudrate == baudrate)
drivers/serial/serial.c:83:		gd->baudrate = baudrate;
drivers/serial/serial.c:143:		dev->start += gd->reloc_off;
drivers/serial/serial.c:145:		dev->stop += gd->reloc_off;
drivers/serial/serial.c:147:		dev->setbrg += gd->reloc_off;
drivers/serial/serial.c:149:		dev->getc += gd->reloc_off;
drivers/serial/serial.c:151:		dev->tstc += gd->reloc_off;
drivers/serial/serial.c:153:		dev->putc += gd->reloc_off;
drivers/serial/serial.c:155:		dev->puts += gd->reloc_off;
drivers/serial/serial.c:319:	if (!(gd->flags & GD_FLG_RELOC))
drivers/serial/serial.c:351:	gd->flags |= GD_FLG_SERIAL_READY;
drivers/serial/serial.c:479:	saved_baud = gd->baudrate;
drivers/serial/serial.c:502:			gd->baudrate = bauds[b];
drivers/serial/serial.c:544:	gd->baudrate = saved_baud;
drivers/serial/serial_zynq.c:143:	if (gd->flags & GD_FLG_RELOC)
drivers/serial/serial_msm.c:156:	uint clk_rate = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/serial_msm.c:164:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev), "clock",
drivers/serial/serial_msm.c:169:	clk_offset = fdt_node_offset_by_phandle(gd->fdt_blob, clkd[0]);
drivers/serial/serial_msm.c:204:	if (gd->flags & GD_FLG_RELOC)
drivers/serial/serial_lpuart.c:174:	_lpuart_serial_setbrg(plat, gd->baudrate);
drivers/serial/serial_lpuart.c:329:		_lpuart32_serial_setbrg_7ulp(plat, gd->baudrate);
drivers/serial/serial_lpuart.c:332:		_lpuart32_serial_setbrg(plat, gd->baudrate);
drivers/serial/serial_lpuart.c:413:	const void *blob = gd->fdt_blob;
drivers/serial/serial-uclass.c:64:	if (node > 0 && !lists_bind_fdt(gd->dm_root, offset_to_ofnode(node),
drivers/serial/serial-uclass.c:75:	const void *blob = gd->fdt_blob;
drivers/serial/serial-uclass.c:84:			gd->cur_serial_dev = dev;
drivers/serial/serial-uclass.c:94:				gd->cur_serial_dev = dev;
drivers/serial/serial-uclass.c:99:				gd->cur_serial_dev = dev;
drivers/serial/serial-uclass.c:123:				gd->cur_serial_dev = dev;
drivers/serial/serial-uclass.c:134:				gd->cur_serial_dev = dev;
drivers/serial/serial-uclass.c:142:			gd->cur_serial_dev = dev;
drivers/serial/serial-uclass.c:161:	gd->flags |= GD_FLG_SERIAL_READY;
drivers/serial/serial-uclass.c:259:	if (gd->cur_serial_dev)
drivers/serial/serial-uclass.c:260:		_serial_putc(gd->cur_serial_dev, ch);
drivers/serial/serial-uclass.c:265:	if (gd->cur_serial_dev)
drivers/serial/serial-uclass.c:266:		_serial_puts(gd->cur_serial_dev, str);
drivers/serial/serial-uclass.c:271:	if (!gd->cur_serial_dev)
drivers/serial/serial-uclass.c:274:	return _serial_getc(gd->cur_serial_dev);
drivers/serial/serial-uclass.c:279:	if (!gd->cur_serial_dev)
drivers/serial/serial-uclass.c:282:	return _serial_tstc(gd->cur_serial_dev);
drivers/serial/serial-uclass.c:289:	if (!gd->cur_serial_dev)
drivers/serial/serial-uclass.c:292:	ops = serial_get_ops(gd->cur_serial_dev);
drivers/serial/serial-uclass.c:294:		ops->setbrg(gd->cur_serial_dev, gd->baudrate);
drivers/serial/serial-uclass.c:301:	if (!gd->cur_serial_dev)
drivers/serial/serial-uclass.c:304:	ops = serial_get_ops(gd->cur_serial_dev);
drivers/serial/serial-uclass.c:306:		return ops->setconfig(gd->cur_serial_dev, config);
drivers/serial/serial-uclass.c:360:		if (gd->baudrate == baudrate)
drivers/serial/serial-uclass.c:379:		gd->baudrate = baudrate;
drivers/serial/serial-uclass.c:413:		ops->setbrg += gd->reloc_off;
drivers/serial/serial-uclass.c:415:		ops->getc += gd->reloc_off;
drivers/serial/serial-uclass.c:417:		ops->putc += gd->reloc_off;
drivers/serial/serial-uclass.c:419:		ops->pending += gd->reloc_off;
drivers/serial/serial-uclass.c:421:		ops->clear += gd->reloc_off;
drivers/serial/serial-uclass.c:423:		ops->setconfig += gd->reloc_off;
drivers/serial/serial-uclass.c:426:		ops->loop += gd->reloc_off
drivers/serial/serial-uclass.c:431:		ret = ops->setbrg(dev, gd->baudrate);
drivers/serial/serial-uclass.c:437:	if (!(gd->flags & GD_FLG_RELOC))
drivers/serial/sandbox.c:192:	colour = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/altera_uart.c:94:	plat->uartclk = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/serial_arc.c:42:	int arc_console_baud = gd->cpu_clk / (baudrate * 4) - 1;
drivers/serial/serial_arc.c:118:	plat->uartclk = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/atmel_usart.c:73:				     CONFIG_USART_ID, gd->baudrate);
drivers/serial/atmel_usart.c:269:	_atmel_serial_init(priv->usart, priv->usart_clk_rate, gd->baudrate);
drivers/serial/serial_mpc8xx.c:40:	int divisor = (gd->cpu_clk + 8 * gd->baudrate) / 16 / gd->baudrate;
drivers/serial/mcfuart.c:49:	counter = (u32) ((gd->bus_clk / 32) + (baudrate / 2));
drivers/serial/mcfuart.c:67:	counter = (u32) ((gd->bus_clk / 32) + (baudrate / 2));
drivers/serial/mcfuart.c:91:	return mcf_serial_init_common(uart_base, port_idx, gd->baudrate);
drivers/serial/mcfuart.c:123:	mcf_serial_setbrg_common(uart, gd->baudrate);
drivers/serial/serial_sh.c:233:		plat->clk = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/serial_sh.c:300:	sh_serial_setbrg_generic(port, CONFIG_SH_SCIF_CLK_FREQ, gd->baudrate);
drivers/serial/ns16550.c:379:		ret = fdtdec_get_pci_addr(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/ns16550.c:384:			ret = fdtdec_get_pci_addr(gd->fdt_blob,
drivers/serial/serial_pxa.c:104:	pxa_setbrg_common(uart_regs, uart_index, gd->baudrate);
drivers/serial/serial_mxc.c:188:	if (!gd->baudrate)
drivers/serial/serial_mxc.c:189:		gd->baudrate = CONFIG_BAUDRATE;
drivers/serial/serial_mxc.c:191:	_mxc_serial_setbrg(mxc_base, clk, gd->baudrate, false);
drivers/serial/serial_mxc.c:334:	plat->use_dte = fdtdec_get_bool(gd->fdt_blob, dev_of_offset(dev),
drivers/serial/serial_pl01x.c:247:	pl01x_serial_init_baud(gd->baudrate);
drivers/gpio/gpio-uclass.c:761:	ret = fdtdec_parse_phandle_with_args(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/gpio-uclass.c:865:			ops->request += gd->reloc_off;
drivers/gpio/gpio-uclass.c:867:			ops->free += gd->reloc_off;
drivers/gpio/gpio-uclass.c:869:			ops->direction_input += gd->reloc_off;
drivers/gpio/gpio-uclass.c:871:			ops->direction_output += gd->reloc_off;
drivers/gpio/gpio-uclass.c:873:			ops->get_value += gd->reloc_off;
drivers/gpio/gpio-uclass.c:875:			ops->set_value += gd->reloc_off;
drivers/gpio/gpio-uclass.c:877:			ops->get_open_drain += gd->reloc_off;
drivers/gpio/gpio-uclass.c:879:			ops->set_open_drain += gd->reloc_off;
drivers/gpio/gpio-uclass.c:881:			ops->get_function += gd->reloc_off;
drivers/gpio/gpio-uclass.c:883:			ops->xlate += gd->reloc_off;
drivers/gpio/atmel_pio4.c:309:	uc_priv->bank_name = fdt_get_name(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/vybrid_gpio.c:118:	plat->port_name = fdt_get_name(gd->fdt_blob, dev_of_offset(dev), NULL);
drivers/gpio/da8xx_gpio.c:525:	const void *fdt = gd->fdt_blob;
drivers/gpio/altera_pio.c:94:	plat->gpio_count = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/altera_pio.c:96:	plat->bank_name = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/pic32_gpio.c:135:	addr = fdtdec_get_addr_size(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/gpio/pcf8575_gpio.c:133:	uc_priv->gpio_count = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/pcf8575_gpio.c:135:	uc_priv->bank_name = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/pcf8575_gpio.c:138:		uc_priv->bank_name = fdt_get_name(gd->fdt_blob,
drivers/gpio/pcf8575_gpio.c:141:	n_latch = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/intel_broadwell_gpio.c:152:	bank = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "reg", -1);
drivers/gpio/intel_broadwell_gpio.c:159:	plat->bank_name = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/74x164_gpio.c:131:	const void *fdt = gd->fdt_blob;
drivers/gpio/msm_gpio.c:108:	uc_priv->gpio_count = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/msm_gpio.c:110:	uc_priv->bank_name = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/s5p_gpio.c:311:	const void *blob = gd->fdt_blob;
drivers/gpio/gpio-uniphier.c:153:	uc_priv->gpio_count = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/gpio-rcar.c:152:	ret = fdtdec_parse_phandle_with_args(gd->fdt_blob, node, "gpio-ranges",
drivers/gpio/intel_ich6_gpio.c:106:	offset = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), "reg", -1);
drivers/gpio/intel_ich6_gpio.c:113:	plat->bank_name = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/intel_ich6_gpio.c:132:	prop = fdt_getprop(gd->fdt_blob, dev_of_offset(dev),
drivers/gpio/omap_gpio.c:331:	plat->port_name = fdt_get_name(gd->fdt_blob, dev_of_offset(dev), NULL);
drivers/gpio/dwapb_gpio.c:153:	const void *blob = gd->fdt_blob;
drivers/clk/clk_zynq.c:468:	priv->ps_clk_freq = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(dev),
drivers/clk/clk-uclass.c:247:	if (!(gd->flags & GD_FLG_RELOC))
drivers/clk/rockchip/clk_rk3288.c:953:	if (!(gd->flags & GD_FLG_RELOC)) {
drivers/clk/renesas/clk-rcar-gen3.c:369:	ret = fdt_node_offset_by_compatible(gd->fdt_blob, -1, info->reset_node);
drivers/clk/renesas/clk-rcar-gen3.c:373:	rst_base = fdtdec_get_addr(gd->fdt_blob, ret, "reg");
drivers/clk/renesas/clk-rcar-gen2.c:244:	ret = fdt_node_offset_by_compatible(gd->fdt_blob, -1, info->reset_node);
drivers/clk/renesas/clk-rcar-gen2.c:248:	rst_base = fdtdec_get_addr(gd->fdt_blob, ret, "reg");
drivers/clk/mpc83xx_clk.c:334:		gd->arch.sdhc_clk = priv->speed[MPC83XX_CLK_SDHC];
drivers/clk/mpc83xx_clk.c:336:	gd->arch.core_clk = priv->speed[MPC83XX_CLK_CORE];
drivers/clk/mpc83xx_clk.c:337:	gd->arch.i2c1_clk = priv->speed[MPC83XX_CLK_I2C1];
drivers/clk/mpc83xx_clk.c:339:		gd->arch.i2c2_clk = priv->speed[MPC83XX_CLK_I2C2];
drivers/clk/mpc83xx_clk.c:341:	gd->mem_clk = priv->speed[MPC83XX_CLK_MEM];
drivers/clk/mpc83xx_clk.c:344:		gd->pci_clk = priv->speed[MPC83XX_CLK_PCI];
drivers/clk/mpc83xx_clk.c:346:	gd->cpu_clk = priv->speed[MPC83XX_CLK_CORE];
drivers/clk/mpc83xx_clk.c:347:	gd->bus_clk = priv->speed[MPC83XX_CLK_CSB];
drivers/clk/clk_pic32.c:319:	const void *blob = gd->fdt_blob;
drivers/clk/clk_pic32.c:395:	addr = fdtdec_get_addr_size(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/clk/at91/clk-plla.c:29:	return gd->arch.plla_rate_hz;
drivers/clk/at91/clk-generated.c:155:	num_parents = fdtdec_get_int_array_count(gd->fdt_blob,
drivers/clk/at91/clk-master.c:15:	return gd->arch.mck_rate_hz;
drivers/clk/at91/pmc.c:54:	const void *fdt = gd->fdt_blob;
drivers/clk/at91/pmc.c:56:	bool pre_reloc_only = !(gd->flags & GD_FLG_RELOC);
drivers/clk/at91/pmc.c:98:	periph = fdtdec_get_uint(gd->fdt_blob, dev_of_offset(clk->dev), "reg",
drivers/clk/at91/clk-main.c:29:	return gd->arch.main_clk_rate_hz;
drivers/clk/at91/clk-h32mx.c:23:	ulong rate = gd->arch.mck_rate_hz;
drivers/clk/at91/clk-usb.c:113:	num_clksource = fdtdec_get_int_array_count(gd->fdt_blob,
drivers/clk/clk_stm32mp1.c:1480:		/* need to update gd->arch.timer_rate_hz with new frequency */
drivers/clk/clk_stm32mp1.c:1482:		pr_debug("gd->arch.timer_rate_hz = %x\n",
drivers/clk/clk_stm32mp1.c:1483:			 (u32)gd->arch.timer_rate_hz);
drivers/clk/clk_stm32mp1.c:1886:	if (!(gd->flags & GD_FLG_RELOC))
drivers/clk/aspeed/clk_ast2500.c:443:	ret = device_bind_driver(gd->dm_root, "ast_sysreset", "reset", &dev);
drivers/clk/altera/clk-arria10.c:190:	const void *fdt = gd->fdt_blob;
drivers/clk/altera/clk-arria10.c:227:	const void *fdt = gd->fdt_blob;
drivers/clk/altera/clk-arria10.c:229:	bool pre_reloc_only = !(gd->flags & GD_FLG_RELOC);
drivers/clk/altera/clk-arria10.c:273:	const void *fdt = gd->fdt_blob;
drivers/clk/altera/clk-arria10.c:305:	const void *fdt = gd->fdt_blob;
drivers/core/device.c:535:	list_for_each_entry(uc, &gd->uclass_root, sibling_node) {
drivers/core/device.c:644:	*devp = _device_find_global_by_ofnode(gd->dm_root, ofnode);
drivers/core/device.c:653:	dev = _device_find_global_by_ofnode(gd->dm_root, ofnode);
drivers/core/device.c:784:	const void *fdt = gd->fdt_blob;
drivers/core/device.c:799:	list_for_each_entry(uc, &gd->uclass_root, sibling_node) {
drivers/core/fdtaddr.c:29:		na = fdt_address_cells(gd->fdt_blob,
drivers/core/fdtaddr.c:36:		ns = fdt_size_cells(gd->fdt_blob, dev_of_offset(dev->parent));
drivers/core/fdtaddr.c:42:		reg = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/core/fdtaddr.c:56:			addr = fdt_translate_address((void *)gd->fdt_blob,
drivers/core/fdtaddr.c:67:		addr = fdtdec_get_addr_size_auto_parent(gd->fdt_blob,
drivers/core/fdtaddr.c:100:	fdtdec_get_addr_size_auto_noparent(gd->fdt_blob, dev_of_offset(dev),
drivers/core/fdtaddr.c:118:	index = fdt_stringlist_search(gd->fdt_blob, dev_of_offset(dev),
drivers/core/of_access.c:148:		np = gd->of_root;
drivers/core/of_access.c:321:		return of_node_get(gd->of_root);
drivers/core/of_access.c:350:		np = of_node_get(gd->of_root);
drivers/core/uclass.c:26:	if (!gd->dm_root)
drivers/core/uclass.c:33:	list_for_each_entry(uc, &gd->uclass_root, sibling_node) {
drivers/core/ofnode.c:29:		cell = fdt_getprop(gd->fdt_blob, ofnode_to_offset(node),
drivers/core/ofnode.c:69:	cell = fdt_getprop(gd->fdt_blob, ofnode_to_offset(node), propname,
drivers/core/ofnode.c:121:		str = fdt_getprop(gd->fdt_blob, ofnode_to_offset(node),
drivers/core/ofnode.c:153:		int ooffset = fdt_subnode_offset(gd->fdt_blob,
drivers/core/ofnode.c:173:		return fdtdec_get_int_array(gd->fdt_blob,
drivers/core/ofnode.c:186:		fdt_first_subnode(gd->fdt_blob, ofnode_to_offset(node)));
drivers/core/ofnode.c:196:		fdt_next_subnode(gd->fdt_blob, ofnode_to_offset(node)));
drivers/core/ofnode.c:207:		parent.of_offset = fdt_parent_offset(gd->fdt_blob,
drivers/core/ofnode.c:219:	return fdt_get_name(gd->fdt_blob, ofnode_to_offset(node), NULL);
drivers/core/ofnode.c:229:		node.of_offset = fdt_node_offset_by_phandle(gd->fdt_blob,
drivers/core/ofnode.c:246:		if (fdt_getprop(gd->fdt_blob, ofnode_to_offset(node), propname,
drivers/core/ofnode.c:277:		return fdt_get_base_address(gd->fdt_blob,
drivers/core/ofnode.c:298:		ret = fdt_stringlist_search(gd->fdt_blob,
drivers/core/ofnode.c:319:		*outp = fdt_stringlist_get(gd->fdt_blob, ofnode_to_offset(node),
drivers/core/ofnode.c:332:		return fdt_stringlist_count(gd->fdt_blob,
drivers/core/ofnode.c:374:		ret = fdtdec_parse_phandle_with_args(gd->fdt_blob,
drivers/core/ofnode.c:393:		return fdtdec_parse_phandle_with_args(gd->fdt_blob,
drivers/core/ofnode.c:403:		return offset_to_ofnode(fdt_path_offset(gd->fdt_blob, path));
drivers/core/ofnode.c:519:		return fdt_getprop(gd->fdt_blob, ofnode_to_offset(node),
drivers/core/ofnode.c:528:		return fdtdec_get_is_enabled(gd->fdt_blob,
drivers/core/ofnode.c:552:		return fdtdec_get_addr_size(gd->fdt_blob,
drivers/core/ofnode.c:571:		return fdtdec_locate_byte_array(gd->fdt_blob,
drivers/core/ofnode.c:671:		return fdt_address_cells(gd->fdt_blob, ofnode_to_offset(node));
drivers/core/ofnode.c:679:		return fdt_size_cells(gd->fdt_blob, ofnode_to_offset(node));
drivers/core/ofnode.c:687:		return fdt_address_cells(gd->fdt_blob, ofnode_to_offset(node));
drivers/core/ofnode.c:695:		return fdt_size_cells(gd->fdt_blob, ofnode_to_offset(node));
drivers/core/ofnode.c:732:		ret = fdt_get_resource(gd->fdt_blob, ofnode_to_offset(node),
drivers/core/ofnode.c:761:		return fdt_translate_address(gd->fdt_blob, ofnode_to_offset(node), in_addr);
drivers/core/ofnode.c:770:		return !fdt_node_check_compatible(gd->fdt_blob,
drivers/core/ofnode.c:783:				gd->fdt_blob, ofnode_to_offset(from), compat));
drivers/core/ofnode.c:796:				gd->fdt_blob, ofnode_to_offset(from),
drivers/core/read.c:160:		return fdt_get_phandle(gd->fdt_blob, ofnode_to_offset(node));
drivers/core/read.c:179:		ret = fdtdec_get_alias_seq(gd->fdt_blob, uc_name,
drivers/core/read.c:205:		return fdtdec_get_is_enabled(gd->fdt_blob,
drivers/core/regmap.c:87:			range->start = fdtdec_get_addr_size_fixed(gd->fdt_blob,
drivers/core/root.c:38:	if (!gd->dm_root) {
drivers/core/root.c:43:	return gd->dm_root;
drivers/core/root.c:49:	if (gd->dm_root) {
drivers/core/root.c:50:		new_gd->uclass_root.next->prev = &new_gd->uclass_root;
drivers/core/root.c:51:		new_gd->uclass_root.prev->next = &new_gd->uclass_root;
drivers/core/root.c:82:				((u32)entry->of_match + gd->reloc_off);
drivers/core/root.c:84:			entry->bind += gd->reloc_off;
drivers/core/root.c:86:			entry->probe += gd->reloc_off;
drivers/core/root.c:88:			entry->remove += gd->reloc_off;
drivers/core/root.c:90:			entry->unbind += gd->reloc_off;
drivers/core/root.c:92:			entry->ofdata_to_platdata += gd->reloc_off;
drivers/core/root.c:94:			entry->child_post_bind += gd->reloc_off;
drivers/core/root.c:96:			entry->child_pre_probe += gd->reloc_off;
drivers/core/root.c:98:			entry->child_post_remove += gd->reloc_off;
drivers/core/root.c:101:			entry->ops += gd->reloc_off;
drivers/core/root.c:114:			entry->post_bind += gd->reloc_off;
drivers/core/root.c:116:			entry->pre_unbind += gd->reloc_off;
drivers/core/root.c:118:			entry->pre_probe += gd->reloc_off;
drivers/core/root.c:120:			entry->post_probe += gd->reloc_off;
drivers/core/root.c:122:			entry->pre_remove += gd->reloc_off;
drivers/core/root.c:124:			entry->child_post_bind += gd->reloc_off;
drivers/core/root.c:126:			entry->child_pre_probe += gd->reloc_off;
drivers/core/root.c:128:			entry->init += gd->reloc_off;
drivers/core/root.c:130:			entry->destroy += gd->reloc_off;
drivers/core/root.c:133:			entry->ops += gd->reloc_off;
drivers/core/root.c:146:			entry->platdata += gd->reloc_off;
drivers/core/root.c:156:	if (gd->dm_root) {
drivers/core/root.c:174:		DM_ROOT_NON_CONST->node = np_to_ofnode(gd->of_root);
drivers/core/root.c:313:				gd->flags & GD_FLG_RELOC ? false : true);
drivers/core/root.c:316:	return dm_scan_fdt_node(dev, gd->fdt_blob, dev_of_offset(dev),
drivers/core/root.c:317:				gd->flags & GD_FLG_RELOC ? false : true);
drivers/core/root.c:324:		return dm_scan_fdt_live(gd->dm_root, gd->of_root,
drivers/core/root.c:328:	return dm_scan_fdt_node(gd->dm_root, blob, 0, pre_reloc_only);
drivers/core/root.c:348:		return dm_scan_fdt_live(gd->dm_root, node.np, pre_reloc_only);
drivers/core/root.c:350:	return dm_scan_fdt_node(gd->dm_root, gd->fdt_blob, node.of_offset,
drivers/core/root.c:358:	ret = dm_scan_fdt(gd->fdt_blob, pre_reloc_only);
drivers/core/root.c:398:		ret = dm_extended_scan_fdt(gd->fdt_blob, pre_reloc_only);
drivers/misc/tegra186_bpmp.c:143:	ret = fdtdec_parse_phandle_with_args(gd->fdt_blob, dev_of_offset(dev),
drivers/misc/tegra186_bpmp.c:150:	reg = fdtdec_get_addr_size_auto_noparent(gd->fdt_blob, args.node,
drivers/misc/atsha204a-i2c.c:387:	addr = fdtdec_get_addr(gd->fdt_blob, dev_of_offset(dev), "reg");
drivers/video/mxc_ipuv3_fb.c:419:	gd->fb_base = fbi->fix.smem_start;
drivers/video/am335x-fb.c:11: * - starts output DMA from gd->fb_base buffer
drivers/video/am335x-fb.c:121:	if (gd->fb_base == 0) {
drivers/video/am335x-fb.c:158:	      (unsigned int)gd->fb_base, FBSIZE(panel));
drivers/video/am335x-fb.c:191:	memset((void *)gd->fb_base, 0, 0x20);
drivers/video/am335x-fb.c:192:	*(unsigned int *)gd->fb_base = 0x4000;
drivers/video/am335x-fb.c:194:	gd->fb_base += 0x20;
drivers/video/am335x-fb.c:205:	lcdhw->lcddma_fb0_base = gd->fb_base;
drivers/video/am335x-fb.c:206:	lcdhw->lcddma_fb0_ceiling = gd->fb_base + FBSIZE(panel);
drivers/video/am335x-fb.c:207:	lcdhw->lcddma_fb1_base = gd->fb_base;
drivers/video/am335x-fb.c:208:	lcdhw->lcddma_fb1_ceiling = gd->fb_base + FBSIZE(panel);
drivers/video/rockchip/rk3288_vop.c:59:	if (!(gd->flags & GD_FLG_RELOC))
drivers/video/rockchip/rk_vop.c:367:	if (!(gd->flags & GD_FLG_RELOC))
drivers/video/rockchip/rk_mipi.c:33:	ret = fdtdec_decode_display_timing(gd->fdt_blob, dev_of_offset(dev),
drivers/video/rockchip/rk_mipi.c:124:	timing_node = fdt_subnode_offset(gd->fdt_blob, dev_of_offset(dev),
drivers/video/rockchip/rk_mipi.c:126:	node = fdt_first_subnode(gd->fdt_blob, timing_node);
drivers/video/rockchip/rk_mipi.c:127:	val = fdtdec_get_int(gd->fdt_blob, node, "bits-per-pixel", -1);
drivers/video/rockchip/rk3399_vop.c:66:	if (!(gd->flags & GD_FLG_RELOC))
drivers/video/rockchip/rk_lvds.c:164:	    (gd->fdt_blob, dev_of_offset(dev), 0, timing)) {
drivers/video/rockchip/rk_lvds.c:175:	const void *blob = gd->fdt_blob;
drivers/video/atmel_lcdfb.c:272:	const void *blob = gd->fdt_blob;
drivers/video/cfb_console.c:1979:	bd_t *bd = gd->bd;
drivers/video/cfb_console.c:2154:	have_keyboard = !fdtdec_get_config_bool(gd->fdt_blob,
drivers/video/da8xx-fb.c:962:	gd->fb_base = (int)par->vram_virt;
drivers/video/tegra.c:302:	const void *blob = gd->fdt_blob;
drivers/video/tegra.c:339:	const void *blob = gd->fdt_blob;
drivers/video/tegra.c:394:	const void *blob = gd->fdt_blob;
drivers/video/ivybridge_igd.c:462:	const void *blob = gd->fdt_blob;
drivers/video/broadwell_igd.c:708:	const void *blob = gd->fdt_blob;
drivers/video/atmel_hlcdfb.c:502:	const void *blob = gd->fdt_blob;
drivers/video/simplefb.c:16:	const void *blob = gd->fdt_blob;
drivers/video/sandbox_sdl.c:47:	const void *blob = gd->fdt_blob;
drivers/video/stm32/stm32_ltdc.c:379:	ret = fdtdec_decode_display_timing(gd->fdt_blob,
drivers/video/video-uclass.c:31: * gd->video_bottom and gd->video_top.
drivers/video/video-uclass.c:74:	gd->video_top = *addrp;
drivers/video/video-uclass.c:82:	gd->video_bottom = *addrp;
drivers/video/video-uclass.c:83:	debug("Video frame buffers from %lx to %lx\n", gd->video_bottom,
drivers/video/video-uclass.c:84:	      gd->video_top);
drivers/video/video-uclass.c:272:	ulong addr = gd->video_top;
drivers/video/video-uclass.c:276:	if (!(gd->flags & GD_FLG_RELOC))
drivers/video/video-uclass.c:279:	if (addr < gd->video_bottom) {
drivers/video/video-uclass.c:287:	gd->video_bottom = addr;
drivers/video/exynos/exynos_fb.c:357:	count = fdtdec_find_aliases_for_id(gd->fdt_blob, "fimd",
drivers/video/exynos/exynos_fb.c:366:		sysmmufimd = (u32 *)fdtdec_get_addr(gd->fdt_blob, node, "reg");
drivers/video/exynos/exynos_fb.c:386:	if (fdtdec_get_bool(gd->fdt_blob, node, "samsung,disable-sysmmu"))
drivers/video/exynos/exynos_fb.c:485:	const void *blob = gd->fdt_blob;
drivers/video/exynos/exynos_dp.c:881:	const void *blob = gd->fdt_blob;
drivers/video/exynos/exynos_dp.c:1023:	ret = exynos_dp_bridge_setup(gd->fdt_blob);
drivers/video/exynos/exynos_mipi_dsi.c:309:	if (exynos_dsim_config_parse_dt(gd->fdt_blob, &dsim_config_dt,
drivers/video/bridge/ps862x.c:88:	params = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "parade,regs",
drivers/video/fsl_dcu_fb.c:312:	gd->fb_base = gd->bd->bi_dram[0].start +
drivers/video/fsl_dcu_fb.c:313:			gd->bd->bi_dram[0].size - info.screen_size;
drivers/video/fsl_dcu_fb.c:314:	info.screen_base = (char *)gd->fb_base;
drivers/video/fsl_dcu_fb.c:367:	return gd->ram_top - CONFIG_VIDEO_FSL_DCU_MAX_FB_SIZE_MB;
drivers/video/fsl_dcu_fb.c:444:	start = gd->bd->bi_dram[0].start;
drivers/video/fsl_dcu_fb.c:445:	size = gd->bd->bi_dram[0].size - info.screen_size;
drivers/video/sunxi/sunxi_lcd.c:117:	if (fdtdec_decode_display_timing(gd->fdt_blob, dev_of_offset(cdev),
drivers/video/sunxi/sunxi_lcd.c:122:	timing_node = fdt_subnode_offset(gd->fdt_blob, dev_of_offset(cdev),
drivers/video/sunxi/sunxi_lcd.c:124:	node = fdt_first_subnode(gd->fdt_blob, timing_node);
drivers/video/sunxi/sunxi_lcd.c:125:	val = fdtdec_get_int(gd->fdt_blob, node, "bits-per-pixel", -1);
drivers/video/sunxi/sunxi_display.c:1027:	return gd->ram_top - CONFIG_SUNXI_MAX_FB_SIZE;
drivers/video/sunxi/sunxi_display.c:1206:	gd->fb_base = gd->bd->bi_dram[0].start +
drivers/video/sunxi/sunxi_display.c:1207:		      gd->bd->bi_dram[0].size - sunxi_display.fb_size;
drivers/video/sunxi/sunxi_display.c:1211:	efi_add_memory_map(gd->fb_base,
drivers/video/sunxi/sunxi_display.c:1217:	fb_dma_addr = gd->fb_base - CONFIG_SYS_SDRAM_BASE;
drivers/video/sunxi/sunxi_display.c:1218:	sunxi_display.fb_addr = gd->fb_base;
drivers/video/sunxi/sunxi_display.c:1222:		memset((void *)gd->fb_base, 0, sunxi_display.fb_size);
drivers/video/sunxi/sunxi_display.c:1223:		flush_cache(gd->fb_base, sunxi_display.fb_size);
drivers/video/sunxi/sunxi_display.c:1295:	start = gd->bd->bi_dram[0].start;
drivers/video/sunxi/sunxi_display.c:1296:	size = gd->bd->bi_dram[0].size - sunxi_display.fb_size;
drivers/video/sunxi/sunxi_de2.c:242:	if (!(gd->flags & GD_FLG_RELOC))
drivers/video/sunxi/sunxi_de2.c:391:	start = gd->bd->bi_dram[0].start;
drivers/mtd/cfi_flash.c:2487:	gd->bd->bi_flashstart = flash_info[0].base;
drivers/mtd/renesas_rpc_hf.c:320:	const void *fdt = gd->fdt_blob;
drivers/mtd/renesas_rpc_hf.c:345:	void *blob = (void *)gd->fdt_blob;
drivers/mtd/renesas_rpc_hf.c:381:	gd->bd->bi_flashstart = flash_base;
drivers/mtd/nand/raw/sunxi_nand.c:1602:	const void *blob = gd->fdt_blob;
drivers/mtd/nand/raw/sunxi_nand.c:1636:	ret = fdtdec_get_int_array(gd->fdt_blob, node, "reg", cs, nsels);
drivers/mtd/nand/raw/sunxi_nand.c:1642:	ret = fdtdec_get_int_array(gd->fdt_blob, node, "allwinner,rb", rb,
drivers/mtd/nand/raw/sunxi_nand.c:1757:	const void *blob = gd->fdt_blob;
drivers/mtd/nand/raw/sunxi_nand.c:1799:	const void *blob = gd->fdt_blob;
drivers/mtd/nand/raw/pxa3xx_nand.c:1705:	const void *blob = gd->fdt_blob;
drivers/mtd/nand/raw/nand_base.c:3884:	const void *blob = gd->fdt_blob;
drivers/mtd/spi/sf-uclass.c:85:			ops->read += gd->reloc_off;
drivers/mtd/spi/sf-uclass.c:87:			ops->write += gd->reloc_off;
drivers/mtd/spi/sf-uclass.c:89:			ops->erase += gd->reloc_off;
drivers/mtd/altera_qspi.c:342:	gd->bd->bi_flashstart = base;
drivers/mtd/altera_qspi.c:350:	void *blob = (void *)gd->fdt_blob;
drivers/mtd/pic32_flash.c:372:	void *blob = (void *)gd->fdt_blob;
drivers/smem/msm_smem.c:823:	ret = fdtdec_lookup_phandle(gd->fdt_blob, node, name);
drivers/smem/msm_smem.c:829:	ret = fdt_get_resource(gd->fdt_blob, ret, "reg", 0, &r);
drivers/smem/msm_smem.c:853:	if (fdtdec_lookup_phandle(gd->fdt_blob, node, "qcomrpm-msg-ram") >= 0)
drivers/firmware/psci.c:62:	method = fdt_stringlist_get(gd->fdt_blob, dev_of_offset(dev), "method",
drivers/net/cpsw.c:1328:	const void *fdt = gd->fdt_blob;
drivers/net/cpsw.c:1423:						fdtdec_get_int(gd->fdt_blob,
drivers/net/mpc8xx_fec.c:345:	bd_t           *bd = gd->bd;
drivers/net/pic32_eth.c:537:	addr = fdtdec_get_addr_size(gd->fdt_blob, dev_of_offset(dev), "reg",
drivers/net/pic32_eth.c:547:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/pic32_eth.c:557:	offset = fdtdec_lookup_phandle(gd->fdt_blob, dev_of_offset(dev),
drivers/net/pic32_eth.c:560:		phy_addr = fdtdec_get_int(gd->fdt_blob, offset, "reg", -1);
drivers/net/xilinx_emaclite.c:606:	offset = fdtdec_lookup_phandle(gd->fdt_blob, dev_of_offset(dev),
drivers/net/xilinx_emaclite.c:609:		emaclite->phyaddr = fdtdec_get_int(gd->fdt_blob, offset,
drivers/net/xilinx_emaclite.c:612:	emaclite->txpp = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/net/xilinx_emaclite.c:614:	emaclite->rxpp = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/net/mvpp2.c:4714:	phy_node = fdtdec_lookup_phandle(gd->fdt_blob, port_node, "phy");
drivers/net/mvpp2.c:4717:		phyaddr = fdtdec_get_int(gd->fdt_blob, phy_node, "reg", 0);
drivers/net/mvpp2.c:4722:		mdio_off = fdt_parent_offset(gd->fdt_blob, phy_node);
drivers/net/mvpp2.c:4731:		mdio_addr = fdtdec_get_uint(gd->fdt_blob,
drivers/net/mvpp2.c:4734:		cp_node = fdt_parent_offset(gd->fdt_blob, mdio_off);
drivers/net/mvpp2.c:4735:		mdio_addr |= fdt_get_base_address((void *)gd->fdt_blob,
drivers/net/mvpp2.c:4748:	phy_mode_str = fdt_getprop(gd->fdt_blob, port_node, "phy-mode", NULL);
drivers/net/mvpp2.c:4756:	id = fdtdec_get_int(gd->fdt_blob, port_node, "port-id", -1);
drivers/net/mvpp2.c:4775:	port->phy_speed = fdtdec_get_int(gd->fdt_blob, port_node,
drivers/net/mvpp2.c:5464:		port->gop_id = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/net/mvpp2.c:5553:	const void *blob = gd->fdt_blob;
drivers/net/sh_eth.c:897:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/sh_eth.c:907:	cell = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "max-speed", NULL);
drivers/net/sun8i_emac.c:464:	offset = fdtdec_lookup_phandle(gd->fdt_blob, dev_of_offset(dev),
drivers/net/sun8i_emac.c:471:	drive = fdt_getprop_u32_default_node(gd->fdt_blob, offset, 0,
drivers/net/sun8i_emac.c:484:	if (fdt_get_property(gd->fdt_blob, offset, "bias-pull-up", NULL))
drivers/net/sun8i_emac.c:486:	else if (fdt_get_property(gd->fdt_blob, offset, "bias-pull-down", NULL))
drivers/net/sun8i_emac.c:492:		pin_name = fdt_stringlist_get(gd->fdt_blob, offset,
drivers/net/sun8i_emac.c:838:		offset = fdtdec_lookup_phandle(gd->fdt_blob, node, "syscon");
drivers/net/sun8i_emac.c:843:		reg = fdt_getprop(gd->fdt_blob, offset, "reg", NULL);
drivers/net/sun8i_emac.c:849:		priv->sysctl_reg = fdt_translate_address((void *)gd->fdt_blob,
drivers/net/sun8i_emac.c:862:	offset = fdtdec_lookup_phandle(gd->fdt_blob, node, "phy-handle");
drivers/net/sun8i_emac.c:867:	priv->phyaddr = fdtdec_get_int(gd->fdt_blob, offset, "reg", -1);
drivers/net/sun8i_emac.c:869:	phy_mode = fdt_getprop(gd->fdt_blob, node, "phy-mode", NULL);
drivers/net/sun8i_emac.c:881:		int parent = fdt_parent_offset(gd->fdt_blob, offset);
drivers/net/sun8i_emac.c:884:		    !fdt_node_check_compatible(gd->fdt_blob, parent,
drivers/net/sun8i_emac.c:895:	if (fdtdec_get_bool(gd->fdt_blob, dev_of_offset(dev),
drivers/net/sun8i_emac.c:903:		ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev),
drivers/net/altera_tse.c:578:	void *blob = (void *)gd->fdt_blob;
drivers/net/altera_tse.c:679:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/sni_ave.c:743:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/sni_ave.c:753:	valp = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "max-speed",
drivers/net/ravb.c:644:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/ravb.c:654:	cell = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "max-speed", NULL);
drivers/net/keystone_net.c:986:	const void *fdt = gd->fdt_blob;
drivers/net/keystone_net.c:1045:	const void *fdt = gd->fdt_blob;
drivers/net/keystone_net.c:1100:	const void *fdt = gd->fdt_blob;
drivers/net/keystone_net.c:1123:	const void *fdt = gd->fdt_blob;
drivers/net/mcfmii.c:233:	miispd = (gd->bus_clk / 1000000) / 5;
drivers/net/xilinx_axi_emac.c:721:	offset = fdtdec_lookup_phandle(gd->fdt_blob, node,
drivers/net/xilinx_axi_emac.c:727:	priv->dmatx = (struct axidma_reg *)fdtdec_get_addr(gd->fdt_blob,
drivers/net/xilinx_axi_emac.c:738:	offset = fdtdec_lookup_phandle(gd->fdt_blob, node, "phy-handle");
drivers/net/xilinx_axi_emac.c:740:		priv->phyaddr = fdtdec_get_int(gd->fdt_blob, offset, "reg", -1);
drivers/net/xilinx_axi_emac.c:742:	phy_mode = fdt_getprop(gd->fdt_blob, node, "phy-mode", NULL);
drivers/net/xilinx_axi_emac.c:751:	priv->eth_hasnobuf = fdtdec_get_bool(gd->fdt_blob, node,
drivers/net/cpsw-common.c:22:	void *fdt = (void *)gd->fdt_blob;
drivers/net/cpsw-common.c:62:	void *fdt = (void *)gd->fdt_blob;
drivers/net/fsl-mc/mc.c:850:		memset((void *)gd->arch.resv_ram, 0, mc_ram_size);
drivers/net/fsl-mc/mc.c:853:	return (gd->arch.resv_ram + mc_ram_size - 1) &
drivers/net/ftmac100.c:371:	if (gd->fdt_blob == NULL) {
drivers/net/ftmac100.c:372:		printf("%s: don't have a valid gd->fdt_blob!\n", __func__);
drivers/net/ftmac100.c:375:	node = fdt_path_offset(gd->fdt_blob, "/aliases");
drivers/net/ftmac100.c:380:	path = fdt_getprop(gd->fdt_blob, node, enet, NULL);
drivers/net/ftmac100.c:385:	node = fdt_path_offset(gd->fdt_blob, path);
drivers/net/ftmac100.c:386:	mac = fdt_getprop(gd->fdt_blob, node, "mac-address", &len);
drivers/net/phy/miiphybb.c:115:		BB_MII_RELOCATE(bb_miiphy_buses[i].init, gd->reloc_off);
drivers/net/phy/miiphybb.c:116:		BB_MII_RELOCATE(bb_miiphy_buses[i].mdio_active, gd->reloc_off);
drivers/net/phy/miiphybb.c:117:		BB_MII_RELOCATE(bb_miiphy_buses[i].mdio_tristate, gd->reloc_off);
drivers/net/phy/miiphybb.c:118:		BB_MII_RELOCATE(bb_miiphy_buses[i].set_mdio, gd->reloc_off);
drivers/net/phy/miiphybb.c:119:		BB_MII_RELOCATE(bb_miiphy_buses[i].get_mdio, gd->reloc_off);
drivers/net/phy/miiphybb.c:120:		BB_MII_RELOCATE(bb_miiphy_buses[i].set_mdc, gd->reloc_off);
drivers/net/phy/miiphybb.c:121:		BB_MII_RELOCATE(bb_miiphy_buses[i].delay, gd->reloc_off);
drivers/net/phy/fixed.c:23:	val = fdt_getprop_u32_default_node(gd->fdt_blob,
drivers/net/phy/fixed.c:38:	priv->duplex = fdtdec_get_bool(gd->fdt_blob, ofnode, "full-duplex");
drivers/net/phy/fixed.c:39:	priv->pause = fdtdec_get_bool(gd->fdt_blob, ofnode, "pause");
drivers/net/phy/fixed.c:40:	priv->asym_pause = fdtdec_get_bool(gd->fdt_blob, ofnode, "asym-pause");
drivers/net/phy/phy.c:541:		drv->probe += gd->reloc_off;
drivers/net/phy/phy.c:543:		drv->config += gd->reloc_off;
drivers/net/phy/phy.c:545:		drv->startup += gd->reloc_off;
drivers/net/phy/phy.c:547:		drv->shutdown += gd->reloc_off;
drivers/net/phy/phy.c:549:		drv->readext += gd->reloc_off;
drivers/net/phy/phy.c:551:		drv->writeext += gd->reloc_off;
drivers/net/phy/phy.c:893:	sn = fdt_first_subnode(gd->fdt_blob, dev_of_offset(dev));
drivers/net/phy/phy.c:895:		name = fdt_get_name(gd->fdt_blob, sn, NULL);
drivers/net/phy/phy.c:901:		sn = fdt_next_subnode(gd->fdt_blob, sn);
drivers/net/fec_mxc.c:1344:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/mvneta.c:1679:	void *blob = (void *)gd->fdt_blob;
drivers/net/mvneta.c:1780:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/net/ag7xxx.c:894:	offset = fdtdec_lookup_phandle(gd->fdt_blob, dev_of_offset(dev), "phy");
drivers/net/ag7xxx.c:900:	offset = fdt_parent_offset(gd->fdt_blob, offset);
drivers/net/ag7xxx.c:907:	offset = fdt_parent_offset(gd->fdt_blob, offset);
drivers/net/ag7xxx.c:928:	phyreg = fdtdec_get_int(gd->fdt_blob, ret, "reg", -1);
drivers/net/ag7xxx.c:986:	phy_mode = fdt_getprop(gd->fdt_blob, ret, "phy-mode", NULL);
drivers/net/mvgbe.c:275:		win_param.base_addr = gd->bd->bi_dram[i].start;
drivers/net/mvgbe.c:276:		win_param.size = gd->bd->bi_dram[i].size;
drivers/net/mvgbe.c:991:	void *blob = (void *)gd->fdt_blob;
drivers/net/mvgbe.c:1005:	phy_mode = fdt_getprop(gd->fdt_blob, pnode, "phy-mode", NULL);
drivers/net/macb.c:1090:	phy_mode = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), "phy-mode",
drivers/phy/sti_usb_phy.c:134:	count = fdtdec_get_int_array_count(gd->fdt_blob, dev_of_offset(dev),
drivers/phy/marvell/comphy_core.c:76:	const void *blob = gd->fdt_blob;
drivers/phy/marvell/comphy_cp110.c:666:			gd->fdt_blob, sata_node, "marvell,armada-8k-ahci");
drivers/phy/marvell/comphy_cp110.c:674:		gd->fdt_blob, sata_node, "reg", 0, NULL, true);
drivers/phy/marvell/comphy_cp110.c:1870:	node = fdt_node_offset_by_compatible(gd->fdt_blob, -1,
drivers/phy/marvell/comphy_cp110.c:1878:				gd->fdt_blob, node, "reg", 0, NULL, true);
drivers/phy/marvell/comphy_cp110.c:1888:				gd->fdt_blob, node, "reg", 1, NULL, true);
drivers/phy/marvell/comphy_cp110.c:1898:				gd->fdt_blob, node, "reg", 2, NULL, true);
drivers/phy/marvell/comphy_cp110.c:1910:			gd->fdt_blob, node, "utmi-port", UTMI_PHY_INVALID);
drivers/phy/marvell/comphy_cp110.c:1918:			gd->fdt_blob, node, "marvell,mvebu-utmi-2.6.0");
drivers/phy/marvell/comphy_a3700.c:892:	const void *blob = gd->fdt_blob;
drivers/phy/ti-pipe3-phy.c:298:	cell = fdt_getprop(gd->fdt_blob, dev_of_offset(dev), name,
drivers/power/regulator/gpio-regulator.c:31:	const void *blob = gd->fdt_blob;
drivers/watchdog/tangier_wdt.c:33:	if (gd->timer)
drivers/watchdog/orion_wdt.c:118:		gd->fdt_blob, dev_of_offset(dev), "reg", index, &off, true);
drivers/watchdog/wdt-uclass.c:74:			ops->start += gd->reloc_off;
drivers/watchdog/wdt-uclass.c:76:			ops->stop += gd->reloc_off;
drivers/watchdog/wdt-uclass.c:78:			ops->reset += gd->reloc_off;
drivers/watchdog/wdt-uclass.c:80:			ops->expire_now += gd->reloc_off;
drivers/spi/ich.c:673:	ret = fdt_node_check_compatible(gd->fdt_blob, node, "intel,ich7-spi");
drivers/spi/ich.c:677:		ret = fdt_node_check_compatible(gd->fdt_blob, node,
drivers/spi/ich.c:683:	plat->lockdown = fdtdec_get_bool(gd->fdt_blob, node,
drivers/spi/fsl_dspi.c:425:	dspi->priv.bus_clk = gd->bus_clk;
drivers/spi/fsl_dspi.c:557:	priv->bus_clk = gd->bus_clk;
drivers/spi/fsl_dspi.c:639:	const void *blob = gd->fdt_blob;
drivers/spi/fsl_qspi.c:991:	const void *blob = gd->fdt_blob;
drivers/spi/zynq_qspi.c:102:	const void *blob = gd->fdt_blob;
drivers/spi/tegra20_slink.c:95:	const void *blob = gd->fdt_blob;
drivers/spi/tegra210_qspi.c:98:	const void *blob = gd->fdt_blob;
drivers/spi/pl022_spi.c:103:	const void *fdt = gd->fdt_blob;
drivers/spi/soft_spi.c:203:	const void *blob = gd->fdt_blob;
drivers/spi/sun4i_spi.c:166:	const void *fdt = gd->fdt_blob;
drivers/spi/sun4i_spi.c:256:	plat->max_hz = fdtdec_get_int(gd->fdt_blob, node,
drivers/spi/tegra20_sflash.c:89:	const void *blob = gd->fdt_blob;
drivers/spi/davinci_spi.c:562:	plat->num_cs = fdtdec_get_int(gd->fdt_blob, dev_of_offset(bus), "num-cs", 4);
drivers/spi/zynq_spi.c:75:	const void *blob = gd->fdt_blob;
drivers/spi/exynos_spi.c:254:	const void *blob = gd->fdt_blob;
drivers/spi/bcmstb_spi.c:100:	const void *fdt = gd->fdt_blob;
drivers/spi/renesas_rpc_spi.c:382:	const void *fdt = gd->fdt_blob;
drivers/spi/designware_spi.c:158:	const void *blob = gd->fdt_blob;
drivers/spi/pic32_spi.c:386:	addr = fdtdec_get_addr_size(gd->fdt_blob, node, "reg", &size);
drivers/spi/pic32_spi.c:394:	dm_spi->max_hz = fdtdec_get_int(gd->fdt_blob, node, "spi-max-frequency",
drivers/spi/mxc_spi.c:498:	const void *blob = gd->fdt_blob;
drivers/spi/omap3_spi.c:624:	const void *blob = gd->fdt_blob;
drivers/spi/cf_spi.c:206:	if ((cfslave->baudrate > (gd->bus_clk >> 1)) ||
drivers/spi/cf_spi.c:207:	    (cfslave->baudrate < (gd->bus_clk / tmp))) {
drivers/spi/cf_spi.c:209:		       (int)(gd->bus_clk >> 1), (int)(gd->bus_clk / tmp));
drivers/spi/cf_spi.c:215:	    (cfslave->baudrate > (gd->bus_clk / (prescaler[0] * scaler[0])))) {
drivers/spi/cf_spi.c:258:		baud_speed = gd->bus_clk / prescaler[i];
drivers/spi/ti_qspi.c:576:	cell = fdt_getprop(gd->fdt_blob, dev_of_offset(bus),
drivers/spi/ti_qspi.c:595:	const void *blob = gd->fdt_blob;
drivers/spi/spi-uclass.c:132:		ops->claim_bus += gd->reloc_off;
drivers/spi/spi-uclass.c:134:		ops->release_bus += gd->reloc_off;
drivers/spi/spi-uclass.c:136:		ops->set_wordlen += gd->reloc_off;
drivers/spi/spi-uclass.c:138:		ops->xfer += gd->reloc_off;
drivers/spi/spi-uclass.c:140:		ops->set_speed += gd->reloc_off;
drivers/spi/spi-uclass.c:142:		ops->set_mode += gd->reloc_off;
drivers/spi/spi-uclass.c:144:		ops->cs_info += gd->reloc_off;
drivers/spi/atcspi200_spi.c:377:	const void *blob = gd->fdt_blob;
drivers/spi/cadence_qspi.c:283:	const void *blob = gd->fdt_blob;
drivers/block/sandbox.c:129:	ret = blk_create_device(gd->dm_root, "sandbox_host_blk", str,
drivers/demo/demo-uclass.c:70:	pdata->sides = fdtdec_get_int(gd->fdt_blob, dn, "sides", 0);
drivers/demo/demo-uclass.c:71:	pdata->colour = fdt_getprop(gd->fdt_blob, dn, "colour", NULL);
drivers/demo/demo-shape.c:153:	pdata->default_char = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
drivers/qe/qe.c:60:	savebase = gd->arch.mp_alloc_base;
drivers/qe/qe.c:62:	off = gd->arch.mp_alloc_base & align_mask;
drivers/qe/qe.c:64:		gd->arch.mp_alloc_base += (align - off);
drivers/qe/qe.c:69:	if ((gd->arch.mp_alloc_base + size) >= gd->arch.mp_alloc_top) {
drivers/qe/qe.c:70:		gd->arch.mp_alloc_base = savebase;
drivers/qe/qe.c:74:	retloc = gd->arch.mp_alloc_base;
drivers/qe/qe.c:75:	gd->arch.mp_alloc_base += size;
drivers/qe/qe.c:188:	gd->arch.mp_alloc_base = QE_DATAONLY_BASE;
drivers/qe/qe.c:189:	gd->arch.mp_alloc_top = gd->arch.mp_alloc_base + QE_DATAONLY_SIZE;
drivers/qe/qe.c:207:	if (mmc_initialize(gd->bd)) {
drivers/qe/qe.c:276:#define BRG_CLK		(gd->arch.brg_clk)
drivers/qe/fdt.c:62:		"bus-frequency", gd->arch.qe_clk, 1);
drivers/qe/fdt.c:64:		"brg-frequency", gd->arch.brg_clk, 1);
drivers/qe/fdt.c:66:		"clock-frequency", gd->arch.qe_clk, 1);
drivers/qe/fdt.c:68:		"bus-frequency", gd->arch.qe_clk, 1);
drivers/qe/fdt.c:70:		"brg-frequency", gd->arch.brg_clk, 1);
drivers/qe/fdt.c:72:		"clock-frequency", gd->arch.qe_clk / 2, 1);
tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_mem_siz.patch:64: 	gd->ram_size = (phys_size_t)(res.end - res.start + 1);
tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_mem_siz.patch:65:-	debug("%s: Initial DRAM size %llx\n", __func__, (u64)gd->ram_size);
tools/patman/test/0002-fdt-Correct-cast-for-sandbox-in-fdtdec_setup_mem_siz.patch:67:+	      (unsigned long long)gd->ram_size);
api/api_platform-arm.c:32:		platform_set_mr(si, gd->bd->bi_dram[i].start,
api/api_platform-arm.c:33:				gd->bd->bi_dram[i].size, MR_ATTR_DRAM);
api/api_platform-powerpc.c:29:	si->clk_bus = gd->bus_clk;
api/api_platform-powerpc.c:30:	si->clk_cpu = gd->cpu_clk;
api/api_platform-powerpc.c:39:	si->bar = gd->bd->bi_bar;
api/api_platform-powerpc.c:45:	platform_set_mr(si, gd->bd->bi_memstart, gd->bd->bi_memsize, MR_ATTR_DRAM);
api/api_platform-powerpc.c:46:	platform_set_mr(si, gd->bd->bi_flashstart, gd->bd->bi_flashsize, MR_ATTR_FLASH);
api/api_platform-powerpc.c:47:	platform_set_mr(si, gd->bd->bi_sramstart, gd->bd->bi_sramsize, MR_ATTR_SRAM);
api/api_platform-mips.c:27:	platform_set_mr(si, gd->bd->bi_memstart,
api/api_platform-mips.c:28:			gd->bd->bi_memsize, MR_ATTR_DRAM);
README:741:		tree is available in the global data as gd->fdt_blob.
README:751:		the global data structure as gd->fdt_blob.
README:2744:		gd->arch.secure_ram is used to track the location. In systems
README:2752:		fixing up gd->ram_size the Linux kernel should gets passed
see.log:205:arch/x86/cpu/i386/cpu.c:343:	gd->pci_ram_top = 0x80000000U;
see.log:826:arch/nios2/cpu/cpu.c:125:	gd->arch.io_region_base = gd->arch.has_mmu ? 0xe0000000 : 0x80000000;
see.log:849:board/freescale/ls1043ardb/ddr.c:224:	gd->ram_size = 0x80000000;
see.log:911:board/hisilicon/poplar/poplar.c:63:	gd->ram_size = get_ram_size(NULL, 0x80000000);
see.log:953:board/ti/dra7xx/evm.c:628:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
see.log:954:board/ti/omap5_uevm/evm.c:142:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
see.log:956:board/ti/am65x/evm.c:26:	gd->ram_size = 0x80000000;
see.log:957:board/ti/am65x/evm.c:47:	gd->bd->bi_dram[0].size = 0x80000000;
see.log:958:board/ti/am65x/evm.c:52:	gd->bd->bi_dram[1].size = 0x80000000;
see.log:959:board/ti/sdp4430/sdp.c:30:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
see.log:960:board/ti/panda/panda.c:49:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
see.log:978:board/toradex/apalis_imx6/apalis_imx6.c:855:	       (gd->ram_size == 0x80000000) ? "2GB" :
arch/sh/lib/board.c:12:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
arch/sh/lib/board.c:22:	if (new_gd->reloc_off) {
arch/sh/lib/board.c:23:		memcpy((void *)new_gd->relocaddr,
arch/sh/lib/board.c:24:		       (void *)(new_gd->relocaddr - new_gd->reloc_off),
arch/sh/lib/board.c:25:		       new_gd->mon_len);
arch/sh/lib/board.c:27:		reloc_board_init_r += new_gd->reloc_off;
arch/sh/lib/board.c:30:	__asm__ __volatile__("mov.l %0, r15\n" : : "m" (new_gd->start_addr_sp));
arch/nds32/lib/bootm.c:39:	bd_t	*bd = gd->bd;
arch/x86/lib/bootm.c:53:	bd_t	*bd = gd->bd;
arch/x86/lib/spl.c:73:	gd->new_gd = (struct global_data *)ptr;
arch/x86/lib/spl.c:74:	memcpy(gd->new_gd, gd, sizeof(*gd));
arch/x86/lib/spl.c:75:	arch_setup_gd(gd->new_gd);
arch/x86/lib/spl.c:76:	gd->start_addr_sp = (ulong)ptr;
arch/x86/lib/spl.c:101:	board_init_f_r_trampoline(gd->start_addr_sp);
arch/x86/lib/spl.c:107:	gd->flags &= ~GD_FLG_SERIAL_READY;
arch/x86/lib/mrccache.c:167:	if (!gd->arch.mrc_output_len)
arch/x86/lib/mrccache.c:171:	gd->start_addr_sp -= (gd->arch.mrc_output_len + MRC_DATA_HEADER_SIZE);
arch/x86/lib/mrccache.c:172:	cache = (struct mrc_data_container *)gd->start_addr_sp;
arch/x86/lib/mrccache.c:175:	cache->data_size = gd->arch.mrc_output_len;
arch/x86/lib/mrccache.c:176:	checksum = compute_ip_checksum(gd->arch.mrc_output, cache->data_size);
arch/x86/lib/mrccache.c:181:	memcpy(cache->data, gd->arch.mrc_output, cache->data_size);
arch/x86/lib/mrccache.c:183:	/* gd->arch.mrc_output now points to the container */
arch/x86/lib/mrccache.c:184:	gd->arch.mrc_output = (char *)cache;
arch/x86/lib/mrccache.c:186:	gd->start_addr_sp &= ~0xf;
arch/x86/lib/mrccache.c:193:	const void *blob = gd->fdt_blob;
arch/x86/lib/mrccache.c:237:	if (!gd->arch.mrc_output_len)
arch/x86/lib/mrccache.c:240:	      gd->arch.mrc_output_len);
arch/x86/lib/mrccache.c:245:	data  = (struct mrc_data_container *)gd->arch.mrc_output;
arch/x86/lib/pinctrl_ich6.c:73:	ret = fdtdec_get_int_array(gd->fdt_blob, pin_node, "gpio-offset",
arch/x86/lib/pinctrl_ich6.c:77:		is_gpio = fdtdec_get_bool(gd->fdt_blob, pin_node, "mode-gpio");
arch/x86/lib/pinctrl_ich6.c:83:		dir = fdtdec_get_int(gd->fdt_blob, pin_node, "direction", -1);
arch/x86/lib/pinctrl_ich6.c:89:		val = fdtdec_get_int(gd->fdt_blob, pin_node, "output-value",
arch/x86/lib/pinctrl_ich6.c:96:		invert = fdtdec_get_bool(gd->fdt_blob, pin_node, "invert");
arch/x86/lib/pinctrl_ich6.c:114:		pad_offset = fdtdec_get_int(gd->fdt_blob, pin_node,
arch/x86/lib/pinctrl_ich6.c:127:		val = fdtdec_get_int(gd->fdt_blob, pin_node, "mode-func", -1);
arch/x86/lib/pinctrl_ich6.c:132:		val = fdtdec_get_int(gd->fdt_blob, pin_node, "pull-assign", -1);
arch/x86/lib/pinctrl_ich6.c:138:		val = fdtdec_get_int(gd->fdt_blob, pin_node, "pull-strength",
arch/x86/lib/pinctrl_ich6.c:189:	for (pin_node = fdt_first_subnode(gd->fdt_blob, dev_of_offset(dev));
arch/x86/lib/pinctrl_ich6.c:191:	     pin_node = fdt_next_subnode(gd->fdt_blob, pin_node)) {
arch/x86/lib/fsp/fsp_common.c:88:	if (gd->arch.prev_sleep_state == ACPI_S3)
arch/x86/lib/fsp/fsp_common.c:98:	ret = rtc_write32(dev, CMOS_FSP_STACK_ADDR, gd->start_addr_sp);
arch/x86/lib/fsp/fsp_common.c:115:	gd->arch.prev_sleep_state = prev_sleep_state;
arch/x86/lib/fsp/fsp_common.c:118:	if (!gd->arch.hob_list) {
arch/x86/lib/fsp/fsp_common.c:157:		 * pool before relocation. Given gd->malloc_base was adjusted
arch/x86/lib/fsp/fsp_common.c:159:		 * cpu/start.S, we should fix up gd->malloc_limit here.
arch/x86/lib/fsp/fsp_common.c:161:		gd->malloc_limit += CONFIG_FSP_SYS_MALLOC_F_LEN;
arch/x86/lib/fsp/fsp_dram.c:20:	hdr = gd->arch.hob_list;
arch/x86/lib/fsp/fsp_dram.c:32:	gd->ram_size = ram_size;
arch/x86/lib/fsp/fsp_dram.c:36:	gd->arch.mrc_output = fsp_get_nvs_data(gd->arch.hob_list,
arch/x86/lib/fsp/fsp_dram.c:37:					       &gd->arch.mrc_output_len);
arch/x86/lib/fsp/fsp_dram.c:45:	gd->bd->bi_dram[0].start = 0;
arch/x86/lib/fsp/fsp_dram.c:46:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/x86/lib/fsp/fsp_dram.c:61:	return fsp_get_usable_lowmem_top(gd->arch.hob_list);
arch/x86/lib/fsp/fsp_dram.c:71:	hdr = gd->arch.hob_list;
arch/x86/lib/fsp/fsp_dram.c:100:	entries[num_entries].addr = gd->start_addr_sp - CONFIG_STACK_SIZE;
arch/x86/lib/fsp/fsp_dram.c:101:	entries[num_entries].size = gd->ram_top - gd->start_addr_sp + \
arch/x86/lib/fsp/fsp_graphics.c:34:	ginfo = fsp_get_graphics_info(gd->arch.hob_list, NULL);
arch/x86/lib/mpspec.c:293:	const void *blob = gd->fdt_blob;
arch/x86/lib/physmem.c:145:	       gd->relocaddr - CONFIG_SYS_MALLOC_LEN - CONFIG_SYS_STACK_SIZE);
arch/x86/lib/acpi_s3.c:39:	memcpy((void *)0x1000, (const void *)gd->arch.backup_mem,
arch/x86/lib/acpi_s3.c:49:	gd->start_addr_sp -= S3_RESERVE_SIZE;
arch/x86/lib/acpi_s3.c:50:	gd->arch.backup_mem = gd->start_addr_sp;
arch/x86/lib/acpi_s3.c:52:	gd->start_addr_sp &= ~0xf;
arch/x86/lib/acpi_s3.c:78:	if (gd->arch.prev_sleep_state == ACPI_S3)
arch/x86/lib/acpi_s3.c:79:		memcpy((void *)gd->arch.backup_mem, (const void *)0x1000,
arch/x86/lib/coreboot_table.c:17:	gd->arch.high_table_limit = gd->start_addr_sp;
arch/x86/lib/coreboot_table.c:18:	gd->start_addr_sp -= CONFIG_HIGH_TABLE_SIZE;
arch/x86/lib/coreboot_table.c:19:	gd->arch.high_table_ptr = gd->start_addr_sp;
arch/x86/lib/coreboot_table.c:23:	if (gd->arch.prev_sleep_state != ACPI_S3)
arch/x86/lib/coreboot_table.c:25:		memset((void *)gd->arch.high_table_ptr, 0,
arch/x86/lib/coreboot_table.c:28:	gd->start_addr_sp &= ~0xf;
arch/x86/lib/coreboot_table.c:38:	new_ptr = gd->arch.high_table_ptr + bytes;
arch/x86/lib/coreboot_table.c:39:	if (new_ptr >= gd->arch.high_table_limit)
arch/x86/lib/coreboot_table.c:41:	ptr = (void *)gd->arch.high_table_ptr;
arch/x86/lib/coreboot_table.c:42:	gd->arch.high_table_ptr = new_ptr;
arch/x86/lib/relocate.c:29:	if (gd->flags & GD_FLG_SKIP_RELOC)
arch/x86/lib/relocate.c:31:	memcpy((void *)gd->relocaddr, (void *)&__text_start, len);
arch/x86/lib/relocate.c:38:	ulong dst_addr = (ulong)&__bss_start + gd->reloc_off;
arch/x86/lib/relocate.c:41:	if (gd->flags & GD_FLG_SKIP_RELOC)
arch/x86/lib/relocate.c:64:							gd->reloc_off);
arch/x86/lib/relocate.c:69:				*offset_ptr_ram = gd->reloc_off +
arch/x86/lib/relocate.c:103:							gd->reloc_off);
arch/x86/lib/relocate.c:108:				*offset_ptr_ram += gd->reloc_off;
arch/x86/lib/relocate.c:138:	if (gd->flags & GD_FLG_SKIP_RELOC)
arch/x86/lib/init_helpers.c:16:	return gd->ram_size;
arch/x86/lib/e820.c:17: *	0x100000-gd->ram_size	Useable RAM
arch/x86/lib/e820.c:30:	entries[2].size = gd->ram_size - ISA_END_ADDRESS;
arch/x86/dts/minnowmax.dts:290:		fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_64MB>;
arch/x86/dts/conga-qeval20-qa3-e3845.dts:270:		fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_64MB>;
arch/x86/dts/dfi-bt700.dtsi:289:		fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_64MB>;
arch/x86/dts/cherryhill.dts:169:			fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_32MB>;
arch/x86/dts/bayleybay.dts:263:		fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_64MB>;
arch/x86/dts/baytrail_som-db5800-som-6867.dts:283:		fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_64MB>;
arch/x86/include/asm/mrccache.h:61: * This copies MRC data pointed by gd->arch.mrc_output to a new place on the
arch/x86/include/asm/mrccache.h:62: * stack with length gd->arch.mrc_output_len, and updates gd->arch.mrc_output
arch/x86/include/asm/mrccache.h:99: * This saves MRC data stored previously by gd->arch.mrc_output to a proper
arch/x86/include/asm/sipi.h:28: * @gdt:		U-Boot GDT (gd->arch.gdt)
arch/x86/cpu/baytrail/fsp_configs.c:35:	const void *blob = gd->fdt_blob;
arch/x86/cpu/baytrail/fsp_configs.c:97:			"fsp,igd-dvmt50-pre-alloc", IGD_DVMT50_PRE_ALLOC_64MB);
arch/x86/cpu/baytrail/fsp_configs.c:108:						      "fsp,igd-render-standby");
arch/x86/cpu/quark/dram.c:44:	const void *blob = gd->fdt_blob;
arch/x86/cpu/quark/dram.c:141:	gd->ram_size = mrc_params.mem_size;
arch/x86/cpu/quark/dram.c:149:		       (~(gd->ram_size - 1)) | MTRR_PHYS_MASK_VALID);
arch/x86/cpu/quark/dram.c:156:		gd->arch.mrc_output = cache;
arch/x86/cpu/quark/dram.c:157:		gd->arch.mrc_output_len = sizeof(struct mrc_timings);
arch/x86/cpu/quark/dram.c:166:	gd->bd->bi_dram[0].start = 0;
arch/x86/cpu/quark/dram.c:167:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/x86/cpu/quark/dram.c:182:	return gd->ram_size;
arch/x86/cpu/intel_common/lpc.c:52:	count = fdtdec_get_int_array_count(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/intel_common/microcode.c:126:	const void *blob = gd->fdt_blob;
arch/x86/cpu/intel_common/cpu.c:22:	if (gd->arch.bist != 0) {
arch/x86/cpu/intel_common/cpu.c:24:		printf("BIST failed: %08x\n", gd->arch.bist);
arch/x86/cpu/intel_common/mrc.c:27:	struct memory_info *info = &gd->arch.meminfo;
arch/x86/cpu/intel_common/mrc.c:55:	struct memory_info *info = &gd->arch.meminfo;
arch/x86/cpu/intel_common/mrc.c:64:		gd->bd->bi_dram[num_banks].start = area->start;
arch/x86/cpu/intel_common/mrc.c:65:		gd->bd->bi_dram[num_banks].size = area->size;
arch/x86/cpu/intel_common/mrc.c:135:	const void *blob = gd->fdt_blob;
arch/x86/cpu/efi/sdram.c:14:	return (ulong)efi_get_ram_base() + gd->ram_size;
arch/x86/cpu/efi/sdram.c:19:	/* gd->ram_size is set as part of EFI init */
arch/x86/cpu/efi/sdram.c:26:	gd->bd->bi_dram[0].start = efi_get_ram_base();
arch/x86/cpu/efi/sdram.c:27:	gd->bd->bi_dram[0].size = CONFIG_EFI_RAM_SIZE;
arch/x86/cpu/efi/payload.c:85:	gd->ram_size = 0;
arch/x86/cpu/efi/payload.c:89:			gd->ram_size += desc->num_pages << EFI_PAGE_SHIFT;
arch/x86/cpu/efi/payload.c:120:		gd->bd->bi_dram[num_banks].start = desc->physical_start;
arch/x86/cpu/efi/payload.c:121:		gd->bd->bi_dram[num_banks].size = desc->num_pages <<
arch/x86/cpu/efi/payload.c:151:	debug("table=%lx\n", gd->arch.table);
arch/x86/cpu/efi/payload.c:152:	if (!gd->arch.table)
arch/x86/cpu/efi/payload.c:155:	hdr = (struct efi_info_hdr *)gd->arch.table;
arch/x86/cpu/efi/payload.c:157:	gd->start_addr_sp -= hdr->total_size;
arch/x86/cpu/efi/payload.c:158:	memcpy((void *)gd->start_addr_sp, hdr, hdr->total_size);
arch/x86/cpu/efi/payload.c:160:	      gd->arch.table, gd->start_addr_sp, hdr->total_size);
arch/x86/cpu/efi/payload.c:161:	gd->arch.table = gd->start_addr_sp;
arch/x86/cpu/braswell/fsp_configs.c:49:	const void *blob = gd->fdt_blob;
arch/x86/cpu/braswell/fsp_configs.c:80:		"fsp,igd-dvmt50-pre-alloc", IGD_DVMT50_PRE_ALLOC_32MB);
arch/x86/cpu/braswell/fsp_configs.c:145:	if (gd->arch.x86_mask == 2)
arch/x86/cpu/ivybridge/lpc.c:88:	if (fdtdec_get_byte_array(gd->fdt_blob, dev_of_offset(pch),
arch/x86/cpu/ivybridge/lpc.c:115:	if (fdtdec_get_byte_array(gd->fdt_blob, dev_of_offset(pch),
arch/x86/cpu/ivybridge/lpc.c:129:	const void *blob = gd->fdt_blob;
arch/x86/cpu/ivybridge/lpc.c:506:	if (!(gd->flags & GD_FLG_RELOC)) {
arch/x86/cpu/ivybridge/sata.c:41:	const void *blob = gd->fdt_blob;
arch/x86/cpu/ivybridge/sata.c:192:	const void *blob = gd->fdt_blob;
arch/x86/cpu/ivybridge/sata.c:216:	if (gd->flags & GD_FLG_RELOC) {
arch/x86/cpu/ivybridge/sata.c:234:	if (!(gd->flags & GD_FLG_RELOC))
arch/x86/cpu/ivybridge/sdram_nop.c:12:	gd->ram_size = 1ULL << 31;
arch/x86/cpu/ivybridge/sdram_nop.c:13:	gd->bd->bi_dram[0].start = 0;
arch/x86/cpu/ivybridge/sdram_nop.c:14:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/x86/cpu/ivybridge/sdram.c:232:	struct memory_info *info = &gd->arch.meminfo;
arch/x86/cpu/ivybridge/sdram.c:483:	pei_data->boot_mode = gd->arch.pei_boot_mode;
arch/x86/cpu/ivybridge/sdram.c:484:	debug("Boot mode %d\n", gd->arch.pei_boot_mode);
arch/x86/cpu/ivybridge/sdram.c:530:	gd->ram_size = gd->arch.meminfo.total_32bit_memory;
arch/x86/cpu/ivybridge/sdram.c:544:		gd->arch.mrc_output = (char *)pei_data->mrc_output;
arch/x86/cpu/ivybridge/sdram.c:545:		gd->arch.mrc_output_len = pei_data->mrc_output_len;
arch/x86/cpu/ivybridge/northbridge.c:210:	if (!(gd->flags & GD_FLG_RELOC))
arch/x86/cpu/ivybridge/fsp_configs.c:17:	const void *blob = gd->fdt_blob;
arch/x86/cpu/ivybridge/model_206ax.c:290:	tcc_offset = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/ivybridge/cpu.c:66:	/* TODO(sjg@chromium.org): Get rid of gd->hose */
arch/x86/cpu/ivybridge/cpu.c:67:	gd->hose = hose;
arch/x86/cpu/ivybridge/cpu.c:180:	gd->arch.pei_boot_mode = boot_mode;
arch/x86/cpu/ivybridge/bd82x6x.c:157:	if (!(gd->flags & GD_FLG_RELOC))
arch/x86/cpu/mp_init.c:236:	params16->gdt = (uint32_t)gd->arch.gdt;
arch/x86/cpu/mp_init.c:571:	cpu->req_seq = fdtdec_get_int(gd->fdt_blob, dev_of_offset(cpu), "reg",
arch/x86/cpu/mp_init.c:574:	plat->device_id = gd->arch.x86_device;
arch/x86/cpu/tangier/sdram.c:161:		gd->bd->bi_dram[bank].start = mentry->phys_start;
arch/x86/cpu/tangier/sdram.c:162:		gd->bd->bi_dram[bank].size = mentry->pages << 12;
arch/x86/cpu/tangier/sdram.c:205:	gd->ram_size = sfi_get_ram_size();
arch/x86/cpu/coreboot/sdram.c:100:	gd->ram_size = ram_size;
arch/x86/cpu/coreboot/sdram.c:116:				gd->bd->bi_dram[j].start = memrange->base;
arch/x86/cpu/coreboot/sdram.c:117:				gd->bd->bi_dram[j].size = memrange->size;
arch/x86/cpu/coreboot/coreboot.c:64:	if (!fdtdec_get_config_bool(gd->fdt_blob, "u-boot,no-apm-finalize")) {
arch/x86/cpu/coreboot/coreboot.c:76:	if (gd->flags & GD_FLG_COLD_BOOT)
arch/x86/cpu/qemu/dram.c:22:	gd->ram_size = ram * 1024;
arch/x86/cpu/qemu/dram.c:30:	gd->bd->bi_dram[0].start = 0;
arch/x86/cpu/qemu/dram.c:31:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/x86/cpu/qemu/dram.c:46:	return gd->ram_size;
arch/x86/cpu/qemu/e820.c:28:	entries[2].size = gd->relocaddr - TOTAL_MALLOC_LEN - ISA_END_ADDRESS;
arch/x86/cpu/qemu/e820.c:32:	entries[3].addr = gd->relocaddr - TOTAL_MALLOC_LEN;
arch/x86/cpu/qemu/e820.c:36:	entries[4].addr = gd->relocaddr;
arch/x86/cpu/qemu/e820.c:37:	entries[4].size = gd->ram_size - gd->relocaddr;
arch/x86/cpu/turbo.c:28:	return gd->arch.turbo_state;
arch/x86/cpu/turbo.c:33:	gd->arch.turbo_state = state;
arch/x86/cpu/irq.c:148:	const void *blob = gd->fdt_blob;
arch/x86/cpu/irq.c:313:	gd->arch.pirq_routing_table = rt;
arch/x86/cpu/irq.c:344:	pirq_route_irqs(dev, gd->arch.pirq_routing_table->slots,
arch/x86/cpu/irq.c:345:			get_irq_slot_count(gd->arch.pirq_routing_table));
arch/x86/cpu/irq.c:355:	if (!gd->arch.pirq_routing_table)
arch/x86/cpu/irq.c:358:	return copy_pirq_routing_table(addr, gd->arch.pirq_routing_table);
arch/x86/cpu/cpu.c:156:	       cpu_vendor_name(gd->arch.x86_vendor), gd->arch.x86_device);
arch/x86/cpu/cpu.c:160:	      acpi_ss_string(gd->arch.prev_sleep_state));
arch/x86/cpu/cpu.c:189:	if (fadt && gd->arch.prev_sleep_state == ACPI_S3)
arch/x86/cpu/cpu_x86.c:19:	plat->cpu_id = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/cpu_x86.c:21:	plat->family = gd->arch.x86;
arch/x86/cpu/cpu_x86.c:31:	const char *vendor = cpu_vendor_name(gd->arch.x86_vendor);
arch/x86/cpu/cpu_x86.c:60:	node = fdt_path_offset(gd->fdt_blob, "/cpus");
arch/x86/cpu/cpu_x86.c:64:	for (cpu = fdt_first_subnode(gd->fdt_blob, node);
arch/x86/cpu/cpu_x86.c:66:	     cpu = fdt_next_subnode(gd->fdt_blob, cpu)) {
arch/x86/cpu/cpu_x86.c:69:		device_type = fdt_getprop(gd->fdt_blob, cpu,
arch/x86/cpu/mtrr.c:29:	if (!gd->arch.has_mtrr)
arch/x86/cpu/mtrr.c:45:	if (!gd->arch.has_mtrr)
arch/x86/cpu/mtrr.c:55:	struct mtrr_request *req = gd->arch.mtrr_req;
arch/x86/cpu/mtrr.c:60:	debug("%s: enabled=%d, count=%d\n", __func__, gd->arch.has_mtrr,
arch/x86/cpu/mtrr.c:61:	      gd->arch.mtrr_req_count);
arch/x86/cpu/mtrr.c:62:	if (!gd->arch.has_mtrr)
arch/x86/cpu/mtrr.c:68:	for (i = 0; i < gd->arch.mtrr_req_count; i++, req++) {
arch/x86/cpu/mtrr.c:91:	debug("%s: count=%d\n", __func__, gd->arch.mtrr_req_count);
arch/x86/cpu/mtrr.c:92:	if (!gd->arch.has_mtrr)
arch/x86/cpu/mtrr.c:95:	if (gd->arch.mtrr_req_count == MAX_MTRR_REQUESTS)
arch/x86/cpu/mtrr.c:97:	req = &gd->arch.mtrr_req[gd->arch.mtrr_req_count++];
arch/x86/cpu/mtrr.c:101:	debug("%d: type=%d, %08llx  %08llx\n", gd->arch.mtrr_req_count - 1,
arch/x86/cpu/broadwell/lpc.c:53:	if (!(gd->flags & GD_FLG_RELOC)) {
arch/x86/cpu/broadwell/sata.c:236:	const void *blob = gd->fdt_blob;
arch/x86/cpu/broadwell/sata.c:248:	if (!(gd->flags & GD_FLG_RELOC))
arch/x86/cpu/broadwell/sdram.c:160:	struct memory_info *info = &gd->arch.meminfo;
arch/x86/cpu/broadwell/sdram.c:249:	gd->ram_size = gd->arch.meminfo.total_32bit_memory;
arch/x86/cpu/broadwell/sdram.c:250:	debug("RAM size %llx\n", (unsigned long long)gd->ram_size);
arch/x86/cpu/broadwell/sdram.c:260:		gd->arch.mrc_output = (char *)pei_data->data_to_save;
arch/x86/cpu/broadwell/sdram.c:261:		gd->arch.mrc_output_len = pei_data->data_to_save_size;
arch/x86/cpu/broadwell/sdram.c:263:	gd->arch.pei_meminfo = pei_data->meminfo;
arch/x86/cpu/broadwell/pinctrl_broadwell.c:48:	const void *blob = gd->fdt_blob;
arch/x86/cpu/broadwell/pinctrl_broadwell.c:113:	const void *blob = gd->fdt_blob;
arch/x86/cpu/broadwell/pinctrl_broadwell.c:225:	if (gd->flags & GD_FLG_RELOC)
arch/x86/cpu/broadwell/northbridge.c:42:	if (!(gd->flags & GD_FLG_RELOC))
arch/x86/cpu/broadwell/pch.c:192:	ret = fdtdec_get_int_array(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/broadwell/pch.c:199:	enable_alt_smi(dev, fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/broadwell/pch.c:492:	if (!(gd->flags & GD_FLG_RELOC))
arch/x86/cpu/broadwell/cpu.c:142:	gd->arch.pei_boot_mode = PEI_BOOT_NONE;
arch/x86/cpu/broadwell/cpu.c:264:	ramp = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/broadwell/cpu.c:279:	min_vid = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/broadwell/cpu.c:570:	tcc_offset = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/x86/cpu/i386/cpu.c:120:	gdt_addr = new_gd->arch.gdt;
arch/x86/cpu/i386/cpu.c:134:	new_gd->arch.gd_addr = new_gd;
arch/x86/cpu/i386/cpu.c:136:		     (ulong)&new_gd->arch.gd_addr, 0xfffff);
arch/x86/cpu/i386/cpu.c:304:	return gd->arch.x86_device & 0x0fff0ff0;
arch/x86/cpu/i386/cpu.c:309:	return gd->arch.x86_mask;
arch/x86/cpu/i386/cpu.c:327:	/* identify CPU via cpuid and store the decoded info into gd->arch */
arch/x86/cpu/i386/cpu.c:334:		gd->arch.x86 = c.x86;
arch/x86/cpu/i386/cpu.c:335:		gd->arch.x86_vendor = cpu.vendor;
arch/x86/cpu/i386/cpu.c:336:		gd->arch.x86_model = c.x86_model;
arch/x86/cpu/i386/cpu.c:337:		gd->arch.x86_mask = c.x86_mask;
arch/x86/cpu/i386/cpu.c:338:		gd->arch.x86_device = cpu.device;
arch/x86/cpu/i386/cpu.c:340:		gd->arch.has_mtrr = has_mtrr();
arch/x86/cpu/i386/cpu.c:343:	gd->pci_ram_top = 0x80000000U;
arch/x86/cpu/i386/cpu.c:346:	if (gd->arch.has_mtrr) {
arch/x86/cpu/i386/interrupt.c:102:	if (gd->flags & GD_FLG_RELOC)
arch/x86/cpu/i386/interrupt.c:103:		printf("Original EIP :[<%08lx>]\n", eip - gd->reloc_off);
arch/arm/mach-stm32mp/dram_init.c:30:	gd->ram_size = ram.size;
arch/arm/mach-stm32mp/cpu.c:178:		gd->flags |= GD_FLG_SILENT | GD_FLG_DISABLE_CONSOLE;
arch/arm/mach-uniphier/board_late_init.c:44:	compat = fdt_stringlist_get(gd->fdt_blob, 0, "compatible", 0, NULL);
arch/arm/mach-uniphier/dram_init.c:198:	gd->ram_size = 0;
arch/arm/mach-uniphier/dram_init.c:231:			gd->ram_size += max_size;
arch/arm/mach-uniphier/dram_init.c:235:		gd->ram_size += dram_map[i].size;
arch/arm/mach-uniphier/dram_init.c:243:		gd->ram_size -= 64;
arch/arm/mach-uniphier/dram_init.c:256:		if (i >= ARRAY_SIZE(gd->bd->bi_dram))
arch/arm/mach-uniphier/dram_init.c:259:		gd->bd->bi_dram[i].start = dram_map[i].base;
arch/arm/mach-uniphier/dram_init.c:260:		gd->bd->bi_dram[i].size = dram_map[i].size;
arch/arm/mach-uniphier/boards.c:156:		if (!fdt_node_check_compatible(gd->fdt_blob, 0,
arch/arm/mach-tegra/tegra124/xusb-padctl.c:341:		count = fdtdec_find_aliases_for_id(gd->fdt_blob, "padctl",
arch/arm/mach-tegra/tegra186/nvtboot_mem.c:81:	gd->ram_size = 0;
arch/arm/mach-tegra/tegra186/nvtboot_mem.c:91:		gd->ram_size += bank_size;
arch/arm/mach-tegra/tegra186/nvtboot_mem.c:153:	if ((gd->start_addr_sp - region_base) < MIN_USABLE_STACK_SIZE) {
arch/arm/mach-tegra/tegra186/nvtboot_mem.c:159:		gd->bd->bi_dram[i].start = tegra_mem_map[1 + i].virt;
arch/arm/mach-tegra/tegra186/nvtboot_mem.c:160:		gd->bd->bi_dram[i].size = tegra_mem_map[1 + i].size;
arch/arm/mach-tegra/tegra186/nvtboot_mem.c:164:	gd->pci_ram_top = ram_top;
arch/arm/mach-tegra/tegra210/xusb-padctl.c:447:		count = fdtdec_find_aliases_for_id(gd->fdt_blob, "padctl",
arch/arm/mach-tegra/board.c:122:	gd->ram_size = query_sdram_size();
arch/arm/mach-tegra/emc.c:36:	return tegra_set_emc(gd->fdt_blob, rate);
arch/arm/mach-tegra/tegra20/warmboot.c:130:	struct emc_ctlr *emc = emc_get_controller(gd->fdt_blob);
arch/arm/mach-tegra/tegra20/warmboot.c:315:		seg_address + seg_length >= NV_PA_SDRAM_BASE + gd->ram_size) {
arch/arm/mach-tegra/board2.c:130:	gd->bd->bi_boot_params = (NV_PA_SDRAM_BASE + 0x100);
arch/arm/mach-tegra/board2.c:215:	if (gd->bd->bi_dram[1].start) {
arch/arm/mach-tegra/board2.c:221:		efi_add_memory_map(gd->bd->bi_dram[1].start,
arch/arm/mach-tegra/board2.c:222:				   gd->bd->bi_dram[1].size >> EFI_PAGE_SHIFT,
arch/arm/mach-tegra/board2.c:289:	if (gd->ram_size < SZ_2G)
arch/arm/mach-tegra/board2.c:290:		total_size_below_4g = gd->ram_size;
arch/arm/mach-tegra/board2.c:330:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-tegra/board2.c:331:	gd->bd->bi_dram[0].size = usable_ram_size_below_4g();
arch/arm/mach-tegra/board2.c:334:	gd->pci_ram_top = gd->bd->bi_dram[0].start + gd->bd->bi_dram[0].size;
arch/arm/mach-tegra/board2.c:338:	if (gd->ram_size > SZ_2G) {
arch/arm/mach-tegra/board2.c:339:		gd->bd->bi_dram[1].start = 0x100000000;
arch/arm/mach-tegra/board2.c:340:		gd->bd->bi_dram[1].size = gd->ram_size - SZ_2G;
arch/arm/mach-tegra/board2.c:344:		gd->bd->bi_dram[1].start = 0;
arch/arm/mach-tegra/board2.c:345:		gd->bd->bi_dram[1].size = 0;
arch/arm/mach-tegra/board2.c:359: * return gd->bd->bi_dram[1].start + gd->bd->bi_dram[1].size.
arch/arm/mach-aspeed/ast2500/sdram_ast2500.c:401:	priv->clock_rate = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
arch/arm/mach-aspeed/ast2500-board.c:56:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
arch/arm/mach-aspeed/ast2500-board.c:79:	gd->ram_size = ram.size;
arch/arm/mach-meson/board.c:25:	offset = fdt_path_offset(gd->fdt_blob, "/memory");
arch/arm/mach-meson/board.c:29:	val = fdt_getprop(gd->fdt_blob, offset, "reg", &len);
arch/arm/mach-meson/board.c:34:	gd->ram_size = get_unaligned_be64(&val[1]);
arch/arm/lib/cache-cp15.c:29:	u64 *page_table = (u64 *)gd->arch.tlb_addr;
arch/arm/lib/cache-cp15.c:33:	u32 *page_table = (u32 *)gd->arch.tlb_addr;
arch/arm/lib/cache-cp15.c:56:	u64 *page_table = (u64 *)gd->arch.tlb_addr;
arch/arm/lib/cache-cp15.c:58:	u32 *page_table = (u32 *)gd->arch.tlb_addr;
arch/arm/lib/cache-cp15.c:90:	bd_t *bd = gd->bd;
arch/arm/lib/cache-cp15.c:126:		u64 *page_table = (u64 *)(gd->arch.tlb_addr + (4096 * 4));
arch/arm/lib/cache-cp15.c:127:		u64 tpt = gd->arch.tlb_addr + (4096 * i);
arch/arm/lib/cache-cp15.c:147:			: "r"(gd->arch.tlb_addr + (4096 * 4)), "r"(0)
arch/arm/lib/cache-cp15.c:159:			: "r"(gd->arch.tlb_addr + (4096 * 4)), "r"(0)
arch/arm/lib/cache-cp15.c:176:	reg = gd->arch.tlb_addr & TTBR0_BASE_ADDR_MASK;
arch/arm/lib/cache-cp15.c:189:		     : : "r" (gd->arch.tlb_addr) : "memory");
Binary file arch/arm/lib/.crt0.S.swp matches
arch/arm/lib/crt0.S:94://	ldr	r0, [r9, #GD_START_ADDR_SP]	/* sp = gd->start_addr_sp */
arch/arm/lib/crt0.S:97://	ldr	r9, [r9, #GD_BD]		/* r9 = gd->bd */
arch/arm/lib/crt0.S:101:////	ldr	r0, [r9, #GD_RELOC_OFF]		/* r0 = gd->reloc_off */
arch/arm/lib/crt0.S:106:////	ldr	r0, [r9, #GD_RELOCADDR]		/* r0 = gd->relocaddr */
arch/arm/lib/crt0.S:162:	ldr	r0, [r9, #GD_START_ADDR_SP]	/* sp = gd->start_addr_sp */
arch/arm/lib/crt0.S:165:	ldr	r9, [r9, #GD_BD]		/* r9 = gd->bd */
arch/arm/lib/crt0.S:169:	ldr	r0, [r9, #GD_RELOC_OFF]		/* r0 = gd->reloc_off */
arch/arm/lib/crt0.S:174:	ldr	r0, [r9, #GD_RELOCADDR]		/* r0 = gd->relocaddr */
arch/arm/lib/crt0_64.S:98:	ldr	x0, [x18, #GD_START_ADDR_SP]	/* x0 <- gd->start_addr_sp */
arch/arm/lib/crt0_64.S:100:	ldr	x18, [x18, #GD_NEW_GD]		/* x18 <- gd->new_gd */
arch/arm/lib/crt0_64.S:111:	ldr	x9, [x18, #GD_RELOC_OFF]	/* x9 <- gd->reloc_off */
arch/arm/lib/crt0_64.S:113:	ldr	x0, [x18, #GD_RELOCADDR]	/* x0 <- gd->relocaddr */
arch/arm/lib/interrupts_64.c:32:	if (gd->flags & GD_FLG_RELOC)
arch/arm/lib/interrupts_64.c:34:		       regs->elr - gd->reloc_off,
arch/arm/lib/interrupts_64.c:35:		       regs->regs[30] - gd->reloc_off);
arch/arm/lib/bootm.c:67:		if (sp < gd->bd->bi_dram[bank].start)
arch/arm/lib/bootm.c:69:		bank_end = gd->bd->bi_dram[bank].start +
arch/arm/lib/bootm.c:70:			gd->bd->bi_dram[bank].size;
arch/arm/lib/bootm.c:239:		setup_start_tag(gd->bd);
arch/arm/lib/bootm.c:243:			setup_commandline_tag(gd->bd, commandline);
arch/arm/lib/bootm.c:247:			setup_memory_tags(gd->bd);
arch/arm/lib/bootm.c:257:				setup_initrd_tag(gd->bd, images->initrd_start,
arch/arm/lib/bootm.c:260:				setup_initrd_tag(gd->bd, images->rd_start,
arch/arm/lib/bootm.c:265:		setup_end_tag(gd->bd);
arch/arm/lib/bootm.c:307:		armv8_switch_to_el1(0, (u64)gd->bd->bi_arch_number,
arch/arm/lib/bootm.c:350:			armv8_switch_to_el2(0, (u64)gd->bd->bi_arch_number,
arch/arm/lib/bootm.c:361:	unsigned long machid = gd->bd->bi_arch_number;
arch/arm/lib/bootm.c:389:		r2 = gd->bd->bi_boot_params;
arch/arm/lib/bootm-fdt.c:38:	bd_t *bd = gd->bd;
arch/arm/lib/image.c:70:		dst = gd->bd->bi_dram[0].start;
arch/arm/lib/stack.c:20:	gd->start_addr_sp -= 128;	/* leave 32 words for abort-stack */
arch/arm/lib/stack.c:21:	gd->irq_sp = gd->start_addr_sp;
arch/arm/lib/stack.c:24:	gd->irq_sp = gd->start_addr_sp;
arch/arm/lib/stack.c:28:	gd->start_addr_sp -= 16;
arch/arm/lib/relocate.S:35:	ldr	r0, [r9, #GD_RELOCADDR]	/* r0 = gd->relocaddr */
arch/arm/lib/relocate.S:44:	ldr	r0, [r9, #GD_RELOCADDR]	/* r0 = gd->relocaddr */
arch/arm/lib/relocate.S:53:	ldr	r0, [r9, #GD_RELOCADDR]	/* r0 = gd->relocaddr */
arch/arm/lib/interrupts.c:34:	IRQ_STACK_START_IN = gd->irq_sp + 8;
arch/arm/lib/interrupts.c:101:	if (gd->flags & GD_FLG_RELOC) {
arch/arm/lib/interrupts.c:103:		       instruction_pointer(regs) - gd->reloc_off,
arch/arm/lib/interrupts.c:104:		       regs->ARM_lr - gd->reloc_off);
arch/arm/mach-davinci/timer.c:46:	gd->arch.timer_rate_hz = CONFIG_SYS_HZ_CLOCK / TIM_CLK_DIV;
arch/arm/mach-davinci/timer.c:47:	gd->arch.timer_reset_value = 0;
arch/arm/mach-davinci/timer.c:60:	if (now < gd->arch.tbl)
arch/arm/mach-davinci/timer.c:61:		gd->arch.tbu++;
arch/arm/mach-davinci/timer.c:62:	gd->arch.tbl = now;
arch/arm/mach-davinci/timer.c:64:	return (((unsigned long long)gd->arch.tbu) << 32) | gd->arch.tbl;
arch/arm/mach-davinci/timer.c:71:	timer_diff = get_ticks() - gd->arch.timer_reset_value;
arch/arm/mach-davinci/timer.c:74:		     (gd->arch.timer_rate_hz / CONFIG_SYS_HZ)) - base;
arch/arm/mach-davinci/timer.c:81:	endtime = lldiv((unsigned long long)usec * gd->arch.timer_rate_hz,
arch/arm/mach-davinci/timer.c:95:	return gd->arch.timer_rate_hz;
arch/arm/mach-davinci/misc.c:24:	/* dram_init must store complete ramsize in gd->ram_size */
arch/arm/mach-davinci/misc.c:25:	gd->ram_size = get_ram_size(
arch/arm/mach-davinci/misc.c:33:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-davinci/misc.c:34:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/arm/mach-davinci/cpu.c:105:	gd->bd->bi_arm_freq = clk_get(DAVINCI_ARM_CLKID) / 1000000;
arch/arm/mach-davinci/cpu.c:107:	gd->bd->bi_ddr_freq = cpu_is_da830() ? 0 :
arch/arm/mach-davinci/cpu.c:109:	gd->bd->bi_dsp_freq = 0;
arch/arm/mach-davinci/cpu.c:190:	gd->bd->bi_arm_freq = pll_sysclk_mhz(pllbase, ARM_PLLDIV);
arch/arm/mach-davinci/cpu.c:193:	gd->bd->bi_dsp_freq =
arch/arm/mach-davinci/cpu.c:196:	gd->bd->bi_dsp_freq = 0;
arch/arm/mach-davinci/cpu.c:203:	gd->bd->bi_ddr_freq = pll_sysclk_mhz(pllbase, DDR_PLLDIV) / 2;
arch/arm/mach-socfpga/clock_manager.c:51:	gd->bd->bi_arm_freq = cm_get_mpu_clk_hz() / 1000000;
arch/arm/mach-socfpga/clock_manager.c:52:	gd->bd->bi_dsp_freq = 0;
arch/arm/mach-socfpga/clock_manager.c:55:	gd->bd->bi_ddr_freq = cm_get_sdram_clk_hz() / 1000000;
arch/arm/mach-socfpga/clock_manager.c:57:	gd->bd->bi_ddr_freq = 0;
arch/arm/mach-socfpga/misc_s10.c:58:	const void *fdt = gd->fdt_blob;
arch/arm/mach-socfpga/reset_manager_arria10.c:95:		if (get_bridge_init_val(gd->fdt_blob,
arch/arm/mach-socfpga/spl_s10.c:184:	gd->ram_size = sdram_calculate_size();
arch/arm/mach-socfpga/spl_s10.c:185:	printf("DDR: %d MiB\n", (int)(gd->ram_size >> 20));
arch/arm/mach-socfpga/spl_s10.c:189:	if (get_ram_size(0, gd->ram_size) != gd->ram_size) {
arch/arm/mach-socfpga/misc.c:172:	const void *fdt = gd->fdt_blob;
arch/arm/mach-socfpga/board.c:44:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
arch/arm/mach-socfpga/board.c:66:	count = fdtdec_find_aliases_for_id(gd->fdt_blob, "udc",
arch/arm/mach-socfpga/board.c:72:	addr = fdtdec_get_addr(gd->fdt_blob, node[0], "reg");
arch/arm/mach-socfpga/spl_a10.c:90:	cm_basic_init(gd->fdt_blob);
arch/arm/mach-socfpga/spl_a10.c:101:	config_dedicated_pins(gd->fdt_blob);
arch/arm/mach-rockchip/rk3368/rk3368.c:56:	size_t max_size = min((unsigned long)gd->ram_size, gd->ram_top);
arch/arm/mach-rockchip/rk3368/rk3368.c:59:	gd->bd->bi_dram[0].start = 0x200000;
arch/arm/mach-rockchip/rk3368/rk3368.c:60:	gd->bd->bi_dram[0].size = max_size - gd->bd->bi_dram[0].start;
arch/arm/mach-rockchip/rk3288-board-spl.c:38:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3288-board-spl.c:224:	led_name = fdtdec_get_config_string(gd->fdt_blob, "u-boot,boot-led");
arch/arm/mach-rockchip/rk3288-board-spl.c:298:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-rockchip/rk3288-board-spl.c:299:	gd->bd->bi_dram[0].size = size;
arch/arm/mach-rockchip/rk3328/rk3328.c:37:	size_t max_size = min((unsigned long)gd->ram_size, gd->ram_top);
arch/arm/mach-rockchip/rk3328/rk3328.c:40:	gd->bd->bi_dram[0].start = 0x200000;
arch/arm/mach-rockchip/rk3328/rk3328.c:41:	gd->bd->bi_dram[0].size = max_size - gd->bd->bi_dram[0].start;
arch/arm/mach-rockchip/spl-boot-order.c:98:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3036-board.c:45:	gd->ram_size = sdram_size();
arch/arm/mach-rockchip/rk3036-board.c:74:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3128-board.c:49:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-rockchip/rk3128-board.c:50:	gd->bd->bi_dram[0].size = 0x8400000;
arch/arm/mach-rockchip/rk3128-board.c:52:	gd->bd->bi_dram[1].start = CONFIG_SYS_SDRAM_BASE
arch/arm/mach-rockchip/rk3128-board.c:53:				+ gd->bd->bi_dram[0].size + 0xe00000;
arch/arm/mach-rockchip/rk3128-board.c:54:	gd->bd->bi_dram[1].size = gd->bd->bi_dram[0].start
arch/arm/mach-rockchip/rk3128-board.c:55:				+ gd->ram_size - gd->bd->bi_dram[1].start;
arch/arm/mach-rockchip/rk3128-board.c:83:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3188-board-spl.c:36:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3188-board-spl.c:164:	led_name = fdtdec_get_config_string(gd->fdt_blob, "u-boot,boot-led");
arch/arm/mach-rockchip/sdram_common.c:70:	gd->ram_size = ram.size;
arch/arm/mach-rockchip/sdram_common.c:81:	return (gd->ram_top > top) ? top : gd->ram_top;
arch/arm/mach-rockchip/rk322x-board.c:77:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-rockchip/rk322x-board.c:78:	gd->bd->bi_dram[0].size = 0x8400000;
arch/arm/mach-rockchip/rk322x-board.c:80:	gd->bd->bi_dram[1].start = CONFIG_SYS_SDRAM_BASE
arch/arm/mach-rockchip/rk322x-board.c:81:				+ gd->bd->bi_dram[0].size + 0x200000;
arch/arm/mach-rockchip/rk322x-board.c:82:	gd->bd->bi_dram[1].size = gd->bd->bi_dram[0].start
arch/arm/mach-rockchip/rk322x-board.c:83:				+ gd->ram_size - gd->bd->bi_dram[1].start;
arch/arm/mach-rockchip/rk322x-board.c:111:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3288-board.c:37:	if (!fdt_node_check_compatible(gd->fdt_blob, 0,
arch/arm/mach-rockchip/rk3288-board.c:179:	if (!fdt_node_check_compatible(gd->fdt_blob, 0, "google,veyron")) {
arch/arm/mach-rockchip/rk3288-board.c:212:	const void *blob = gd->fdt_blob;
arch/arm/mach-rockchip/rk3399/rk3399.c:39:	size_t max_size = min((unsigned long)gd->ram_size, gd->ram_top);
arch/arm/mach-rockchip/rk3399/rk3399.c:42:	gd->bd->bi_dram[0].start = 0x200000;
arch/arm/mach-rockchip/rk3399/rk3399.c:43:	gd->bd->bi_dram[0].size = max_size - gd->bd->bi_dram[0].start;
arch/arm/mach-exynos/spl_boot.c:280:	gd->flags |= GD_FLG_RELOC;
arch/arm/mach-exynos/spl_boot.c:281:	gd->baudrate = CONFIG_BAUDRATE;
arch/arm/mach-exynos/spl_boot.c:282:	gd->have_console = 1;
arch/arm/mach-orion5x/timer.c:78:#define timestamp gd->arch.tbl
arch/arm/mach-orion5x/timer.c:79:#define lastdec gd->arch.lastinc
arch/arm/mach-orion5x/dram.c:37:	/* dram_init must store complete ramsize in gd->ram_size */
arch/arm/mach-orion5x/dram.c:38:	gd->ram_size = get_ram_size(
arch/arm/mach-orion5x/dram.c:49:		gd->bd->bi_dram[i].start = orion5x_sdram_bar(i);
arch/arm/mach-orion5x/dram.c:50:		gd->bd->bi_dram[i].size = get_ram_size(
arch/arm/mach-orion5x/dram.c:51:			(long *) (gd->bd->bi_dram[i].start),
arch/arm/mach-zynqmp-r5/cpu.c:22:	gd->cpu_clk = CONFIG_CPU_FREQ_HZ;
arch/arm/mach-omap2/omap-cache.c:56:	bd_t *bd = gd->bd;
arch/arm/mach-omap2/timer.c:76:	if (now >= gd->arch.lastinc) {	/* normal mode (non roll) */
arch/arm/mach-omap2/timer.c:78:		gd->arch.tbl += (now - gd->arch.lastinc);
arch/arm/mach-omap2/timer.c:80:		gd->arch.tbl += ((TIMER_OVERFLOW_VAL / (TIMER_CLOCK /
arch/arm/mach-omap2/timer.c:81:				CONFIG_SYS_HZ)) - gd->arch.lastinc) + now;
arch/arm/mach-omap2/timer.c:83:	gd->arch.lastinc = now;
arch/arm/mach-omap2/timer.c:84:	return gd->arch.tbl;
arch/arm/mach-omap2/am33xx/board.c:48:	/* dram_init must store complete ramsize in gd->ram_size */
arch/arm/mach-omap2/am33xx/board.c:49:	gd->ram_size = get_ram_size(
arch/arm/mach-omap2/am33xx/board.c:57:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-omap2/am33xx/board.c:58:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/arm/mach-omap2/am33xx/board.c:479:	/* dram_init must store complete ramsize in gd->ram_size */
arch/arm/mach-omap2/am33xx/board.c:480:	gd->ram_size = get_ram_size(
arch/arm/mach-omap2/hwinit-common.c:217:	gd->ram_size = omap_sdram_size();
arch/arm/mach-omap2/hwinit-common.c:307:	gd->ram_size = omap_sdram_size();
arch/arm/mach-omap2/boot-common.c:127:	gd->arch.omap_boot_device = boot_device;
arch/arm/mach-omap2/boot-common.c:174:	gd->arch.omap_boot_mode = boot_mode;
arch/arm/mach-omap2/boot-common.c:181:	gd->arch.omap_ch_flags = omap_boot_params->ch_flags;
arch/arm/mach-omap2/boot-common.c:188:	return gd->arch.omap_boot_device;
arch/arm/mach-omap2/boot-common.c:193:	return gd->arch.omap_boot_mode;
arch/arm/mach-omap2/omap3/emif4.c:140:	gd->ram_size = size0 + size1;
arch/arm/mach-omap2/omap3/emif4.c:151:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
arch/arm/mach-omap2/omap3/emif4.c:152:	gd->bd->bi_dram[0].size = size0;
arch/arm/mach-omap2/omap3/emif4.c:153:	gd->bd->bi_dram[1].start = PHYS_SDRAM_1 + get_sdr_cs_offset(CS1);
arch/arm/mach-omap2/omap3/emif4.c:154:	gd->bd->bi_dram[1].size = size1;
arch/arm/mach-omap2/omap3/sdrc.c:213:	gd->ram_size = size0 + size1;
arch/arm/mach-omap2/omap3/sdrc.c:225:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
arch/arm/mach-omap2/omap3/sdrc.c:226:	gd->bd->bi_dram[0].size = size0;
arch/arm/mach-omap2/omap3/sdrc.c:227:	gd->bd->bi_dram[1].start = PHYS_SDRAM_1 + get_sdr_cs_offset(CS1);
arch/arm/mach-omap2/omap3/sdrc.c:228:	gd->bd->bi_dram[1].size = size1;
arch/arm/mach-at91/arm920t/clock.c:30:		return gd->arch.main_clk_rate_hz;
arch/arm/mach-at91/arm920t/clock.c:32:		return gd->arch.plla_rate_hz;
arch/arm/mach-at91/arm920t/clock.c:34:		return gd->arch.pllb_rate_hz;
arch/arm/mach-at91/arm920t/clock.c:125:	gd->arch.main_clk_rate_hz = main_clock;
arch/arm/mach-at91/arm920t/clock.c:128:	gd->arch.plla_rate_hz = at91_pll_rate(main_clock, readl(&pmc->pllar));
arch/arm/mach-at91/arm920t/clock.c:137:	gd->arch.at91_pllb_usb_init = at91_pll_calc(main_clock, 48000000 * 2) |
arch/arm/mach-at91/arm920t/clock.c:139:	gd->arch.pllb_rate_hz = at91_pll_rate(main_clock,
arch/arm/mach-at91/arm920t/clock.c:140:					      gd->arch.at91_pllb_usb_init);
arch/arm/mach-at91/arm920t/clock.c:148:	gd->arch.mck_rate_hz = at91_css_to_rate(mckr & AT91_PMC_MCKR_CSS_MASK);
arch/arm/mach-at91/arm920t/clock.c:149:	freq = gd->arch.mck_rate_hz;
arch/arm/mach-at91/arm920t/clock.c:153:	gd->arch.mck_rate_hz = freq /
arch/arm/mach-at91/arm920t/clock.c:155:	gd->arch.cpu_clk_rate_hz = freq;
arch/arm/mach-at91/arm920t/timer.c:47:	gd->arch.lastinc = 0;
arch/arm/mach-at91/arm920t/timer.c:48:	gd->arch.tbl = 0;
arch/arm/mach-at91/arm920t/timer.c:63:	if (now >= gd->arch.lastinc) {
arch/arm/mach-at91/arm920t/timer.c:65:		gd->arch.tbl += now - gd->arch.lastinc;
arch/arm/mach-at91/arm920t/timer.c:68:		gd->arch.tbl += now + TIMER_LOAD_VAL - gd->arch.lastinc;
arch/arm/mach-at91/arm920t/timer.c:70:	gd->arch.lastinc = now;
arch/arm/mach-at91/arm920t/timer.c:72:	return gd->arch.tbl;
arch/arm/mach-at91/arm926ejs/clock.c:30:		return gd->arch.main_clk_rate_hz;
arch/arm/mach-at91/arm926ejs/clock.c:32:		return gd->arch.plla_rate_hz;
arch/arm/mach-at91/arm926ejs/clock.c:34:		return gd->arch.pllb_rate_hz;
arch/arm/mach-at91/arm926ejs/clock.c:133:	gd->arch.main_clk_rate_hz = main_clock;
arch/arm/mach-at91/arm926ejs/clock.c:136:	gd->arch.plla_rate_hz = at91_pll_rate(main_clock, readl(&pmc->pllar));
arch/arm/mach-at91/arm926ejs/clock.c:145:	gd->arch.at91_pllb_usb_init = at91_pll_calc(main_clock, 48000000 * 2) |
arch/arm/mach-at91/arm926ejs/clock.c:147:	gd->arch.pllb_rate_hz = at91_pll_rate(main_clock,
arch/arm/mach-at91/arm926ejs/clock.c:148:					      gd->arch.at91_pllb_usb_init);
arch/arm/mach-at91/arm926ejs/clock.c:159:	gd->arch.plla_rate_hz /= (1 << ((mckr & 1 << 12) >> 12));
arch/arm/mach-at91/arm926ejs/clock.c:161:	gd->arch.mck_rate_hz = at91_css_to_rate(mckr & AT91_PMC_MCKR_CSS_MASK);
arch/arm/mach-at91/arm926ejs/clock.c:162:	freq = gd->arch.mck_rate_hz;
arch/arm/mach-at91/arm926ejs/clock.c:173:	gd->arch.mck_rate_hz = (mckr & AT91_PMC_MCKR_MDIV_MASK) ?
arch/arm/mach-at91/arm926ejs/clock.c:185:	gd->arch.mck_rate_hz = (mckr & AT91_PMC_MCKR_MDIV_MASK) ==
arch/arm/mach-at91/arm926ejs/clock.c:190:	gd->arch.mck_rate_hz = freq /
arch/arm/mach-at91/arm926ejs/clock.c:193:	gd->arch.cpu_clk_rate_hz = freq;
arch/arm/mach-at91/arm926ejs/timer.c:46:	gd->arch.timer_rate_hz = gd->arch.mck_rate_hz / 16;
arch/arm/mach-at91/arm926ejs/timer.c:56:	return gd->arch.timer_rate_hz;
arch/arm/mach-at91/armv7/clock.c:31:		return gd->arch.main_clk_rate_hz;
arch/arm/mach-at91/armv7/clock.c:33:		return gd->arch.plla_rate_hz;
arch/arm/mach-at91/armv7/clock.c:75:	gd->arch.main_clk_rate_hz = main_clock;
arch/arm/mach-at91/armv7/clock.c:78:	gd->arch.plla_rate_hz = at91_pll_rate(main_clock, readl(&pmc->pllar));
arch/arm/mach-at91/armv7/clock.c:88:		gd->arch.plla_rate_hz >>= 1;
arch/arm/mach-at91/armv7/clock.c:90:	gd->arch.mck_rate_hz = at91_css_to_rate(mckr & AT91_PMC_MCKR_CSS_MASK);
arch/arm/mach-at91/armv7/clock.c:91:	freq = gd->arch.mck_rate_hz;
arch/arm/mach-at91/armv7/clock.c:98:		gd->arch.mck_rate_hz = freq / 2;
arch/arm/mach-at91/armv7/clock.c:101:		gd->arch.mck_rate_hz = freq / 3;
arch/arm/mach-at91/armv7/clock.c:104:		gd->arch.mck_rate_hz = freq / 4;
arch/arm/mach-at91/armv7/clock.c:110:	gd->arch.cpu_clk_rate_hz = freq;
arch/arm/mach-at91/armv7/clock.c:275:		freq = gd->arch.main_clk_rate_hz;
arch/arm/mach-at91/armv7/clock.c:278:		freq = gd->arch.plla_rate_hz;
arch/arm/mach-at91/armv7/clock.c:284:		freq = gd->arch.mck_rate_hz;
arch/arm/mach-at91/armv7/timer.c:50:	gd->arch.timer_rate_hz = get_pit_clk_rate() / 16;
arch/arm/mach-at91/armv7/timer.c:60:	return gd->arch.timer_rate_hz;
arch/arm/mach-at91/spl_at91.c:109:	gd->arch.mck_rate_hz = CONFIG_SYS_MASTER_CLOCK;
arch/arm/mach-at91/include/mach/clk.h:27:	return gd->arch.cpu_clk_rate_hz;
arch/arm/mach-at91/include/mach/clk.h:33:	return gd->arch.main_clk_rate_hz;
arch/arm/mach-at91/include/mach/clk.h:39:	return gd->arch.mck_rate_hz;
arch/arm/mach-at91/include/mach/clk.h:45:	return gd->arch.plla_rate_hz;
arch/arm/mach-at91/include/mach/clk.h:51:	return gd->arch.pllb_rate_hz;
arch/arm/mach-at91/include/mach/clk.h:57:	return gd->arch.at91_pllb_usb_init;
arch/arm/mach-mvebu/dram.c:287:		gd->bd->bi_dram[i].start = 0;
arch/arm/mach-mvebu/dram.c:288:		gd->bd->bi_dram[i].size = 0;
arch/arm/mach-mvebu/dram.c:295:	gd->ram_size = size;
arch/arm/mach-mvebu/dram.c:310:		gd->bd->bi_dram[i].start = mvebu_sdram_bar(i);
arch/arm/mach-mvebu/dram.c:311:		gd->bd->bi_dram[i].size = mvebu_sdram_bs(i);
arch/arm/mach-mvebu/dram.c:314:		size += gd->bd->bi_dram[i].size;
arch/arm/mach-mvebu/arm64-common.c:30:	if (gd->ram_size > USABLE_RAM_SIZE)
arch/arm/mach-mvebu/arm64-common.c:33:	return gd->ram_size;
arch/arm/include/asm/secure.h:22:			typeof(_fn) *__tmp = (__fn - gd->reloc_off);	\
arch/arm/include/asm/ti-common/sys_proto.h:38:	if (gd->arch.omap_ch_flags & CH_FLAGS_CHSETTINGS)
arch/arm/mach-imx/syscounter.c:74:	gd->arch.tbl = 0;
arch/arm/mach-imx/syscounter.c:75:	gd->arch.tbu = 0;
arch/arm/mach-imx/syscounter.c:86:	gd->arch.tbl = (unsigned long)(now & 0xffffffff);
arch/arm/mach-imx/syscounter.c:87:	gd->arch.tbu = (unsigned long)(now >> 32);
arch/arm/mach-imx/spl.c:241:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/mach-imx/spl.c:242:	gd->bd->bi_dram[0].size = imx_ddr_size();
arch/arm/mach-imx/mx8m/soc.c:44:	gd->arch.tbl = 0;
arch/arm/mach-imx/mx8m/soc.c:45:	gd->arch.tbu = 0;
arch/arm/mach-imx/speed.c:23:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
arch/arm/mach-imx/speed.c:25:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
arch/arm/mach-imx/speed.c:27:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC4_CLK);
arch/arm/mach-imx/speed.c:29:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
arch/arm/mach-imx/speed.c:33:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
arch/arm/mach-imx/speed.c:35:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
arch/arm/mach-imx/speed.c:37:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC4_CLK);
arch/arm/mach-imx/speed.c:39:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
arch/arm/mach-imx/mx7ulp/clock.c:19:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
arch/arm/mach-imx/mx7ulp/clock.c:21:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
arch/arm/mach-imx/mx5/mx53_dram.c:29:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM_1, 1 << 30);
arch/arm/mach-imx/mx5/mx53_dram.c:30:	gd->ram_size += get_ram_size((void *)PHYS_SDRAM_2, 1 << 30);
arch/arm/mach-imx/mx5/mx53_dram.c:37:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
arch/arm/mach-imx/mx5/mx53_dram.c:38:	gd->bd->bi_dram[0].size = get_ram_size((void *)PHYS_SDRAM_1, 1 << 30);
arch/arm/mach-imx/mx5/mx53_dram.c:40:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
arch/arm/mach-imx/mx5/mx53_dram.c:41:	gd->bd->bi_dram[1].size = get_ram_size((void *)PHYS_SDRAM_2, 1 << 30);
arch/arm/mach-imx/mx6/opos6ul.c:113:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
arch/arm/mach-imx/mx6/opos6ul.c:139:	gd->ram_size = imx_ddr_size();
arch/arm/mach-imx/mx6/litesom.c:31:	gd->ram_size = imx_ddr_size();
arch/arm/mach-imx/mx7/clock.c:30:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
arch/arm/mach-imx/mx7/clock.c:32:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
arch/arm/mach-imx/mx7/clock.c:34:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
arch/arm/mach-zynq/clk.c:53:			gd->bd->bi_ddr_freq = rate;
arch/arm/mach-zynq/clk.c:55:			gd->bd->bi_arm_freq = rate;
arch/arm/mach-zynq/clk.c:59:	gd->bd->bi_dsp_freq = 0;
arch/arm/mach-zynq/timer.c:77:	gd->cpu_clk = clk_get_rate(&clk);
arch/arm/mach-zynq/timer.c:81:	gd->arch.timer_rate_hz = (gd->cpu_clk / 2) / (TIMER_PRESCALE + 1);
arch/arm/mach-zynq/timer.c:95:	gd->arch.lastinc = readl(&timer_base->counter) /
arch/arm/mach-zynq/timer.c:96:				(gd->arch.timer_rate_hz / CONFIG_SYS_HZ);
arch/arm/mach-zynq/timer.c:97:	gd->arch.tbl = 0;
arch/arm/mach-zynq/timer.c:108:	return gd->arch.timer_rate_hz;
arch/arm/cpu/arm926ejs/mxs/timer.c:26:#define timestamp (gd->arch.tbl)
arch/arm/cpu/arm926ejs/mxs/timer.c:27:#define lastdec (gd->arch.lastinc)
arch/arm/cpu/arm926ejs/mxs/spl_boot.c:111:	gd->bd = &bdata;
arch/arm/cpu/arm926ejs/mxs/spl_boot.c:112:	gd->baudrate = CONFIG_BAUDRATE;
arch/arm/cpu/arm926ejs/mxs/spl_boot.c:114:	gd->have_console = 1;
arch/arm/cpu/arm926ejs/mxs/mxs.c:85:	mx28_fixup_vt(gd->relocaddr);
arch/arm/cpu/arm926ejs/mxs/mxs.c:276:	gd->ram_size = data->mem_dram_size;
arch/arm/cpu/arm926ejs/spear/timer.c:26:#define timestamp gd->arch.tbl
arch/arm/cpu/arm926ejs/spear/timer.c:27:#define lastdec gd->arch.lastinc
arch/arm/cpu/arm926ejs/spear/spr_misc.c:31:	gd->ram_size = get_ram_size(PHYS_SDRAM_1, PHYS_SDRAM_1_MAXSIZE);
arch/arm/cpu/arm926ejs/spear/spr_misc.c:38:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
arch/arm/cpu/arm926ejs/spear/spr_misc.c:39:	gd->bd->bi_dram[0].size = gd->ram_size;
arch/arm/cpu/arm926ejs/spear/spr_misc.c:130:	gd->bd->bi_arch_number = mach_type;
arch/arm/cpu/arm926ejs/spear/spr_misc.c:133:	gd->bd->bi_boot_params = CONFIG_BOOT_PARAMS_ADDR;
arch/arm/cpu/arm926ejs/armada100/timer.c:47:/* Using gd->arch.tbu from timestamp and gd->arch.tbl for lastdec */
arch/arm/cpu/arm926ejs/armada100/timer.c:68:	if (now >= gd->arch.tbl) {
arch/arm/cpu/arm926ejs/armada100/timer.c:70:		gd->arch.tbu += now - gd->arch.tbl;
arch/arm/cpu/arm926ejs/armada100/timer.c:73:		gd->arch.tbu += now + TIMER_LOAD_VAL - gd->arch.tbl;
arch/arm/cpu/arm926ejs/armada100/timer.c:75:	gd->arch.tbl = now;
arch/arm/cpu/arm926ejs/armada100/timer.c:77:	return gd->arch.tbu;
arch/arm/cpu/arm926ejs/armada100/timer.c:121:	/* init the gd->arch.tbu and gd->arch.tbl value */
arch/arm/cpu/arm926ejs/armada100/timer.c:122:	gd->arch.tbl = read_timer();
arch/arm/cpu/arm926ejs/armada100/timer.c:123:	gd->arch.tbu = 0;
arch/arm/cpu/arm926ejs/armada100/dram.c:78:	gd->ram_size = 0;
arch/arm/cpu/arm926ejs/armada100/dram.c:80:		gd->bd->bi_dram[i].start = armd1_sdram_base(i);
arch/arm/cpu/arm926ejs/armada100/dram.c:81:		gd->bd->bi_dram[i].size = armd1_sdram_size(i);
arch/arm/cpu/arm926ejs/armada100/dram.c:88:		if (gd->bd->bi_dram[i].start != gd->ram_size)
arch/arm/cpu/arm926ejs/armada100/dram.c:91:		gd->ram_size += gd->bd->bi_dram[i].size;
arch/arm/cpu/arm926ejs/armada100/dram.c:100:		gd->bd->bi_dram[i].start = 0;
arch/arm/cpu/arm926ejs/armada100/dram.c:101:		gd->bd->bi_dram[i].size = 0;
arch/arm/cpu/arm926ejs/mx25/generic.c:238:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
arch/arm/cpu/arm926ejs/mx25/generic.c:240:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC1_CLK);
arch/arm/cpu/arm926ejs/mx27/timer.c:31:#define timestamp	(gd->arch.tbl)
arch/arm/cpu/arm926ejs/mx27/timer.c:32:#define lastinc		(gd->arch.lastinc)
arch/arm/cpu/arm926ejs/mx27/relocate.S:41:	ldr	r0, [r9, #GD_RELOCADDR]	/* r0 = gd->relocaddr */
arch/arm/cpu/armv7/ls102xa/fdt.c:98:		val = gd->cpu_clk;
arch/arm/cpu/armv7/ls102xa/clock.c:81:	gd->cpu_clk = sys_info.freq_processor[0];
arch/arm/cpu/armv7/ls102xa/clock.c:82:	gd->bus_clk = sys_info.freq_systembus;
arch/arm/cpu/armv7/ls102xa/clock.c:83:	gd->mem_clk = sys_info.freq_ddrbus * 2;
arch/arm/cpu/armv7/ls102xa/clock.c:86:	gd->arch.sdhc_clk = gd->bus_clk;
arch/arm/cpu/armv7/ls102xa/clock.c:94:	return gd->bus_clk;
arch/arm/cpu/armv7/ls102xa/clock.c:99:	return gd->mem_clk;
arch/arm/cpu/armv7/ls102xa/clock.c:104:	return gd->bus_clk / 2;
arch/arm/cpu/armv7/ls102xa/timer.c:75:	gd->arch.tbl = 0;
arch/arm/cpu/armv7/ls102xa/timer.c:76:	gd->arch.tbu = 0;
arch/arm/cpu/armv7/ls102xa/timer.c:87:	gd->arch.tbl = (unsigned long)(now & 0xffffffff);
arch/arm/cpu/armv7/ls102xa/timer.c:88:	gd->arch.tbu = (unsigned long)(now >> 32);
arch/arm/cpu/armv7/ls102xa/cpu.c:120: * The base address of TTLB is gd->arch.tlb_addr. We use two
arch/arm/cpu/armv7/ls102xa/cpu.c:146:	u32 *level0_table = (u32 *)gd->arch.tlb_addr;
arch/arm/cpu/armv7/ls102xa/cpu.c:147:	u32 *level1_table = (u32 *)(gd->arch.tlb_addr + 0x1000);
arch/arm/cpu/armv7/ls102xa/cpu.c:209:	mmu_page_table_flush(gd->arch.tlb_addr,
arch/arm/cpu/armv7/ls102xa/cpu.c:210:			     gd->arch.tlb_addr +  gd->arch.tlb_size);
arch/arm/cpu/armv7/ls102xa/cpu.c:267:	printf("\n       CPU0(ARMV7):%-4s MHz, ", strmhz(buf1, gd->cpu_clk));
arch/arm/cpu/armv7/ls102xa/cpu.c:268:	printf("\n       Bus:%-4s MHz, ", strmhz(buf1, gd->bus_clk));
arch/arm/cpu/armv7/ls102xa/cpu.c:270:	       strmhz(buf1, gd->mem_clk/2), strmhz(buf2, gd->mem_clk));
arch/arm/cpu/armv7/stv0991/timer.c:21:#define timestamp gd->arch.tbl
arch/arm/cpu/armv7/stv0991/timer.c:22:#define lastdec gd->arch.lastinc
arch/arm/cpu/armv7/arch_timer.c:26:	gd->arch.tbl = 0;
arch/arm/cpu/armv7/arch_timer.c:27:	gd->arch.tbu = 0;
arch/arm/cpu/armv7/arch_timer.c:30:	gd->arch.timer_rate_hz = CONFIG_SYS_HZ_CLOCK;
arch/arm/cpu/armv7/arch_timer.c:32:	gd->arch.timer_rate_hz = read_cntfrq();
arch/arm/cpu/armv7/arch_timer.c:43:	gd->arch.tbl = nowl;
arch/arm/cpu/armv7/arch_timer.c:44:	gd->arch.tbu = nowu;
arch/arm/cpu/armv7/arch_timer.c:46:	return (((unsigned long long)gd->arch.tbu) << 32) | gd->arch.tbl;
arch/arm/cpu/armv7/arch_timer.c:52:	return lldiv(get_ticks(), gd->arch.timer_rate_hz / 1000000);
arch/arm/cpu/armv7/arch_timer.c:57:	return gd->arch.timer_rate_hz;
arch/arm/cpu/armv7/vf610/timer.c:42:	gd->arch.tbl = 0;
arch/arm/cpu/armv7/vf610/timer.c:43:	gd->arch.tbu = 0;
arch/arm/cpu/armv7/vf610/timer.c:53:	if (now < gd->arch.tbl)
arch/arm/cpu/armv7/vf610/timer.c:54:		gd->arch.tbu++;
arch/arm/cpu/armv7/vf610/timer.c:55:	gd->arch.tbl = now;
arch/arm/cpu/armv7/vf610/timer.c:57:	return (((unsigned long long)gd->arch.tbu) << 32) | gd->arch.tbl;
arch/arm/cpu/armv7/vf610/generic.c:358:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC_CLK);
arch/arm/cpu/armv7/s5p-common/timer.c:53:	gd->arch.timer_reset_value = 0;
arch/arm/cpu/armv7/s5p-common/timer.c:56:	gd->arch.lastinc = timer_get_us_down();
arch/arm/cpu/armv7/s5p-common/timer.c:76:	gd->arch.timer_reset_value += gd->arch.lastinc - now;
arch/arm/cpu/armv7/s5p-common/timer.c:77:	gd->arch.lastinc = now;
arch/arm/cpu/armv7/s5p-common/timer.c:80:	time_ms = gd->arch.timer_reset_value;
arch/arm/cpu/armv7/s5p-common/timer.c:115:	gd->arch.lastinc = readl(&timer->tcnto4);
arch/arm/cpu/armv7/s5p-common/timer.c:116:	gd->arch.tbl = 0;
arch/arm/cpu/armv7/s5p-common/cpu_info.c:39:	cpu_model = fdt_getprop(gd->fdt_blob, 0, "cpu-model", &len);
arch/arm/cpu/armv7/sunxi/timer.c:63:	if (now >= gd->arch.lastinc)	/* normal (non rollover) */
arch/arm/cpu/armv7/sunxi/timer.c:64:		gd->arch.tbl += (now - gd->arch.lastinc);
arch/arm/cpu/armv7/sunxi/timer.c:67:		gd->arch.tbl += (TICKS_TO_HZ(TIMER_LOAD_VAL)
arch/arm/cpu/armv7/sunxi/timer.c:68:				- gd->arch.lastinc) + now;
arch/arm/cpu/armv7/sunxi/timer.c:70:	gd->arch.lastinc = now;
arch/arm/cpu/armv7/sunxi/timer.c:72:	return gd->arch.tbl;
arch/arm/cpu/armv7m/systick-timer.c:78:	gd->arch.timer_rate_hz = CONFIG_SYS_HZ_CLOCK;
arch/arm/cpu/armv7m/systick-timer.c:80:	gd->arch.timer_rate_hz = (cal & SYSTICK_CAL_TENMS_MASK) * 100;
arch/arm/cpu/armv7m/systick-timer.c:83:	gd->arch.tbl = 0;
arch/arm/cpu/armv7m/systick-timer.c:84:	gd->arch.tbu = 0;
arch/arm/cpu/armv7m/systick-timer.c:85:	gd->arch.lastinc = read_timer();
arch/arm/cpu/armv7m/systick-timer.c:95:	return (ulong)((t / gd->arch.timer_rate_hz)) - base;
arch/arm/cpu/armv7m/systick-timer.c:102:	if (now >= gd->arch.lastinc)
arch/arm/cpu/armv7m/systick-timer.c:103:		gd->arch.tbl += (now - gd->arch.lastinc);
arch/arm/cpu/armv7m/systick-timer.c:105:		gd->arch.tbl += (TIMER_MAX_VAL - gd->arch.lastinc) + now;
arch/arm/cpu/armv7m/systick-timer.c:107:	gd->arch.lastinc = now;
arch/arm/cpu/armv7m/systick-timer.c:109:	return gd->arch.tbl;
arch/arm/cpu/armv7m/systick-timer.c:114:	return gd->arch.timer_rate_hz;
arch/arm/cpu/armv8/cache_v8.c:121:	pte = (u64*)gd->arch.tlb_addr;
arch/arm/cpu/armv8/cache_v8.c:144:	u64 *new_table = (u64*)gd->arch.tlb_fillptr;
arch/arm/cpu/armv8/cache_v8.c:148:	gd->arch.tlb_fillptr += pt_len;
arch/arm/cpu/armv8/cache_v8.c:150:	if (gd->arch.tlb_fillptr - gd->arch.tlb_addr > gd->arch.tlb_size)
arch/arm/cpu/armv8/cache_v8.c:153:			gd->arch.tlb_fillptr - gd->arch.tlb_addr,
arch/arm/cpu/armv8/cache_v8.c:154:			gd->arch.tlb_size);
arch/arm/cpu/armv8/cache_v8.c:367:	if (!gd->arch.tlb_fillptr || !gd->arch.tlb_addr)
arch/arm/cpu/armv8/cache_v8.c:384:	u64 tlb_addr = gd->arch.tlb_addr;
arch/arm/cpu/armv8/cache_v8.c:385:	u64 tlb_size = gd->arch.tlb_size;
arch/arm/cpu/armv8/cache_v8.c:388:	gd->arch.tlb_fillptr = tlb_addr;
arch/arm/cpu/armv8/cache_v8.c:394:	gd->arch.tlb_size -= (uintptr_t)gd->arch.tlb_fillptr -
arch/arm/cpu/armv8/cache_v8.c:395:			     (uintptr_t)gd->arch.tlb_addr;
arch/arm/cpu/armv8/cache_v8.c:396:	gd->arch.tlb_addr = gd->arch.tlb_fillptr;
arch/arm/cpu/armv8/cache_v8.c:398:	gd->arch.tlb_emerg = gd->arch.tlb_addr;
arch/arm/cpu/armv8/cache_v8.c:399:	gd->arch.tlb_addr = tlb_addr;
arch/arm/cpu/armv8/cache_v8.c:400:	gd->arch.tlb_size = tlb_size;
arch/arm/cpu/armv8/cache_v8.c:409:	if (!gd->arch.tlb_fillptr)
arch/arm/cpu/armv8/cache_v8.c:413:	set_ttbr_tcr_mair(el, gd->arch.tlb_addr, get_tcr(el, NULL, NULL),
arch/arm/cpu/armv8/cache_v8.c:552:	if (!gd->arch.tlb_emerg)
arch/arm/cpu/armv8/cache_v8.c:560:	__asm_switch_ttbr(gd->arch.tlb_emerg);
arch/arm/cpu/armv8/cache_v8.c:584:	__asm_switch_ttbr(gd->arch.tlb_addr);
arch/arm/cpu/armv8/cache_v8.c:623:	flush_dcache_range(gd->arch.tlb_addr,
arch/arm/cpu/armv8/cache_v8.c:624:			   gd->arch.tlb_addr + gd->arch.tlb_size);
arch/arm/cpu/armv8/cache_v8.c:645:	flush_dcache_range(gd->arch.tlb_addr,
arch/arm/cpu/armv8/cache_v8.c:646:			   gd->arch.tlb_addr + gd->arch.tlb_size);
arch/arm/cpu/armv8/s32v234/generic.c:346:	gd->arch.sdhc_clk = mxc_get_clock(MXC_USDHC_CLK);
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:136:	gd->cpu_clk = sys_info.freq_processor[0];
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:137:	gd->bus_clk = sys_info.freq_systembus / CONFIG_SYS_FSL_PCLK_DIV;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:138:	gd->mem_clk = sys_info.freq_ddrbus;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:140:	gd->arch.mem2_clk = sys_info.freq_ddrbus2;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:143:	gd->arch.sdhc_clk = gd->bus_clk / CONFIG_SYS_FSL_SDHC_CLK_DIV;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:146:	if (gd->cpu_clk != 0)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:158:	if (!gd->bus_clk)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:161:	return gd->bus_clk;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:170:	if (!gd->mem_clk)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:179:		return gd->arch.mem2_clk;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:182:	return gd->mem_clk;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:198:	if (!gd->arch.sdhc_clk)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch3_speed.c:201:	return gd->arch.sdhc_clk;
arch/arm/cpu/armv8/fsl-layerscape/spl.c:85:	 * gd->ram_size is deducted by the size of secure ram.
arch/arm/cpu/armv8/fsl-layerscape/spl.c:93:	gd->ram_top = gd->bd->bi_dram[0].start + gd->bd->bi_dram[0].size;
arch/arm/cpu/armv8/fsl-layerscape/spl.c:104:	gd->ram_top -= SPL_TLB_SETBACK;
arch/arm/cpu/armv8/fsl-layerscape/spl.c:105:	gd->arch.tlb_size = PGTABLE_SIZE;
arch/arm/cpu/armv8/fsl-layerscape/spl.c:106:	gd->arch.tlb_addr = (gd->ram_top - gd->arch.tlb_size) & ~(0x10000 - 1);
arch/arm/cpu/armv8/fsl-layerscape/spl.c:107:	gd->arch.tlb_allocated = gd->arch.tlb_addr;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:180:	gd->cpu_clk = sys_info.freq_processor[0];
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:181:	gd->bus_clk = sys_info.freq_systembus / CONFIG_SYS_FSL_PCLK_DIV;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:182:	gd->mem_clk = sys_info.freq_ddrbus;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:185:	gd->arch.sdhc_clk = sys_info.freq_sdhc;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:188:	if (gd->cpu_clk != 0)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:200:	if (!gd->bus_clk)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:203:	return gd->bus_clk;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:208:	if (!gd->mem_clk)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:211:	return gd->mem_clk;
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:217:	if (!gd->arch.sdhc_clk)
arch/arm/cpu/armv8/fsl-layerscape/fsl_lsch2_speed.c:220:	return gd->arch.sdhc_clk;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:77:	gd->arch.tlb_addr = CONFIG_SYS_FSL_OCRAM_BASE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:78:	gd->arch.tlb_fillptr = gd->arch.tlb_addr;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:79:	gd->arch.tlb_size = EARLY_PGTABLE_SIZE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:85:	set_ttbr_tcr_mair(el, gd->arch.tlb_addr,
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:142: * Put the MMU table in secure memory if gd->arch.secure_ram is valid.
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:143: * OCRAM will be not used for this purpose so gd->arch.secure_ram can't be 0.
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:147:	u64 tlb_addr_save = gd->arch.tlb_addr;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:165:			final_map[index].virt = gd->bd->bi_dram[0].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:166:			final_map[index].phys = gd->bd->bi_dram[0].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:167:			final_map[index].size = gd->bd->bi_dram[0].size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:172:			final_map[index].virt = gd->bd->bi_dram[1].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:173:			final_map[index].phys = gd->bd->bi_dram[1].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:174:			final_map[index].size = gd->bd->bi_dram[1].size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:183:			final_map[index].virt = gd->bd->bi_dram[2].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:184:			final_map[index].phys = gd->bd->bi_dram[2].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:185:			final_map[index].size = gd->bd->bi_dram[2].size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:197:	if (gd->arch.secure_ram & MEM_RESERVE_SECURE_MAINTAINED) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:200:			 * Only use gd->arch.secure_ram if the address is
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:205:			gd->arch.tlb_addr = gd->arch.secure_ram & ~0xfff;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:206:			final_map[index].virt = gd->arch.secure_ram & ~0x3;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:210:			gd->arch.secure_ram |= MEM_RESERVE_SECURE_SECURED;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:211:			tlb_addr_save = gd->arch.tlb_addr;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:214:			tlb_addr_save = gd->arch.tlb_allocated;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:215:			gd->arch.tlb_addr = tlb_addr_save;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:221:	gd->arch.tlb_fillptr = tlb_addr_save;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:227:	gd->arch.tlb_addr = gd->arch.tlb_fillptr;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:228:	gd->arch.tlb_emerg = gd->arch.tlb_addr;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:230:	gd->arch.tlb_addr = tlb_addr_save;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:237:	set_ttbr_tcr_mair(el, gd->arch.tlb_addr, get_tcr(el, NULL, NULL),
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:701:	if (gd->ram_size > CONFIG_MAX_MEM_MAPPED) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:703:		rem = gd->ram_size - ea_size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:705:		ea_size = gd->ram_size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:734:	 * gd->ram_size has the total size of DDR memory, less reserved secure
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:736:	 * no hole is created with DDR configuration. gd->arch.secure_ram tracks
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:737:	 * the location of secure memory. gd->arch.resv_ram tracks the location
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:738:	 * of reserved memory for Management Complex (MC). Because gd->ram_size
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:740:	 * gd->arch.secure_ram should be done to avoid running it repeatedly.
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:744:	if (gd->arch.secure_ram & MEM_RESERVE_SECURE_MAINTAINED) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:751:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:752:	if (gd->ram_size > CONFIG_SYS_DDR_BLOCK1_SIZE) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:753:		gd->bd->bi_dram[0].size = CONFIG_SYS_DDR_BLOCK1_SIZE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:754:		gd->bd->bi_dram[1].start = CONFIG_SYS_DDR_BLOCK2_BASE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:755:		gd->bd->bi_dram[1].size = gd->ram_size -
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:758:		if (gd->bi_dram[1].size > CONFIG_SYS_DDR_BLOCK2_SIZE) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:759:			gd->bd->bi_dram[2].start = CONFIG_SYS_DDR_BLOCK3_BASE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:760:			gd->bd->bi_dram[2].size = gd->bd->bi_dram[1].size -
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:762:			gd->bd->bi_dram[1].size = CONFIG_SYS_DDR_BLOCK2_SIZE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:766:		gd->bd->bi_dram[0].size = gd->ram_size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:769:	if (gd->bd->bi_dram[0].size >
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:771:		gd->bd->bi_dram[0].size -=
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:773:		gd->arch.secure_ram = gd->bd->bi_dram[0].start +
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:774:				      gd->bd->bi_dram[0].size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:775:		gd->arch.secure_ram |= MEM_RESERVE_SECURE_MAINTAINED;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:776:		gd->ram_size -= CONFIG_SYS_MEM_RESERVE_SECURE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:783:	if (gd->bd->bi_dram[2].size >=
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:784:	    board_reserve_ram_top(gd->bd->bi_dram[2].size)) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:785:		gd->arch.resv_ram = gd->bd->bi_dram[2].start +
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:786:			    gd->bd->bi_dram[2].size -
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:787:			    board_reserve_ram_top(gd->bd->bi_dram[2].size);
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:791:		if (gd->bd->bi_dram[1].size >=
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:792:		    board_reserve_ram_top(gd->bd->bi_dram[1].size)) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:793:			gd->arch.resv_ram = gd->bd->bi_dram[1].start +
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:794:				gd->bd->bi_dram[1].size -
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:795:				board_reserve_ram_top(gd->bd->bi_dram[1].size);
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:796:		} else if (gd->bd->bi_dram[0].size >
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:797:			   board_reserve_ram_top(gd->bd->bi_dram[0].size)) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:798:			gd->arch.resv_ram = gd->bd->bi_dram[0].start +
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:799:				gd->bd->bi_dram[0].size -
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:800:				board_reserve_ram_top(gd->bd->bi_dram[0].size);
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:822:			gd->bd->bi_dram[2].start = CONFIG_SYS_DP_DDR_BASE;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:823:			gd->bd->bi_dram[2].size = dp_ddr_size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:831:	debug("%s is called. gd->ram_size is reduced to %lu\n",
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:832:	      __func__, (ulong)gd->ram_size);
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:855:		ram_start = gd->bd->bi_dram[i].start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:856:		ram_size = gd->bd->bi_dram[i].size;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:858:		if (gd->arch.resv_ram >= ram_start &&
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:859:		    gd->arch.resv_ram < ram_start + ram_size)
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:860:			ram_size = gd->arch.resv_ram - ram_start;
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:880:	if (!gd->arch.tlb_addr)
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:883:	if (gd->ram_size <= CONFIG_SYS_FSL_DRAM_SIZE1) {
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:886:					gd->ram_size,
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:903:		if (gd->ram_size - CONFIG_SYS_DDR_BLOCK1_SIZE >
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:914:					gd->ram_size -
arch/arm/cpu/armv8/fsl-layerscape/cpu.c:926:					gd->ram_size -
arch/arm/cpu/armv8/fsl-layerscape/ppa.c:74:	ret = mmc_initialize(gd->bd);
arch/arm/cpu/armv8/fsl-layerscape/mp.c:97:	printf("Waking secondary cores to start from %lx\n", gd->relocaddr);
arch/arm/cpu/armv8/fsl-layerscape/mp.c:100:	gur_out32(&gur->bootlocptrh, (u32)(gd->relocaddr >> 32));
arch/arm/cpu/armv8/fsl-layerscape/mp.c:101:	gur_out32(&gur->bootlocptrl, (u32)gd->relocaddr);
arch/arm/cpu/armv8/fsl-layerscape/mp.c:137:	scfg_out32(&scfg->scratchrw[0], (u32)(gd->relocaddr >> 32));
arch/arm/cpu/armv8/fsl-layerscape/mp.c:138:	scfg_out32(&scfg->scratchrw[1], (u32)gd->relocaddr);
arch/arm/cpu/armv8/fsl-layerscape/Kconfig:451:	  Reserve memory from the top, tracked by gd->arch.resv_ram. This
arch/arm/cpu/armv8/generic_timer.c:92:	gd->arch.tbl = ticks;
arch/arm/cpu/armv8/sec_firmware.c:181:						gd->arch.tlb_size) + load;
arch/arm/cpu/armv8/sec_firmware.c:242:	if (!(gd->arch.secure_ram & MEM_RESERVE_SECURE_MAINTAINED)) {
arch/arm/cpu/armv8/sec_firmware.c:247:	sec_firmware_addr = (gd->arch.secure_ram & MEM_RESERVE_SECURE_ADDR_MASK) +
arch/arm/cpu/armv8/sec_firmware.c:248:			gd->arch.tlb_size;
arch/arm/cpu/armv8/zynqmp/clk.c:37:	gd->cpu_clk = get_tbclk();
arch/arm/cpu/armv8/zynqmp/clk.c:39:	gd->bd->bi_arm_freq = gd->cpu_clk / 1000000;
arch/arm/cpu/armv8/zynqmp/clk.c:41:	gd->bd->bi_dsp_freq = 0;
arch/arm/cpu/armv8/zynqmp/cpu.c:87:		if (!gd->bd->bi_dram[i].size)
arch/arm/cpu/armv8/zynqmp/cpu.c:90:		zynqmp_mem_map[banks].virt = gd->bd->bi_dram[i].start;
arch/arm/cpu/armv8/zynqmp/cpu.c:91:		zynqmp_mem_map[banks].phys = gd->bd->bi_dram[i].start;
arch/arm/cpu/armv8/zynqmp/cpu.c:92:		zynqmp_mem_map[banks].size = gd->bd->bi_dram[i].size;
arch/arm/cpu/armv8/zynqmp/cpu.c:112:	gd->arch.tlb_size = PGTABLE_SIZE;
arch/arm/cpu/armv8/zynqmp/cpu.c:113:	gd->arch.tlb_addr = ZYNQMP_TCM_BASE_ADDR;
arch/arm/cpu/armv8/zynqmp/cpu.c:135:	gd->cpu_clk = get_tbclk();
arch/arm/cpu/armv8/zynqmp/cpu.c:137:	switch (gd->cpu_clk) {
arch/arm/cpu/arm1136/mx35/generic.c:464:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC2_CLK);
arch/arm/cpu/arm1136/mx35/generic.c:466:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC3_CLK);
arch/arm/cpu/arm1136/mx35/generic.c:468:	gd->arch.sdhc_clk = mxc_get_clock(MXC_ESDHC1_CLK);
arch/arc/lib/bootm.c:37:	lmb_reserve(lmb, sp, (CONFIG_SYS_SDRAM_BASE + gd->ram_size - sp));
arch/arc/lib/cache.c:169:#define CACHE_LINE_MASK		(~(gd->arch.l1_line_sz - 1))
arch/arc/lib/cache.c:355:	end = paddr + sz + gd->arch.slc_line_sz - 1;
arch/arc/lib/cache.c:417:		gd->arch.slc_line_sz = (slc_cfg.fields.lsz == 0) ? 128 : 64;
arch/arc/lib/cache.c:451:		gd->arch.l1_line_sz = dc_line_sz = 16 << dbcr.fields.line_len;
arch/arc/lib/cache.c:573:	num_lines = DIV_ROUND_UP(sz, gd->arch.l1_line_sz);
arch/arc/lib/cache.c:580:		paddr += gd->arch.l1_line_sz;
arch/arc/lib/cpu.c:16:	gd->cpu_clk = CONFIG_SYS_CLK_FREQ;
arch/arc/lib/cpu.c:17:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
arch/arc/lib/cpu.c:26:	gd->bd->bi_memstart = CONFIG_SYS_SDRAM_BASE;
arch/arc/lib/cpu.c:27:	gd->bd->bi_memsize = CONFIG_SYS_SDRAM_SIZE;
arch/arc/lib/relocate.c:21:	if (gd->flags & GD_FLG_SKIP_RELOC)
arch/arc/lib/relocate.c:24:	memcpy((void *)gd->relocaddr, (void *)&__image_copy_start, len);
arch/arc/lib/relocate.c:31:	ulong dst_addr = (ulong)&__bss_start + gd->reloc_off;
arch/arc/lib/relocate.c:47:	if (gd->flags & GD_FLG_SKIP_RELOC)
arch/arc/lib/relocate.c:66:							gd->reloc_off);
arch/arc/lib/relocate.c:107:				 *         gd->mon_len = (ulong)&__bss_end - CONFIG_SYS_MONITOR_BASE;
arch/arc/lib/relocate.c:125:			val += gd->reloc_off;
arch/sandbox/cpu/start.c:295:	gd->arch.ram_buf = state->ram_buf;
arch/sandbox/cpu/start.c:296:	gd->ram_size = state->ram_size;
arch/sandbox/cpu/start.c:320:	gd->malloc_base = CONFIG_MALLOC_F_ADDR;
arch/sandbox/cpu/start.c:323:	gd->default_log_level = state->default_log_level;
arch/sandbox/cpu/start.c:330:	board_init_r(gd->new_gd, 0);
arch/sandbox/cpu/spl.c:19:	gd->arch.ram_buf = state->ram_buf;
arch/sandbox/cpu/spl.c:20:	gd->ram_size = state->ram_size;
arch/sandbox/cpu/cpu.c:78:	return (const uint8_t *)ptr >= gd->arch.ram_buf &&
arch/sandbox/cpu/cpu.c:79:		(const uint8_t *)ptr < gd->arch.ram_buf + gd->ram_size;
arch/sandbox/cpu/cpu.c:98:	if (paddr < gd->ram_size)
arch/sandbox/cpu/cpu.c:99:		return (void *)(gd->arch.ram_buf + paddr);
arch/sandbox/cpu/cpu.c:115:	       __func__, (ulong)paddr, (ulong)gd->ram_size);
arch/sandbox/cpu/cpu.c:146:		return (phys_addr_t)((uint8_t *)ptr - gd->arch.ram_buf);
arch/sandbox/cpu/cpu.c:152:		       __func__, ptr, (ulong)gd->ram_size);
arch/sandbox/cpu/cpu.c:199:		return (u8 *)ptr - gd->arch.ram_buf;
arch/sandbox/cpu/cpu.c:276:	gd->fdt_blob = blob;
arch/microblaze/cpu/start.S:250:	rsub	r23, r24, r23 /* keep - this is already here gd->reloc_off */
arch/microblaze/cpu/timer.c:48:	const void *blob = gd->fdt_blob;
arch/microblaze/cpu/timer.c:55:	if (!(gd->flags & GD_FLG_RELOC))
arch/microblaze/cpu/interrupts.c:117:	const void *blob = gd->fdt_blob;
arch/powerpc/lib/bootm.c:123:	    (CONFIG_SYS_SDRAM_BASE + (u64)gd->ram_size))
arch/powerpc/lib/bootm.c:296:	base = (u64)gd->bd->bi_memstart;
arch/powerpc/lib/bootm.c:297:	size = (u64)gd->bd->bi_memsize;
arch/powerpc/lib/bat_rw.c:105:	if ((gd->flags & GD_FLG_RELOC) && (batn >= 0)) {
arch/powerpc/lib/stack.c:22:	gd->irq_sp = gd->start_addr_sp;
arch/powerpc/lib/stack.c:25:	s = (ulong *)gd->start_addr_sp;
arch/powerpc/cpu/mpc86xx/cpu.c:54:	cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc86xx/speed.c:93:	gd->cpu_clk = sys_info.freq_processor;
arch/powerpc/cpu/mpc86xx/speed.c:94:	gd->bus_clk = sys_info.freq_systembus;
arch/powerpc/cpu/mpc86xx/speed.c:95:	gd->arch.lbc_clk = sys_info.freq_localbus;
arch/powerpc/cpu/mpc86xx/speed.c:105:	gd->arch.i2c1_clk = sys_info.freq_systembus;
arch/powerpc/cpu/mpc86xx/speed.c:107:	gd->arch.i2c1_clk = sys_info.freq_systembus / 2;
arch/powerpc/cpu/mpc86xx/speed.c:109:	gd->arch.i2c2_clk = gd->arch.i2c1_clk;
arch/powerpc/cpu/mpc86xx/speed.c:111:	if (gd->cpu_clk != 0)
arch/powerpc/cpu/mpc86xx/mp.c:82:	if ((u64)gd->ram_size > 0xfffff000)
arch/powerpc/cpu/mpc86xx/mp.c:85:	return (gd->ram_size - (1024 * 1024));
arch/powerpc/cpu/mpc86xx/traps.c:31:#define END_OF_MEM (gd->bd->bi_memstart + get_effective_memsize())
arch/powerpc/cpu/mpc85xx/fdt.c:654:		"current-speed", gd->baudrate, 1);
arch/powerpc/cpu/mpc85xx/fdt.c:708:	 * Here gd->bus_clk = CCB clock
arch/powerpc/cpu/mpc85xx/fdt.c:713:			"timer-frequency", gd->bus_clk/2, 1);
arch/powerpc/cpu/mpc85xx/fdt.c:721:			"clock_freq", gd->bus_clk/2, 1);
arch/powerpc/cpu/mpc85xx/fdt.c:724:			"clock-frequency", gd->bus_clk/2, 1);
arch/powerpc/cpu/mpc85xx/fdt.c:727:			"clock-frequency", gd->bus_clk/2, 1);
arch/powerpc/cpu/mpc85xx/commproc.c:46:	gd->arch.dp_alloc_base = CPM_DATAONLY_BASE;
arch/powerpc/cpu/mpc85xx/commproc.c:47:	gd->arch.dp_alloc_top = gd->arch.dp_alloc_base + CPM_DATAONLY_SIZE;
arch/powerpc/cpu/mpc85xx/commproc.c:72:	savebase = gd->arch.dp_alloc_base;
arch/powerpc/cpu/mpc85xx/commproc.c:74:	off = gd->arch.dp_alloc_base & align_mask;
arch/powerpc/cpu/mpc85xx/commproc.c:76:		gd->arch.dp_alloc_base += (align - off);
arch/powerpc/cpu/mpc85xx/commproc.c:81:	if ((gd->arch.dp_alloc_base + size) >= gd->arch.dp_alloc_top) {
arch/powerpc/cpu/mpc85xx/commproc.c:82:		gd->arch.dp_alloc_base = savebase;
arch/powerpc/cpu/mpc85xx/commproc.c:86:	retloc = gd->arch.dp_alloc_base;
arch/powerpc/cpu/mpc85xx/commproc.c:87:	gd->arch.dp_alloc_base += size;
arch/powerpc/cpu/mpc85xx/commproc.c:114:#define BRG_INT_CLK	gd->arch.brg_clk
arch/powerpc/cpu/mpc85xx/serial_scc.c:175:	m8560_cpm_extcbrg(SCC_INDEX, gd->baudrate,
arch/powerpc/cpu/mpc85xx/serial_scc.c:178:	m8560_cpm_setbrg(SCC_INDEX, gd->baudrate);
arch/powerpc/cpu/mpc85xx/cpu.c:120:	cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc85xx/cpu.c:336:	return (gd->bus_clk + (tbclk_div >> 1)) / tbclk_div;
arch/powerpc/cpu/mpc85xx/cpu.c:408:	gd->ram_size = fsl_ddr_sdram_size();
arch/powerpc/cpu/mpc85xx/cpu.c:410:	gd->ram_size = (phys_size_t)CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
arch/powerpc/cpu/mpc85xx/cpu.c:465:	gd->ram_size = dram_size;
arch/powerpc/cpu/mpc85xx/cpu.c:607:	phys_size_t p_size = min(gd->ram_size, CONFIG_MAX_MEM_MAPPED);
arch/powerpc/cpu/mpc85xx/cpu.c:614:		test_cap = gd->ram_size;
arch/powerpc/cpu/mpc85xx/cpu.c:635:	phys_size_t p_size = min(gd->ram_size, CONFIG_MAX_MEM_MAPPED);
arch/powerpc/cpu/mpc85xx/cpu.c:644:		if (gd->ram_size > CONFIG_MAX_MEM_MAPPED) {
arch/powerpc/cpu/mpc85xx/cpu.c:678:	setup_ddr_tlbs(gd->ram_size>>20);
arch/powerpc/cpu/mpc85xx/tlb.c:88:	gd->arch.used_tlb_cams[i] |= (1 << bit);
arch/powerpc/cpu/mpc85xx/tlb.c:96:	gd->arch.used_tlb_cams[i] &= ~(1 << bit);
arch/powerpc/cpu/mpc85xx/tlb.c:105:		gd->arch.used_tlb_cams[i] = 0;
arch/powerpc/cpu/mpc85xx/tlb.c:122:		idx = ffz(gd->arch.used_tlb_cams[i]);
arch/powerpc/cpu/mpc85xx/tlb.c:161:	if ((tlb == 1) && (gd->flags & GD_FLG_RELOC))
arch/powerpc/cpu/mpc85xx/tlb.c:187:	if (gd->flags & GD_FLG_RELOC)
arch/powerpc/cpu/mpc85xx/spl_minimal.c:39:	u32 ticks_per_usec = gd->bus_clk / (CONFIG_SYS_FSL_TBCLK_DIV * 1000000);
arch/powerpc/cpu/mpc85xx/speed.c:636:	gd->cpu_clk = sys_info.freq_processor[0];
arch/powerpc/cpu/mpc85xx/speed.c:637:	gd->bus_clk = sys_info.freq_systembus;
arch/powerpc/cpu/mpc85xx/speed.c:638:	gd->mem_clk = sys_info.freq_ddrbus;
arch/powerpc/cpu/mpc85xx/speed.c:639:	gd->arch.lbc_clk = sys_info.freq_localbus;
arch/powerpc/cpu/mpc85xx/speed.c:642:	gd->arch.qe_clk = sys_info.freq_qe;
arch/powerpc/cpu/mpc85xx/speed.c:643:	gd->arch.brg_clk = gd->arch.qe_clk / 2;
arch/powerpc/cpu/mpc85xx/speed.c:655:	gd->arch.i2c1_clk = sys_info.freq_systembus;
arch/powerpc/cpu/mpc85xx/speed.c:665:		gd->arch.i2c1_clk = sys_info.freq_systembus / 3;
arch/powerpc/cpu/mpc85xx/speed.c:667:		gd->arch.i2c1_clk = sys_info.freq_systembus / 2;
arch/powerpc/cpu/mpc85xx/speed.c:670:	gd->arch.i2c1_clk = sys_info.freq_systembus / 2;
arch/powerpc/cpu/mpc85xx/speed.c:672:	gd->arch.i2c2_clk = gd->arch.i2c1_clk;
arch/powerpc/cpu/mpc85xx/speed.c:676:	gd->arch.sdhc_clk = sys_info.freq_sdhc / 2;
arch/powerpc/cpu/mpc85xx/speed.c:679:	gd->arch.sdhc_clk = gd->bus_clk;
arch/powerpc/cpu/mpc85xx/speed.c:681:	gd->arch.sdhc_clk = gd->bus_clk / 2;
arch/powerpc/cpu/mpc85xx/speed.c:687:	gd->arch.vco_out = 2*sys_info.freq_systembus;
arch/powerpc/cpu/mpc85xx/speed.c:688:	gd->arch.cpm_clk = gd->arch.vco_out / 2;
arch/powerpc/cpu/mpc85xx/speed.c:689:	gd->arch.scc_clk = gd->arch.vco_out / 4;
arch/powerpc/cpu/mpc85xx/speed.c:690:	gd->arch.brg_clk = gd->arch.vco_out / (1 << (2 * (dfbrg + 1)));
arch/powerpc/cpu/mpc85xx/speed.c:693:	if(gd->cpu_clk != 0) return (0);
arch/powerpc/cpu/mpc85xx/speed.c:704:	return gd->bus_clk;
arch/powerpc/cpu/mpc85xx/speed.c:713:	return gd->mem_clk;
arch/powerpc/cpu/mpc85xx/cpu_init_early.c:101:	 * CONFIG_SYS_CCSRBAR_PHYS below may use gd->fdt_blob on ePAPR systems,
arch/powerpc/cpu/mpc85xx/cpu_init_early.c:104:	gd->fdt_blob = fdt;
arch/powerpc/cpu/mpc85xx/mp.c:190:	bootpg = ((gd->ram_size > CONFIG_MAX_MEM_MAPPED) ?
arch/powerpc/cpu/mpc85xx/mp.c:191:		CONFIG_MAX_MEM_MAPPED : gd->ram_size) +
arch/powerpc/cpu/mpc85xx/traps.c:37:#define END_OF_MEM (gd->bd->bi_memstart + get_effective_memsize())
arch/powerpc/cpu/mpc8xxx/pamu_table.c:18:	tbl->size[i] = (phys_size_t)(min(gd->ram_size, CONFIG_MAX_MEM_MAPPED));
arch/powerpc/cpu/mpc8xxx/law.c:56:	gd->arch.used_laws |= (1 << idx);
arch/powerpc/cpu/mpc8xxx/law.c:68:	gd->arch.used_laws &= ~(1 << idx);
arch/powerpc/cpu/mpc8xxx/law.c:100:	u32 idx = ffz(gd->arch.used_laws);
arch/powerpc/cpu/mpc8xxx/law.c:117:	if (gd->arch.used_laws == -1)
arch/powerpc/cpu/mpc8xxx/law.c:121:	idx = __ilog2(~(gd->arch.used_laws));
arch/powerpc/cpu/mpc8xxx/law.c:255:	gd->arch.used_laws = ~((1 << FSL_HW_NUM_LAWS) - 1);
arch/powerpc/cpu/mpc8xxx/law.c:257:	gd->arch.used_laws = 0;
arch/powerpc/cpu/mpc8xxx/law.c:287:			gd->arch.used_laws |= (1 << i);
arch/powerpc/cpu/mpc8xxx/cpu.c:235:	struct cpu_type *cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc8xxx/cpu.c:252:	struct cpu_type *cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc8xxx/cpu.c:270:	struct cpu_type *cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc8xxx/cpu.c:288:	struct cpu_type *cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc8xxx/cpu.c:319:	gd->arch.cpu = identify_cpu(ver);
arch/powerpc/cpu/mpc8xxx/cpu.c:327:	struct cpu_type *cpu = gd->arch.cpu;
arch/powerpc/cpu/mpc8xx/fdt.c:25:			       gd->arch.brg_clk, 1);
arch/powerpc/cpu/mpc8xx/immap.c:288:	ulong clock = gd->cpu_clk;
arch/powerpc/cpu/mpc8xx/cpu.c:91:	ulong clock = gd->cpu_clk;
arch/powerpc/cpu/mpc8xx/cpu.c:243:		return gd->cpu_clk / 16;
arch/powerpc/cpu/mpc8xx/cpu.c:263:	oscclk = gd->cpu_clk / factor;
arch/powerpc/cpu/mpc8xx/speed.c:15: * get_clocks() fills in gd->cpu_clock depending on CONFIG_8xx_GCLK_FREQ
arch/powerpc/cpu/mpc8xx/speed.c:29:	gd->cpu_clk = CONFIG_8xx_GCLK_FREQ;
arch/powerpc/cpu/mpc8xx/speed.c:33:		gd->bus_clk = gd->cpu_clk;
arch/powerpc/cpu/mpc8xx/speed.c:36:		gd->bus_clk = gd->cpu_clk / 2;
arch/powerpc/cpu/mpc8xx/speed.c:39:	gd->arch.brg_clk = gd->cpu_clk / divider;
arch/powerpc/cpu/mpc83xx/fdt.c:103:		"clock-frequency", gd->arch.core_clk, 1);
arch/powerpc/cpu/mpc83xx/spd_sdram.c:53:	printf(", %s MHz)", strmhz(buf, gd->mem_clk));
arch/powerpc/cpu/mpc83xx/spd_sdram.c:81:	mem_bus_clk = gd->mem_clk >> 1;
arch/powerpc/cpu/mpc83xx/spd_sdram.c:326:	ddrc_clk = gd->mem_clk / 1000000;
arch/powerpc/cpu/mpc83xx/cpu.c:32:	ulong clock = gd->cpu_clk;
arch/powerpc/cpu/mpc83xx/cpu.c:114:	printf("CSB: %s MHz\n", strmhz(buf, gd->arch.csb_clk));
arch/powerpc/cpu/mpc83xx/cpu.c:183:	return (gd->bus_clk + 3L) / 4L;
arch/powerpc/cpu/mpc83xx/spl_minimal.c:84:	return (gd->bus_clk + 3L) / 4L;
arch/powerpc/cpu/mpc83xx/speed.c:450:	gd->arch.csb_clk = csb_clk;
arch/powerpc/cpu/mpc83xx/speed.c:453:	gd->arch.tsec1_clk = tsec1_clk;
arch/powerpc/cpu/mpc83xx/speed.c:454:	gd->arch.tsec2_clk = tsec2_clk;
arch/powerpc/cpu/mpc83xx/speed.c:455:	gd->arch.usbdr_clk = usbdr_clk;
arch/powerpc/cpu/mpc83xx/speed.c:457:	gd->arch.usbdr_clk = usbdr_clk;
arch/powerpc/cpu/mpc83xx/speed.c:460:	gd->arch.usbmph_clk = usbmph_clk;
arch/powerpc/cpu/mpc83xx/speed.c:463:	gd->arch.tdm_clk = tdm_clk;
arch/powerpc/cpu/mpc83xx/speed.c:466:	gd->arch.sdhc_clk = sdhc_clk;
arch/powerpc/cpu/mpc83xx/speed.c:468:	gd->arch.core_clk = core_clk;
arch/powerpc/cpu/mpc83xx/speed.c:469:	gd->arch.i2c1_clk = i2c1_clk;
arch/powerpc/cpu/mpc83xx/speed.c:471:	gd->arch.i2c2_clk = i2c2_clk;
arch/powerpc/cpu/mpc83xx/speed.c:474:	gd->arch.enc_clk = enc_clk;
arch/powerpc/cpu/mpc83xx/speed.c:476:	gd->arch.lbiu_clk = lbiu_clk;
arch/powerpc/cpu/mpc83xx/speed.c:477:	gd->arch.lclk_clk = lclk_clk;
arch/powerpc/cpu/mpc83xx/speed.c:478:	gd->mem_clk = mem_clk;
arch/powerpc/cpu/mpc83xx/speed.c:480:	gd->arch.mem_sec_clk = mem_sec_clk;
arch/powerpc/cpu/mpc83xx/speed.c:483:	gd->arch.qe_clk = qe_clk;
arch/powerpc/cpu/mpc83xx/speed.c:484:	gd->arch.brg_clk = brg_clk;
arch/powerpc/cpu/mpc83xx/speed.c:488:	gd->arch.pciexp1_clk = pciexp1_clk;
arch/powerpc/cpu/mpc83xx/speed.c:489:	gd->arch.pciexp2_clk = pciexp2_clk;
arch/powerpc/cpu/mpc83xx/speed.c:492:	gd->arch.sata_clk = sata_clk;
arch/powerpc/cpu/mpc83xx/speed.c:494:	gd->pci_clk = pci_sync_in;
arch/powerpc/cpu/mpc83xx/speed.c:495:	gd->cpu_clk = gd->arch.core_clk;
arch/powerpc/cpu/mpc83xx/speed.c:496:	gd->bus_clk = gd->arch.csb_clk;
arch/powerpc/cpu/mpc83xx/speed.c:507:	return gd->arch.csb_clk;
arch/powerpc/cpu/mpc83xx/speed.c:516:	return gd->mem_clk;
arch/powerpc/cpu/mpc83xx/speed.c:525:	       strmhz(buf, gd->arch.core_clk));
arch/powerpc/cpu/mpc83xx/speed.c:527:	       strmhz(buf, gd->arch.csb_clk));
arch/powerpc/cpu/mpc83xx/speed.c:530:	       strmhz(buf, gd->arch.qe_clk));
arch/powerpc/cpu/mpc83xx/speed.c:532:	       strmhz(buf, gd->arch.brg_clk));
arch/powerpc/cpu/mpc83xx/speed.c:535:	       strmhz(buf, gd->arch.lbiu_clk));
arch/powerpc/cpu/mpc83xx/speed.c:537:	       strmhz(buf, gd->arch.lclk_clk));
arch/powerpc/cpu/mpc83xx/speed.c:538:	printf("  DDR:                 %-4s MHz\n", strmhz(buf, gd->mem_clk));
arch/powerpc/cpu/mpc83xx/speed.c:541:	       strmhz(buf, gd->arch.mem_sec_clk));
arch/powerpc/cpu/mpc83xx/speed.c:545:	       strmhz(buf, gd->arch.enc_clk));
arch/powerpc/cpu/mpc83xx/speed.c:548:	       strmhz(buf, gd->arch.i2c1_clk));
arch/powerpc/cpu/mpc83xx/speed.c:551:	       strmhz(buf, gd->arch.i2c2_clk));
arch/powerpc/cpu/mpc83xx/speed.c:555:	       strmhz(buf, gd->arch.tdm_clk));
arch/powerpc/cpu/mpc83xx/speed.c:559:	       strmhz(buf, gd->arch.sdhc_clk));
arch/powerpc/cpu/mpc83xx/speed.c:564:	       strmhz(buf, gd->arch.tsec1_clk));
arch/powerpc/cpu/mpc83xx/speed.c:566:	       strmhz(buf, gd->arch.tsec2_clk));
arch/powerpc/cpu/mpc83xx/speed.c:568:	       strmhz(buf, gd->arch.usbdr_clk));
arch/powerpc/cpu/mpc83xx/speed.c:571:	       strmhz(buf, gd->arch.usbdr_clk));
arch/powerpc/cpu/mpc83xx/speed.c:575:	       strmhz(buf, gd->arch.usbmph_clk));
arch/powerpc/cpu/mpc83xx/speed.c:580:	       strmhz(buf, gd->arch.pciexp1_clk));
arch/powerpc/cpu/mpc83xx/speed.c:582:	       strmhz(buf, gd->arch.pciexp2_clk));
arch/powerpc/cpu/mpc83xx/speed.c:586:	       strmhz(buf, gd->arch.sata_clk));
arch/powerpc/cpu/mpc83xx/cpu_init.c:218:	gd->arch.reset_status = __raw_readl(&im->reset.rsr);
arch/powerpc/cpu/mpc83xx/cpu_init.c:222:	gd->arch.arbiter_event_attributes = __raw_readl(&im->arbiter.aeatr);
arch/powerpc/cpu/mpc83xx/cpu_init.c:223:	gd->arch.arbiter_event_address = __raw_readl(&im->arbiter.aeadr);
arch/powerpc/cpu/mpc83xx/cpu_init.c:426:	int etype = (gd->arch.arbiter_event_attributes & AEATR_EVENT)
arch/powerpc/cpu/mpc83xx/cpu_init.c:428:	int mstr_id = (gd->arch.arbiter_event_attributes & AEATR_MSTR_ID)
arch/powerpc/cpu/mpc83xx/cpu_init.c:430:	int tbst = (gd->arch.arbiter_event_attributes & AEATR_TBST)
arch/powerpc/cpu/mpc83xx/cpu_init.c:432:	int tsize = (gd->arch.arbiter_event_attributes & AEATR_TSIZE)
arch/powerpc/cpu/mpc83xx/cpu_init.c:434:	int ttype = (gd->arch.arbiter_event_attributes & AEATR_TTYPE)
arch/powerpc/cpu/mpc83xx/cpu_init.c:437:	if (!force && !gd->arch.arbiter_event_address)
arch/powerpc/cpu/mpc83xx/cpu_init.c:442:	       gd->arch.arbiter_event_address);
arch/powerpc/cpu/mpc83xx/cpu_init.c:449:	return gd->arch.arbiter_event_address;
arch/powerpc/cpu/mpc83xx/cpu_init.c:456:	if (!force && !gd->arch.arbiter_event_address)
arch/powerpc/cpu/mpc83xx/cpu_init.c:460:		gd->arch.arbiter_event_attributes,
arch/powerpc/cpu/mpc83xx/cpu_init.c:461:		gd->arch.arbiter_event_address);
arch/powerpc/cpu/mpc83xx/cpu_init.c:463:	return gd->arch.arbiter_event_address;
arch/powerpc/cpu/mpc83xx/cpu_init.c:488:	ulong rsr = gd->arch.reset_status;
arch/powerpc/cpu/mpc83xx/traps.c:25:#define END_OF_MEM	(gd->bd->bi_memstart + gd->bd->bi_memsize)
arch/powerpc/cpu/mpc83xx/pci.c:69:			   PIWAR_WTT_SNOOP | (__ilog2(gd->ram_size - 1));
arch/powerpc/cpu/mpc83xx/pci.c:74:	hose->regions[i].size = gd->ram_size;
arch/powerpc/cpu/mpc83xx/pci.c:203:			tmp[0] = cpu_to_be32(gd->pci_clk);
arch/powerpc/cpu/mpc83xx/pci.c:218:			tmp[0] = cpu_to_be32(gd->pci_clk);
arch/powerpc/cpu/mpc83xx/interrupts.c:26:	*decrementer_count = (gd->bus_clk / 4) / CONFIG_SYS_HZ;
arch/powerpc/cpu/mpc83xx/pcie.c:132:	hose->regions[i].size = gd->ram_size;
arch/powerpc/cpu/mpc83xx/pcie.c:227:	ram_sz = gd->ram_size;
arch/powerpc/cpu/mpc83xx/pcie.c:275:		(((bus ? gd->arch.pciexp2_clk : gd->arch.pciexp1_clk)
arch/mips/lib/bootm.c:44:	lmb_reserve(lmb, sp, gd->ram_top - sp);
arch/mips/lib/bootm.c:50:	linux_argv = (char **)UNCACHED_SDRAM(gd->bd->bi_boot_params);
arch/mips/lib/bootm.c:122:	mem = gd->ram_size >> 20;
arch/mips/lib/bootm.c:176:		sprintf(env_buf, "%lu", (ulong)gd->ram_size);
arch/mips/lib/bootm.c:178:		      (ulong)gd->ram_size);
arch/mips/lib/bootm.c:180:		sprintf(env_buf, "%lu", (ulong)(gd->ram_size >> 20));
arch/mips/lib/bootm.c:182:		      (ulong)(gd->ram_size >> 20));
arch/mips/lib/bootm.c:198:	sprintf(env_buf, "0x%08X", (uint) (gd->bd->bi_flashstart));
arch/mips/lib/bootm.c:201:	sprintf(env_buf, "0x%X", (uint) (gd->bd->bi_flashsize));
arch/mips/lib/bootm.c:213:		sprintf(env_buf, "%un8r", gd->baudrate);
arch/mips/lib/bootm.c:258:	u64 mem_start = virt_to_phys((void *)gd->bd->bi_memstart);
arch/mips/lib/bootm.c:259:	u64 mem_size = gd->ram_size;
arch/mips/lib/bootm.c:304:		linux_extra = gd->ram_size;
arch/mips/lib/cache.c:40:		gd->arch.l2_line_size = mips_cm_l2_line_size();
arch/mips/lib/cache.c:46:		gd->arch.l2_line_size = sl ? (2 << sl) : 0;
arch/mips/lib/cache.c:61:	gd->arch.l1i_line_size = il ? (2 << il) : 0;
arch/mips/lib/cache.c:62:	gd->arch.l1d_line_size = dl ? (2 << dl) : 0;
arch/mips/lib/cache.c:70:	return gd->arch.l1i_line_size;
arch/mips/lib/cache.c:79:	return gd->arch.l1d_line_size;
arch/mips/lib/cache.c:88:	return gd->arch.l2_line_size;
arch/mips/lib/stack.c:10:	gd->start_addr_sp -= 0x500;
arch/mips/lib/stack.c:11:	gd->start_addr_sp &= ~0xFFF;
arch/mips/lib/stack.c:12:	gd->irq_sp = gd->start_addr_sp;
arch/mips/lib/stack.c:14:	      0x500, gd->start_addr_sp);
arch/mips/lib/traps.c:52:	       field, regs->cp0_epc - gd->reloc_off);
arch/mips/lib/traps.c:54:	       field, regs->regs[31] - gd->reloc_off);
arch/mips/lib/traps.c:89:	unsigned long ebase = gd->irq_sp;
arch/mips/lib/traps.c:97:	unsigned long ebase = gd->irq_sp;
arch/mips/mach-mt7620/cpu.c:27:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE, SZ_256M);
arch/mips/mach-mt7620/cpu.c:38:	const void *blob = gd->fdt_blob;
arch/mips/mach-bmips/dram.c:33:	gd->ram_size = ram.size;
arch/mips/mach-ath79/ar933x/clk.c:61:	gd->cpu_clk = pll / div;
arch/mips/mach-ath79/ar933x/clk.c:66:	gd->mem_clk = pll / div;
arch/mips/mach-ath79/ar933x/clk.c:71:	gd->bus_clk = pll / div;
arch/mips/mach-ath79/ar933x/clk.c:78:	if (!gd->bus_clk)
arch/mips/mach-ath79/ar933x/clk.c:80:	return gd->bus_clk;
arch/mips/mach-ath79/ar933x/clk.c:85:	if (!gd->mem_clk)
arch/mips/mach-ath79/ar933x/clk.c:87:	return gd->mem_clk;
arch/mips/mach-ath79/dram.c:16:	gd->ram_size = get_ram_size((void *)KSEG1, SZ_256M);
arch/mips/mach-ath79/qca953x/clk.c:61:	gd->cpu_clk = pll / div;
arch/mips/mach-ath79/qca953x/clk.c:83:	gd->mem_clk = pll / div;
arch/mips/mach-ath79/qca953x/clk.c:89:		gd->bus_clk = gd->mem_clk / (div + 1);
arch/mips/mach-ath79/qca953x/clk.c:92:		gd->bus_clk = gd->cpu_clk / (div + 1);
arch/mips/mach-ath79/qca953x/clk.c:100:	if (!gd->bus_clk)
arch/mips/mach-ath79/qca953x/clk.c:102:	return gd->bus_clk;
arch/mips/mach-ath79/qca953x/clk.c:107:	if (!gd->mem_clk)
arch/mips/mach-ath79/qca953x/clk.c:109:	return gd->mem_clk;
arch/mips/mach-ath79/cpu.c:96:	gd->arch.id = id;
arch/mips/mach-ath79/cpu.c:97:	gd->arch.soc = soc;
arch/mips/mach-ath79/cpu.c:98:	gd->arch.rev = rev;
arch/mips/mach-ath79/cpu.c:99:	gd->arch.ver = ver;
arch/mips/mach-ath79/cpu.c:111:		if (desc[i].soc == gd->arch.soc) {
arch/mips/mach-ath79/cpu.c:118:	id = gd->arch.id;
arch/mips/mach-ath79/cpu.c:119:	rev = gd->arch.rev;
arch/mips/mach-ath79/cpu.c:120:	ver = gd->arch.ver;
arch/mips/mach-ath79/ar934x/clk.c:303:	gd->cpu_clk = cpuclk / (cpudiv + 1);
arch/mips/mach-ath79/ar934x/clk.c:304:	gd->mem_clk = ddrclk / (ddrdiv + 1);
arch/mips/mach-ath79/ar934x/clk.c:305:	gd->bus_clk = busclk / (busdiv + 1);
arch/mips/mach-ath79/ar934x/clk.c:311:	return gd->bus_clk;
arch/mips/mach-ath79/ar934x/clk.c:317:	return gd->mem_clk;
arch/mips/mach-ath79/ar934x/clk.c:323:	printf("CPU:       %8ld MHz\n", gd->cpu_clk / 1000000);
arch/mips/mach-ath79/ar934x/clk.c:324:	printf("Memory:    %8ld MHz\n", gd->mem_clk / 1000000);
arch/mips/mach-ath79/ar934x/clk.c:325:	printf("AHB:       %8ld MHz\n", gd->bus_clk / 1000000);
arch/mips/mach-ath79/ar934x/ddr.c:54:			if (gd->arch.rev) {
arch/mips/mach-ath79/ar934x/ddr.c:139:		if ((gd->arch.rev && (reg & BIT(3))) || !gd->arch.rev) {
arch/mips/mach-ath79/include/mach/ath79.h:41:	return gd->arch.soc == ATH79_SOC_AR7130 ||
arch/mips/mach-ath79/include/mach/ath79.h:42:		gd->arch.soc == ATH79_SOC_AR7141 ||
arch/mips/mach-ath79/include/mach/ath79.h:43:		gd->arch.soc == ATH79_SOC_AR7161;
arch/mips/mach-ath79/include/mach/ath79.h:48:	return gd->arch.soc == ATH79_SOC_AR7240 ||
arch/mips/mach-ath79/include/mach/ath79.h:49:		gd->arch.soc == ATH79_SOC_AR7241 ||
arch/mips/mach-ath79/include/mach/ath79.h:50:		gd->arch.soc == ATH79_SOC_AR7242;
arch/mips/mach-ath79/include/mach/ath79.h:55:	return gd->arch.soc == ATH79_SOC_AR7240;
arch/mips/mach-ath79/include/mach/ath79.h:60:	return gd->arch.soc == ATH79_SOC_AR7241;
arch/mips/mach-ath79/include/mach/ath79.h:65:	return gd->arch.soc == ATH79_SOC_AR7242;
arch/mips/mach-ath79/include/mach/ath79.h:70:	return gd->arch.soc == ATH79_SOC_AR9130 ||
arch/mips/mach-ath79/include/mach/ath79.h:71:		gd->arch.soc == ATH79_SOC_AR9132;
arch/mips/mach-ath79/include/mach/ath79.h:76:	return gd->arch.soc == ATH79_SOC_AR9330 ||
arch/mips/mach-ath79/include/mach/ath79.h:77:		gd->arch.soc == ATH79_SOC_AR9331;
arch/mips/mach-ath79/include/mach/ath79.h:82:	return gd->arch.soc == ATH79_SOC_AR9341;
arch/mips/mach-ath79/include/mach/ath79.h:87:	return gd->arch.soc == ATH79_SOC_AR9342;
arch/mips/mach-ath79/include/mach/ath79.h:92:	return gd->arch.soc == ATH79_SOC_AR9344;
arch/mips/mach-ath79/include/mach/ath79.h:104:	return gd->arch.soc == ATH79_SOC_QCA9533;
arch/mips/mach-ath79/include/mach/ath79.h:114:	return gd->arch.soc == ATH79_SOC_QCA9556;
arch/mips/mach-ath79/include/mach/ath79.h:119:	return gd->arch.soc == ATH79_SOC_QCA9558;
arch/mips/mach-ath79/include/mach/ath79.h:129:	return gd->arch.soc == ATH79_SOC_TP9343;
arch/mips/mach-ath79/include/mach/ath79.h:134:	return gd->arch.soc == ATH79_SOC_QCA9561;
arch/mips/mach-pic32/cpu.c:117:	gd->ram_size = ddr2_calculate_size();
arch/mips/include/asm/io.h:49:	return gd->arch.io_port_base;
arch/mips/include/asm/io.h:56:	gd->arch.io_port_base = base;
arch/mips/cpu/start.S:78:	PTR_S	sp, GD_MALLOC_BASE(k0)	# gd->malloc_base offset
arch/xtensa/lib/bootm.c:41:	struct bd_info *bd = gd->bd;
arch/xtensa/lib/bootm.c:106:	params->data[0] = gd->baudrate;
arch/xtensa/lib/bootm.c:153:	params_start = (struct bp_tag *)gd->bd->bi_boot_params;
arch/xtensa/cpu/cpu.c:38:		XCHAL_CORE_ID, id0, id1, strmhz(mhz, gd->cpu_clk));
arch/xtensa/cpu/cpu.c:46:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
arch/m68k/lib/bootm.c:47:	lmb_reserve(lmb, sp, (CONFIG_SYS_SDRAM_BASE + gd->ram_size - sp));
arch/m68k/include/asm/immap.h:28:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:62:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:91:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:122:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 2000000) - 1) << 8)
arch/m68k/include/asm/immap.h:145:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 2000000) - 1) << 8)
arch/m68k/include/asm/immap.h:165:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:191:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:215:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:238:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:262:#define CONFIG_SYS_TIMER_PRESCALER      (((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:285:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:315:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:355:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:391:#define CONFIG_SYS_TIMER_PRESCALER	(((gd->bus_clk / 1000000) - 1) << 8)
arch/m68k/include/asm/immap.h:443:#define CONFIG_SYS_TIMER_PRESCALER	(gd->bus_clk / 1000000)
arch/m68k/include/asm/immap.h:490:#define CONFIG_SYS_TIMER_PRESCALER	(gd->bus_clk / 1000000)
arch/m68k/cpu/mcf523x/cpu.c:53:		       strmhz(buf1, gd->cpu_clk),
arch/m68k/cpu/mcf523x/cpu.c:54:		       strmhz(buf2, gd->bus_clk));
arch/m68k/cpu/mcf523x/speed.c:19: * get_clocks() fills in gd->cpu_clock and gd->bus_clk
arch/m68k/cpu/mcf523x/speed.c:30:	gd->bus_clk = CONFIG_SYS_CLK;
arch/m68k/cpu/mcf523x/speed.c:31:	gd->cpu_clk = (gd->bus_clk * 2);
arch/m68k/cpu/mcf523x/speed.c:34:	gd->arch.i2c1_clk = gd->bus_clk;
arch/m68k/cpu/mcf547x_8x/cpu.c:88:		       strmhz(buf1, gd->cpu_clk),
arch/m68k/cpu/mcf547x_8x/cpu.c:89:		       strmhz(buf2, gd->bus_clk));
arch/m68k/cpu/mcf547x_8x/speed.c:19: * get_clocks() fills in gd->cpu_clock and gd->bus_clk
arch/m68k/cpu/mcf547x_8x/speed.c:23:	gd->bus_clk = CONFIG_SYS_CLK;
arch/m68k/cpu/mcf547x_8x/speed.c:24:	gd->cpu_clk = (gd->bus_clk * 2);
arch/m68k/cpu/mcf547x_8x/speed.c:27:	gd->arch.i2c1_clk = gd->bus_clk;
arch/m68k/cpu/mcf5227x/cpu.c:53:		       strmhz(buf1, gd->cpu_clk),
arch/m68k/cpu/mcf5227x/cpu.c:54:		       strmhz(buf2, gd->bus_clk),
arch/m68k/cpu/mcf5227x/cpu.c:55:		       strmhz(buf3, gd->arch.flb_clk));
arch/m68k/cpu/mcf5227x/cpu.c:57:		       strmhz(buf1, gd->arch.inp_clk),
arch/m68k/cpu/mcf5227x/cpu.c:58:		       strmhz(buf2, gd->arch.vco_clk));
arch/m68k/cpu/mcf5227x/speed.c:68: * get_clocks() fills in gd->cpu_clock and gd->bus_clk
arch/m68k/cpu/mcf5227x/speed.c:100:		gd->arch.vco_clk = vco;	/* Vco clock */
arch/m68k/cpu/mcf5227x/speed.c:104:		gd->arch.vco_clk = vco;	/* Vco clock */
arch/m68k/cpu/mcf5227x/speed.c:110:		gd->arch.inp_clk = CONFIG_SYS_INPUT_CLKSRC; /* Input clock */
arch/m68k/cpu/mcf5227x/speed.c:113:		gd->cpu_clk = vco / temp;	/* cpu clock */
arch/m68k/cpu/mcf5227x/speed.c:116:		gd->arch.flb_clk = vco / temp;	/* flexbus clock */
arch/m68k/cpu/mcf5227x/speed.c:117:		gd->bus_clk = gd->arch.flb_clk;
arch/m68k/cpu/mcf5227x/speed.c:121:	gd->arch.i2c1_clk = gd->bus_clk;
arch/m68k/cpu/mcf5445x/cpu.c:86:		       strmhz(buf1, gd->cpu_clk),
arch/m68k/cpu/mcf5445x/cpu.c:87:		       strmhz(buf2, gd->bus_clk),
arch/m68k/cpu/mcf5445x/cpu.c:88:		       strmhz(buf3, gd->arch.flb_clk));
arch/m68k/cpu/mcf5445x/cpu.c:91:		       strmhz(buf1, gd->pci_clk),
arch/m68k/cpu/mcf5445x/cpu.c:92:		       strmhz(buf2, gd->arch.inp_clk),
arch/m68k/cpu/mcf5445x/cpu.c:93:		       strmhz(buf3, gd->arch.vco_clk));
arch/m68k/cpu/mcf5445x/cpu.c:96:		       strmhz(buf1, gd->arch.inp_clk),
arch/m68k/cpu/mcf5445x/cpu.c:97:		       strmhz(buf2, gd->arch.vco_clk));
arch/m68k/cpu/mcf5445x/speed.c:108:	gd->arch.vco_clk = vco;
arch/m68k/cpu/mcf5445x/speed.c:110:	gd->arch.inp_clk = CONFIG_SYS_INPUT_CLKSRC;	/* Input clock */
arch/m68k/cpu/mcf5445x/speed.c:114:	gd->cpu_clk = vco / temp;	/* cpu clock */
arch/m68k/cpu/mcf5445x/speed.c:115:	gd->arch.flb_clk = vco / temp;	/* FlexBus clock */
arch/m68k/cpu/mcf5445x/speed.c:116:	gd->arch.flb_clk >>= 1;
arch/m68k/cpu/mcf5445x/speed.c:118:		gd->arch.flb_clk >>= 1;
arch/m68k/cpu/mcf5445x/speed.c:121:	gd->bus_clk = vco / temp;	/* bus clock */
arch/m68k/cpu/mcf5445x/speed.c:124:	gd->arch.sdhc_clk = vco / temp;
arch/m68k/cpu/mcf5445x/speed.c:159:		gd->pci_clk = 0;
arch/m68k/cpu/mcf5445x/speed.c:221:		gd->arch.vco_clk = vco;	/* Vco clock */
arch/m68k/cpu/mcf5445x/speed.c:232:		gd->arch.vco_clk = vco;	/* Vco clock */
arch/m68k/cpu/mcf5445x/speed.c:236:		gd->arch.vco_clk = vco;	/* Vco clock */
arch/m68k/cpu/mcf5445x/speed.c:242:		gd->arch.inp_clk = CONFIG_SYS_INPUT_CLKSRC; /* Input clock */
arch/m68k/cpu/mcf5445x/speed.c:245:		gd->cpu_clk = vco / temp;	/* cpu clock */
arch/m68k/cpu/mcf5445x/speed.c:248:		gd->bus_clk = vco / temp;	/* bus clock */
arch/m68k/cpu/mcf5445x/speed.c:251:		gd->arch.flb_clk = vco / temp;	/* FlexBus clock */
arch/m68k/cpu/mcf5445x/speed.c:256:			gd->pci_clk = vco / temp;	/* PCI clock */
arch/m68k/cpu/mcf5445x/speed.c:262:	gd->arch.i2c1_clk = gd->bus_clk;
arch/m68k/cpu/mcf5445x/speed.c:267:/* get_clocks() fills in gd->cpu_clock and gd->bus_clk */
arch/m68k/cpu/mcf5445x/speed.c:278:	gd->arch.i2c1_clk = gd->bus_clk;
arch/m68k/cpu/mcf52x2/cpu.c:46:	       strmhz(buf1, gd->cpu_clk),
arch/m68k/cpu/mcf52x2/cpu.c:47:	       strmhz(buf2, gd->bus_clk));
arch/m68k/cpu/mcf52x2/speed.c:17:/* get_clocks() fills in gd->cpu_clock and gd->bus_clk */
arch/m68k/cpu/mcf52x2/speed.c:68:	gd->cpu_clk = CONFIG_SYS_CLK;
arch/m68k/cpu/mcf52x2/speed.c:71:	gd->bus_clk = gd->cpu_clk / 2;
arch/m68k/cpu/mcf52x2/speed.c:73:	gd->bus_clk = gd->cpu_clk;
arch/m68k/cpu/mcf52x2/speed.c:77:	gd->arch.i2c1_clk = gd->bus_clk;
arch/m68k/cpu/mcf52x2/speed.c:79:	gd->arch.i2c2_clk = gd->bus_clk;
arch/m68k/cpu/mcf530x/speed.c:13:/* get_clocks() fills in gd->cpu_clock and gd->bus_clk */
arch/m68k/cpu/mcf530x/speed.c:17:	gd->bus_clk = CONFIG_SYS_CLK;
arch/m68k/cpu/mcf530x/speed.c:18:	gd->cpu_clk = CONFIG_SYS_CPU_CLK;
arch/m68k/cpu/mcf532x/cpu.c:92:		       strmhz(buf1, gd->cpu_clk),
arch/m68k/cpu/mcf532x/cpu.c:93:		       strmhz(buf2, gd->bus_clk));
arch/m68k/cpu/mcf532x/speed.c:250:/* get_clocks() fills in gd->cpu_clock and gd->bus_clk */
arch/m68k/cpu/mcf532x/speed.c:253:	gd->bus_clk = clock_pll(CONFIG_SYS_CLK / 1000, 0) * 1000;
arch/m68k/cpu/mcf532x/speed.c:254:	gd->cpu_clk = (gd->bus_clk * 3);
arch/m68k/cpu/mcf532x/speed.c:257:	gd->arch.i2c1_clk = gd->bus_clk;
arch/nios2/lib/cache.c:17:	start &= ~(gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:18:	end += (gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:19:	end &= ~(gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:21:	for (addr = start; addr < end; addr += gd->arch.dcache_line_size) {
arch/nios2/lib/cache.c:33:	start &= ~(gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:34:	end += (gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:35:	end &= ~(gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:37:	if (end > start + gd->arch.dcache_size)
arch/nios2/lib/cache.c:38:		end = start + gd->arch.dcache_size;
arch/nios2/lib/cache.c:40:	for (addr = start; addr < end; addr += gd->arch.dcache_line_size) {
arch/nios2/lib/cache.c:52:	start &= ~(gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:53:	end += (gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:54:	end &= ~(gd->arch.dcache_line_size - 1);
arch/nios2/lib/cache.c:56:	for (addr = start; addr < end; addr += gd->arch.dcache_line_size) {
arch/nios2/lib/cache.c:68:	start &= ~(gd->arch.icache_line_size - 1);
arch/nios2/lib/cache.c:69:	end += (gd->arch.icache_line_size - 1);
arch/nios2/lib/cache.c:70:	end &= ~(gd->arch.icache_line_size - 1);
arch/nios2/lib/cache.c:72:	if (end > start + gd->arch.icache_size)
arch/nios2/lib/cache.c:73:		end = start + gd->arch.icache_size;
arch/nios2/lib/cache.c:75:	for (addr = start; addr < end; addr += gd->arch.icache_line_size) {
arch/nios2/lib/cache.c:86:	__flush_dcache_all(0, gd->arch.dcache_size);
arch/nios2/lib/cache.c:87:	__flush_icache(0, gd->arch.icache_size);
arch/nios2/lib/cache.c:92:	if (gd->arch.has_initda)
arch/nios2/lib/cache.c:100:	if (gd->arch.has_initda)
arch/nios2/lib/cache.c:109:	if (gd->arch.has_initda)
arch/nios2/include/asm/io.h:27:		return (void *)(paddr | gd->arch.io_region_base);
arch/nios2/include/asm/io.h:29:		return (void *)(paddr | gd->arch.mem_region_base);
arch/nios2/include/asm/io.h:37:	return (void *)(paddr | gd->arch.mem_region_base);
arch/nios2/include/asm/io.h:44:	return (phys_addr_t)vaddr & gd->arch.physaddr_mask;
arch/nios2/cpu/cpu.c:35:	nios2_callr(gd->arch.reset_addr);
arch/nios2/cpu/cpu.c:49:	void *except_target = (void *)gd->arch.exception_addr;
arch/nios2/cpu/cpu.c:54:		flush_cache(gd->arch.exception_addr,
arch/nios2/cpu/cpu.c:69:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
arch/nios2/cpu/cpu.c:90:	info->cpu_freq = gd->cpu_clk;
arch/nios2/cpu/cpu.c:92:		(gd->arch.has_mmu ? (1 << CPU_FEAT_MMU) : 0);
arch/nios2/cpu/cpu.c:104:	const void *blob = gd->fdt_blob;
arch/nios2/cpu/cpu.c:107:	gd->cpu_clk = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:109:	gd->arch.dcache_line_size = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:111:	gd->arch.icache_line_size = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:113:	gd->arch.dcache_size = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:115:	gd->arch.icache_size = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:117:	gd->arch.reset_addr = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:119:	gd->arch.exception_addr = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:121:	gd->arch.has_initda = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:123:	gd->arch.has_mmu = fdtdec_get_int(blob, node,
arch/nios2/cpu/cpu.c:125:	gd->arch.io_region_base = gd->arch.has_mmu ? 0xe0000000 : 0x80000000;
arch/nios2/cpu/cpu.c:126:	gd->arch.mem_region_base = gd->arch.has_mmu ? 0xc0000000 : 0x00000000;
arch/nios2/cpu/cpu.c:127:	gd->arch.physaddr_mask = gd->arch.has_mmu ? 0x1fffffff : 0x7fffffff;
cmd/x86/fsp.c:82:	hdr = gd->arch.hob_list;
cmd/fdt.c:25: * Global data (for the gd->bd)
cmd/fdt.c:106:				blob = (struct fdt_header *)gd->fdt_blob;
cmd/fdt.c:122:			gd->fdt_blob = blob;
cmd/fdt.c:209:		int err = ft_system_setup(working_fdt, gd->bd);
cmd/fdt.c:592:		int err = ft_board_setup(working_fdt, gd->bd);
cmd/fdt.c:600:		ft_board_setup_ex(working_fdt, gd->bd);
cmd/fdt.c:633:			blob = (struct fdt_header *)gd->fdt_blob;
cmd/fdt.c:638:		gd->fdt_blob = blob;
cmd/fdt.c:1104:	"                                                  default gd->fdt_blob\n"
cmd/log.c:18:		gd->default_log_level = simple_strtol(argv[1], NULL, 10);
cmd/log.c:20:		printf("Default log level: %d\n", gd->default_log_level);
cmd/log.c:34:			gd->log_fmt = LOGF_DEFAULT;
cmd/log.c:36:			gd->log_fmt = LOGF_ALL;
cmd/log.c:38:			gd->log_fmt = 0;
cmd/log.c:46:				gd->log_fmt |= 1 << (ptr - log_fmt_chars);
cmd/log.c:52:			if (gd->log_fmt & (1 << i))
cmd/bootm.c:101:			cmd_bootm_sub[i].name += gd->reloc_off;
cmd/spl.c:132:				(void *)gd->bd->bi_boot_params);
cmd/mtdparts.c:1531: * buffer.  gd->env_buf will be too small.
cmd/mtdparts.c:1538:	if (gd->flags & GD_FLG_ENV_READY)
cmd/ti/ddr3.c:24:#define ECC_END_ADDR1		(((gd->start_addr_sp - DDR_REMAP_ADDR - \
cmd/bdinfo.c:150:	printf("baudrate    = %6u bps\n", gd->baudrate);
cmd/bdinfo.c:152:	printf("baudrate    = %u bps\n", gd->baudrate);
cmd/bdinfo.c:173:	bd_t *bd = gd->bd;
cmd/bdinfo.c:207:	print_num("relocaddr", gd->relocaddr);
cmd/bdinfo.c:216:	bd_t *bd = gd->bd;
cmd/bdinfo.c:236:	bd_t *bd = gd->bd;
cmd/bdinfo.c:248:	print_num("relocaddr", gd->relocaddr);
cmd/bdinfo.c:249:	print_num("reloc off", gd->reloc_off);
cmd/bdinfo.c:250:	print_num("fdt_blob", (ulong)gd->fdt_blob);
cmd/bdinfo.c:251:	print_num("new_fdt", (ulong)gd->new_fdt);
cmd/bdinfo.c:252:	print_num("fdt_size", (ulong)gd->fdt_size);
cmd/bdinfo.c:261:	bd_t *bd = gd->bd;
cmd/bdinfo.c:292:	print_std_bdinfo(gd->bd);
cmd/bdinfo.c:293:	print_num("relocaddr", gd->relocaddr);
cmd/bdinfo.c:294:	print_num("reloc off", gd->reloc_off);
cmd/bdinfo.c:304:	bd_t *bd = gd->bd;
cmd/bdinfo.c:311:	if (gd->arch.secure_ram & MEM_RESERVE_SECURE_SECURED) {
cmd/bdinfo.c:313:			  gd->arch.secure_ram & MEM_RESERVE_SECURE_ADDR_MASK);
cmd/bdinfo.c:317:	if (gd->arch.resv_ram)
cmd/bdinfo.c:318:		print_num("Reserved ram", gd->arch.resv_ram);
cmd/bdinfo.c:325:	print_num("TLB addr", gd->arch.tlb_addr);
cmd/bdinfo.c:327:	print_num("relocaddr", gd->relocaddr);
cmd/bdinfo.c:328:	print_num("reloc off", gd->reloc_off);
cmd/bdinfo.c:329:	print_num("irq_sp", gd->irq_sp);	/* irq stack pointer */
cmd/bdinfo.c:330:	print_num("sp start ", gd->start_addr_sp);
cmd/bdinfo.c:332:	print_num("FB base  ", gd->fb_base);
cmd/bdinfo.c:339:	printf("ARM frequency = %ld MHz\n", gd->bd->bi_arm_freq);
cmd/bdinfo.c:340:	printf("DSP frequency = %ld MHz\n", gd->bd->bi_dsp_freq);
cmd/bdinfo.c:341:	printf("DDR frequency = %ld MHz\n", gd->bd->bi_ddr_freq);
cmd/bdinfo.c:344:	printf("Board Type  = %ld\n", gd->board_type);
cmd/bdinfo.c:347:	printf("Early malloc usage: %lx / %x\n", gd->malloc_ptr,
cmd/bdinfo.c:350:	if (gd->fdt_blob)
cmd/bdinfo.c:351:		printf("fdt_blob = %p\n", gd->fdt_blob);
cmd/bdinfo.c:360:	bd_t *bd = gd->bd;
cmd/bdinfo.c:373:	bd_t *bd = gd->bd;
cmd/bdinfo.c:379:	print_num("relocaddr", gd->relocaddr);
cmd/bdinfo.c:380:	print_num("reloc off", gd->reloc_off);
cmd/bdinfo.c:394:	bd_t *bd = gd->bd;
cmd/bdinfo.c:401:	print_num("FB base  ", gd->fb_base);
cmd/bdinfo.c:410:	bd_t *bd = gd->bd;
cmd/bdinfo.c:425:	bd_t *bd = gd->bd;
cmd/bdinfo.c:429:	print_num("relocaddr", gd->relocaddr);
cmd/bdinfo.c:430:	print_num("reloc off", gd->reloc_off);
cmd/bdinfo.c:441:	bd_t *bd = gd->bd;
cmd/bdinfo.c:454:	print_std_bdinfo(gd->bd);
cmd/bedbug.c:343:	top = gd->bd->bi_memstart + gd->bd->bi_memsize;
cmd/efi.c:211:	       gd->arch.table, map, size, map->version, map->desc_size);
cmd/nvedit.c:289:	if (!(gd->flags & GD_FLG_ENV_READY))
cmd/nvedit.c:485:		if (entry->callback == clbkp->callback + gd->reloc_off)
cmd/nvedit.c:624:	if (!(gd->flags & GD_FLG_ENV_READY))
cmd/nvedit.c:658:	if (gd->flags & GD_FLG_ENV_READY) { /* after import into hashtable */
cmd/nvedit.c:671:	if (env_get_f(name, (char *)(gd->env_buf), sizeof(gd->env_buf)) > 0)
cmd/nvedit.c:672:		return (char *)(gd->env_buf);
cmd/nvedit.c:1138:	gd->flags |= GD_FLG_ENV_READY;
cmd/bootefi.c:163:		u64 ram_start = gd->bd->bi_dram[i].start;
cmd/bootefi.c:164:		u64 ram_size = gd->bd->bi_dram[i].size;
cmd/sound.c:19:	ret = sound_init(gd->fdt_blob);
cmd/date.c:23:#define RELOC(a)	((typeof(a))((unsigned long)(a) + gd->reloc_off))
cmd/mem.c:1181:	board_show_dram(gd->ram_size);
cmd/load.c:49:	load_baudrate = current_baudrate = gd->baudrate;
cmd/load.c:73:		gd->baudrate = load_baudrate;
cmd/load.c:116:		gd->baudrate = current_baudrate;
cmd/load.c:225:	    if (gd->jt->getc != getc) {
cmd/load.c:246:	save_baudrate = current_baudrate = gd->baudrate;
cmd/load.c:267:		gd->baudrate = save_baudrate;
cmd/load.c:296:		gd->baudrate = current_baudrate;
cmd/load.c:433:	load_baudrate = current_baudrate = gd->baudrate;
cmd/load.c:450:		gd->baudrate = load_baudrate;
cmd/load.c:496:		gd->baudrate = current_baudrate;
lib/efi/efi_info.c:19:	if (!gd->arch.table)
lib/efi/efi_info.c:22:	info = map_sysmem(gd->arch.table, 0);
lib/efi/efi_app.c:52:	gd->malloc_base = (ulong)efi_malloc(priv, CONFIG_VAL(SYS_MALLOC_F_LEN),
lib/efi/efi_app.c:54:	if (!gd->malloc_base)
lib/efi/efi_app.c:75:	gd->ram_size = pages << 12;
lib/efi/efi_app.c:87:		boot->free_pages(priv->ram_base, gd->ram_size >> 12);
lib/efi/efi_app.c:89:	efi_free(priv, (void *)gd->malloc_base);
lib/trace.c:26:	 * of the function from gd->relocaddr
lib/trace.c:51:	if (gd->flags & GD_FLG_RELOC)
lib/trace.c:52:		offset -= gd->relocaddr;
lib/trace.c:281:	ulong func_count = gd->mon_len / FUNC_SITE_SIZE;
lib/trace.c:336:	ulong func_count = gd->mon_len / FUNC_SITE_SIZE;
lib/initcall.c:20://		if (gd->flags & GD_FLG_RELOC)
lib/initcall.c:21://			reloc_ofs = gd->reloc_off;
lib/initcall.c:26:		if (gd->flags & GD_FLG_RELOC)
lib/efi_loader/efi_runtime.c:328:	ulong patchoff = offset - (ulong)gd->relocaddr;
lib/efi_loader/efi_runtime.c:359:		p = (void*)((ulong)rel->offset - base) + gd->relocaddr;
lib/efi_loader/efi_runtime.c:473:					   (runtime_start - gd->relocaddr);
lib/efi_loader/efi_memory.c:552:		u64 ram_start = gd->bd->bi_dram[i].start;
lib/efi_loader/efi_memory.c:553:		u64 ram_size = gd->bd->bi_dram[i].size;
lib/efi_loader/efi_memory.c:570:	uboot_start = (gd->start_addr_sp - uboot_stack_size) & ~EFI_PAGE_MASK;
lib/efi_loader/efi_memory.c:571:	uboot_pages = (gd->ram_top - uboot_start) >> EFI_PAGE_SHIFT;
lib/efi_loader/efi_gop.c:415:	fb_base = gd->fb_base;
lib/efi_loader/efi_gop.c:417:	fb = (void*)gd->fb_base;
lib/fdtdec.c:600:	if (!gd->fdt_blob || ((uintptr_t)gd->fdt_blob & 3) ||
lib/fdtdec.c:601:	    fdt_check_header(gd->fdt_blob)) {
lib/fdtdec.c:607:		if (gd->fdt_blob) {
lib/fdtdec.c:608:			printf("fdt_blob=%p\n", gd->fdt_blob);
lib/fdtdec.c:609:			print_buffer((ulong)gd->fdt_blob, gd->fdt_blob, 4,
lib/fdtdec.c:1079:	mem = fdt_path_offset(gd->fdt_blob, "/memory");
lib/fdtdec.c:1085:	ret = fdt_get_resource(gd->fdt_blob, mem, "reg", 0, &res);
lib/fdtdec.c:1091:	gd->ram_size = (phys_size_t)(res.end - res.start + 1);
lib/fdtdec.c:1092:	gd->ram_base = (unsigned long)res.start;
lib/fdtdec.c:1094:	      (unsigned long long)gd->ram_size);
lib/fdtdec.c:1104:		mem = fdt_node_offset_by_prop_value(gd->fdt_blob, mem,
lib/fdtdec.c:1116:	mem = get_next_memory_node(gd->fdt_blob, -1);
lib/fdtdec.c:1123:		ret = fdt_get_resource(gd->fdt_blob, mem, "reg", reg++, &res);
lib/fdtdec.c:1126:			mem = get_next_memory_node(gd->fdt_blob, mem);
lib/fdtdec.c:1130:			ret = fdt_get_resource(gd->fdt_blob, mem, "reg", reg++, &res);
lib/fdtdec.c:1138:		gd->bd->bi_dram[bank].start = (phys_addr_t)res.start;
lib/fdtdec.c:1139:		gd->bd->bi_dram[bank].size =
lib/fdtdec.c:1144:		      (unsigned long long)gd->bd->bi_dram[bank].start,
lib/fdtdec.c:1145:		      (unsigned long long)gd->bd->bi_dram[bank].size);
lib/fdtdec.c:1237:	gd->fdt_blob = __dtb_dt_spl_begin;
lib/fdtdec.c:1239:	gd->fdt_blob = __dtb_dt_begin;
lib/fdtdec.c:1243:	gd->fdt_blob = board_fdt_blob_setup();
lib/fdtdec.c:1253:	gd->fdt_blob = (void *)prior_stage_fdt_address;
lib/fdtdec.c:1255:	gd->fdt_blob = (void *)env_get_ulong("fdtcontroladdr", 16,
lib/fdtdec.c:1256:						(uintptr_t)gd->fdt_blob);
lib/fdtdec.c:1267:	if (uncompress_blob(gd->fdt_blob, 0x1000000, &fdt_blob) == 0)
lib/fdtdec.c:1268:		gd->fdt_blob = fdt_blob;
lib/fdtdec.c:1274:	fdt_blob = locate_dtb_in_fit(gd->fdt_blob);
lib/fdtdec.c:1276:		gd->fdt_blob = fdt_blob;
lib/time.c:62:	if (!gd->timer) {
lib/time.c:74:	return timer_get_rate(gd->timer);
lib/time.c:82:	if (!gd->timer) {
lib/time.c:94:	ret = timer_get_count(gd->timer, &count);
lib/time.c:108:	if (now < gd->timebase_l)
lib/time.c:109:		gd->timebase_h++;
lib/time.c:110:	gd->timebase_l = now;
lib/time.c:111:	return ((uint64_t)gd->timebase_h << 32) | gd->timebase_l;
test/dm/ram.c:23:	ut_asserteq(gd->ram_size, info.size);
test/dm/test-fdt.c:42:	pdata->ping_add = fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev),
test/dm/test-fdt.c:44:	pdata->base = fdtdec_get_addr(gd->fdt_blob, dev_of_offset(dev),
test/dm/test-fdt.c:156:		base = fdtdec_get_addr(gd->fdt_blob, dev_of_offset(dev),
test/dm/test-fdt.c:159:		      fdt_get_name(gd->fdt_blob, dev_of_offset(dev), NULL));
test/dm/test-fdt.c:177:	ret = dm_scan_fdt(gd->fdt_blob, false);
test/dm/test-fdt.c:205:	ret = dm_scan_fdt(gd->fdt_blob, true);
test/dm/test-fdt.c:276:	const void *blob = gd->fdt_blob;
test/dm/test-main.c:29:	gd->dm_root = NULL;
test/dm/test-main.c:35:	gd->of_root = of_live ? uts->of_root : NULL;
test/dm/test-main.c:94:		ut_assertok(dm_extended_scan_fdt(gd->fdt_blob, false));
test/dm/test-main.c:102:		gd->flags |= GD_FLG_SILENT;
test/dm/test-main.c:104:	gd->flags &= ~GD_FLG_SILENT;
test/dm/test-main.c:142:	if (!gd->fdt_blob || fdt_next_node(gd->fdt_blob, 0, NULL) < 0) {
test/dm/test-main.c:145:		ut_assert(gd->fdt_blob);
test/dm/test-main.c:153:	uts->of_root = gd->of_root;
test/dm/test-main.c:191:	gd->dm_root = NULL;
test/dm/test-main.c:194:	dm_scan_fdt(gd->fdt_blob, false);
test/dm/blk.c:24:	ut_assertok(blk_create_device(gd->dm_root, "sandbox_host_blk", "test",
test/dm/blk.c:102:	ut_assertok(blk_create_device(gd->dm_root, "sandbox_host_blk", "test",
test/dm/core.c:117:	ut_asserteq(1, list_count_items(&gd->uclass_root));
test/dm/core.c:118:	ut_asserteq(0, list_count_items(&gd->dm_root->child_head));
test/dm/core.c:124:	ut_assert(1 < list_count_items(&gd->uclass_root));
test/dm/core.c:125:	ut_assert(0 < list_count_items(&gd->dm_root->child_head));
test/dm/core.c:131:	list_for_each_entry(dev, &gd->dm_root->child_head, sibling_node)
test/dm/core.c:487:		ut_assertok(dm_scan_fdt(gd->fdt_blob, false));
test/dm/core.c:730:	gd->dm_root = NULL;
test/dm/core.c:731:	gd->dm_root_f = NULL;
test/dm/core.c:732:	memset(&gd->uclass_root, '\0', sizeof(gd->uclass_root));
test/dm/bus.c:133:	const void *blob = gd->fdt_blob;
test/dm/bus.c:171:	const void *blob = gd->fdt_blob;
test/ut.c:17:	gd->flags &= ~(GD_FLG_SILENT | GD_FLG_RECORD);
test/ut.c:27:	gd->flags &= ~(GD_FLG_SILENT | GD_FLG_RECORD);
board/kobol/helios4/helios4.c:129:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/kosagi/novena/novena.c:168:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/kosagi/novena/novena.c:193:	gd->ram_size = imx_ddr_size();
board/logicpd/imx6/imx6logic.c:40:	gd->ram_size = imx_ddr_size();
board/logicpd/imx6/imx6logic.c:170:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/logicpd/am3517evm/am3517evm.c:49:	gd->bd->bi_arch_number = MACH_TYPE_OMAP3517EVM;
board/logicpd/am3517evm/am3517evm.c:51:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/logicpd/zoom1/zoom1.c:70:	gd->bd->bi_arch_number = MACH_TYPE_OMAP_LDP;
board/logicpd/zoom1/zoom1.c:72:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/logicpd/omap3som/omap3logic.c:220:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/freescale/bsc9132qds/spl_minimal.c:81:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/bsc9132qds/spl_minimal.c:84:		     gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/bsc9132qds/bsc9132qds.c:201:	cpu = gd->arch.cpu;
board/freescale/mx53ard/mx53ard.c:30:	gd->ram_size = size1 + size2;
board/freescale/mx53ard/mx53ard.c:36:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/freescale/mx53ard/mx53ard.c:37:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/freescale/mx53ard/mx53ard.c:39:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/freescale/mx53ard/mx53ard.c:40:	gd->bd->bi_dram[1].size = PHYS_SDRAM_2_SIZE;
board/freescale/mx53ard/mx53ard.c:293:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/mpc8315erdb/sdram.c:31:	gd->flags &= ~GD_FLG_SILENT;
board/freescale/mpc8315erdb/sdram.c:109:	gd->ram_size = msize;
board/freescale/mpc8315erdb/mpc8315erdb.c:28:		gd->flags |= GD_FLG_SILENT;
board/freescale/mpc8315erdb/mpc8315erdb.c:236:	if (gd->flags & GD_FLG_SILENT)
board/freescale/mx7ulp_evk/mx7ulp_evk.c:18:	gd->ram_size = PHYS_SDRAM_SIZE;
board/freescale/mx7ulp_evk/mx7ulp_evk.c:44:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/m53017evb/m53017evb.c:70:	gd->ram_size = dramsize;
board/freescale/ls1088a/ls1088a.c:45:	if (gd->flags & GD_FLG_RELOC)
board/freescale/ls1088a/ls1088a.c:470:	gd->env_addr = (ulong)&default_environment[0];
board/freescale/ls1088a/ls1088a.c:490:	print_size(gd->bd->bi_dram[0].size + gd->bd->bi_dram[1].size, "");
board/freescale/ls1088a/ls1088a.c:562:		base[i] = gd->bd->bi_dram[i].start;
board/freescale/ls1088a/ls1088a.c:563:		size[i] = gd->bd->bi_dram[i].size;
board/freescale/ls1088a/ls1088a.c:568:	if (gd->arch.resv_ram >= base[0] &&
board/freescale/ls1088a/ls1088a.c:569:	    gd->arch.resv_ram < base[0] + size[0])
board/freescale/ls1088a/ls1088a.c:570:		size[0] = gd->arch.resv_ram - base[0];
board/freescale/ls1088a/ls1088a.c:571:	else if (gd->arch.resv_ram >= base[1] &&
board/freescale/ls1088a/ls1088a.c:572:		 gd->arch.resv_ram < base[1] + size[1])
board/freescale/ls1088a/ls1088a.c:573:		size[1] = gd->arch.resv_ram - base[1];
board/freescale/ls1088a/ddr.c:120:	gd->ram_size = fsl_ddr_sdram_size();
board/freescale/ls1088a/ddr.c:122:	gd->ram_size = fsl_ddr_sdram();
board/freescale/common/arm_sleep.c:46:	gd->flags |= GD_FLG_SILENT | GD_FLG_DISABLE_CONSOLE;
board/freescale/common/mpc85xx_sleep.c:35:	gd->flags |= GD_FLG_SILENT | GD_FLG_DISABLE_CONSOLE;
board/freescale/t4rdb/t4240rdb.c:28:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t4rdb/spl.c:75:	gd->bd = bd;
board/freescale/t4rdb/spl.c:83:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t4rdb/spl.c:89:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t4rdb/spl.c:90:	gd->env_valid = ENV_VALID;
board/freescale/t4rdb/ddr.c:122:	gd->ram_size = dram_size;
board/freescale/mpc8349itx/mpc8349itx.c:148:	gd->ram_size = msize * 1024 * 1024;
board/freescale/t208xqds/spl.c:102:	gd->bd = bd;
board/freescale/t208xqds/spl.c:110:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t208xqds/spl.c:126:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t208xqds/spl.c:127:	gd->env_valid = ENV_VALID;
board/freescale/t208xqds/ddr.c:120:	gd->ram_size = dram_size;
board/freescale/t208xqds/t208xqds.c:31:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/mx53evk/mx53evk.c:28:	/* dram_init must store complete ramsize in gd->ram_size */
board/freescale/mx53evk/mx53evk.c:29:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/freescale/mx53evk/mx53evk.c:238:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/m5208evbe/m5208evbe.c:70:	gd->ram_size = dramsize;
board/freescale/mx53loco/mx53loco.c:343:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/mx31pdk/mx31pdk.c:46:	/* dram_init must store complete ramsize in gd->ram_size */
board/freescale/mx31pdk/mx31pdk.c:47:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/freescale/mx31pdk/mx31pdk.c:76:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/mx28evk/mx28evk.c:67:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/m5373evb/m5373evb.c:64:	gd->ram_size = dramsize;
board/freescale/ls1021aiot/dcu.c:19:	div = (unsigned long long)(gd->bus_clk / 1000);
board/freescale/ls1021aiot/ls1021aiot.c:100:	gd->ram_size = DDR_SIZE;
board/freescale/mx51evk/mx51evk.c:36:	/* dram_init must store complete ramsize in gd->ram_size */
board/freescale/mx51evk/mx51evk.c:37:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/freescale/mx51evk/mx51evk.c:368:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/m5329evb/m5329evb.c:64:	gd->ram_size = dramsize;
board/freescale/t102xqds/spl.c:116:	gd->bd = bd;
board/freescale/t102xqds/spl.c:124:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t102xqds/spl.c:140:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t102xqds/spl.c:141:	gd->env_valid = ENV_VALID;
board/freescale/t102xqds/t102xqds.c:30:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t102xqds/ddr.c:65:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t102xqds/ddr.c:189:	gd->ram_size = dram_size;
board/freescale/p1010rdb/spl.c:42:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/p1010rdb/spl.c:45:		     gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/p1010rdb/spl.c:68:	gd->bd = bd;
board/freescale/p1010rdb/spl.c:76:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/p1010rdb/spl.c:89:			    gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/p1010rdb/spl.c:90:	gd->env_valid = ENV_VALID;
board/freescale/p1010rdb/p1010rdb.c:276:	cpu = gd->arch.cpu;
board/freescale/p1010rdb/p1010rdb.c:336:	cpu = gd->arch.cpu;
board/freescale/p1010rdb/p1010rdb.c:451:	cpu = gd->arch.cpu;
board/freescale/p1010rdb/ddr.c:85:	cpu = gd->arch.cpu;
board/freescale/p1010rdb/ddr.c:130:	cpu = gd->arch.cpu;
board/freescale/p1010rdb/ddr.c:223:	cpu = gd->arch.cpu;
board/freescale/p1010rdb/spl_minimal.c:31:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/p1010rdb/spl_minimal.c:34:			gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/m5253demo/m5253demo.c:77:	gd->ram_size = dramsize;
board/freescale/ls1046ardb/ddr.c:105:	gd->ram_size = fsl_ddr_sdram_size();
board/freescale/ls1046ardb/ddr.c:116:	gd->ram_size = dram_size;
board/freescale/ls1046ardb/ls1046ardb.c:166:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls1046ardb/ls1046ardb.c:167:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls1046ardb/ls1046ardb.c:168:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls1046ardb/ls1046ardb.c:169:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/mx6sllevk/mx6sllevk.c:31:	gd->ram_size = imx_ddr_size();
board/freescale/mx6sllevk/mx6sllevk.c:103:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/ls1043ardb/ddr.c:224:	gd->ram_size = 0x80000000;
board/freescale/ls1043ardb/ddr.c:235:	gd->ram_size = dram_size;
board/freescale/ls1043ardb/ls1043ardb.c:169:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls1043ardb/ls1043ardb.c:170:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls1043ardb/ls1043ardb.c:171:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls1043ardb/ls1043ardb.c:172:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/ls1021atwr/dcu.c:19:	div = (unsigned long long)(gd->bus_clk / 1000);
board/freescale/ls1021atwr/ls1021atwr.c:225:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/freescale/mpc837xemds/mpc837xemds.c:240:	gd->ram_size = msize * 1024 * 1024;
board/freescale/m5275evb/m5275evb.c:92:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
board/freescale/t1040qds/t1040qds.c:32:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t1040qds/ddr.c:136:	gd->ram_size = dram_size;
board/freescale/mpc8308rdb/sdram.c:79:	gd->ram_size = msize;
board/freescale/ls2080a/ls2080a.c:25:	gd->env_addr = (ulong)&default_environment[0];
board/freescale/ls2080a/ls2080a.c:40:	print_size(gd->bd->bi_dram[0].size + gd->bd->bi_dram[1].size, "");
board/freescale/ls2080a/ls2080a.c:43:	if (soc_has_dp_ddr() && gd->bd->bi_dram[2].size) {
board/freescale/ls2080a/ls2080a.c:45:		print_size(gd->bd->bi_dram[2].size, "");
board/freescale/ls2080a/ls2080a.c:100:	fsl_mc_ldpaa_exit(gd->bd);
board/freescale/ls2080a/ls2080a.c:113:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls2080a/ls2080a.c:114:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls2080a/ls2080a.c:115:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls2080a/ls2080a.c:116:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/ls2080a/ls2080a.c:120:	if (gd->arch.resv_ram >= base[0] &&
board/freescale/ls2080a/ls2080a.c:121:	    gd->arch.resv_ram < base[0] + size[0])
board/freescale/ls2080a/ls2080a.c:122:		size[0] = gd->arch.resv_ram - base[0];
board/freescale/ls2080a/ls2080a.c:123:	else if (gd->arch.resv_ram >= base[1] &&
board/freescale/ls2080a/ls2080a.c:124:		 gd->arch.resv_ram < base[1] + size[1])
board/freescale/ls2080a/ls2080a.c:125:		size[1] = gd->arch.resv_ram - base[1];
board/freescale/ls2080a/ddr.c:167:	gd->ram_size = fsl_ddr_sdram();
board/freescale/qemu-ppce500/qemu-ppce500.c:29:	return (uint64_t)(uintptr_t)gd->fdt_blob;
board/freescale/qemu-ppce500/qemu-ppce500.c:329:	gd->cpu_clk = sys_info.freq_processor[0];
board/freescale/qemu-ppce500/qemu-ppce500.c:330:	gd->bus_clk = sys_info.freq_systembus;
board/freescale/qemu-ppce500/qemu-ppce500.c:331:	gd->mem_clk = sys_info.freq_ddrbus;
board/freescale/qemu-ppce500/qemu-ppce500.c:332:	gd->arch.lbc_clk = sys_info.freq_ddrbus;
board/freescale/c29xpcie/spl.c:31:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/c29xpcie/spl.c:34:		     gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/c29xpcie/spl.c:52:	gd->bd = bd;
board/freescale/c29xpcie/spl.c:60:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/c29xpcie/spl.c:65:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/c29xpcie/spl.c:66:	gd->env_valid = ENV_VALID;
board/freescale/c29xpcie/spl_minimal.c:30:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/c29xpcie/spl_minimal.c:33:		     gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/c29xpcie/c29xpcie.c:29:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/c29xpcie/c29xpcie.c:136:	cpu = gd->arch.cpu;
board/freescale/ls2080ardb/eth_ls2080rdb.c:107:	gd->jt->strcpy = strcpy;
board/freescale/ls2080ardb/eth_ls2080rdb.c:108:	gd->jt->mdelay = mdelay;
board/freescale/ls2080ardb/eth_ls2080rdb.c:109:	gd->jt->mdio_get_current_dev = mdio_get_current_dev;
board/freescale/ls2080ardb/eth_ls2080rdb.c:110:	gd->jt->phy_find_by_mask = phy_find_by_mask;
board/freescale/ls2080ardb/eth_ls2080rdb.c:111:	gd->jt->mdio_phydev_for_ethname = mdio_phydev_for_ethname;
board/freescale/ls2080ardb/eth_ls2080rdb.c:112:	gd->jt->miiphy_set_current_dev = miiphy_set_current_dev;
board/freescale/ls2080ardb/ddr.c:166:	gd->ram_size = fsl_ddr_sdram_size();
board/freescale/ls2080ardb/ddr.c:170:	gd->ram_size = fsl_ddr_sdram();
board/freescale/ls2080ardb/ls2080ardb.c:46:	if (gd->flags & GD_FLG_RELOC)
board/freescale/ls2080ardb/ls2080ardb.c:213:	gd->env_addr = (ulong)&default_environment[0];
board/freescale/ls2080ardb/ls2080ardb.c:299:	print_size(gd->bd->bi_dram[0].size + gd->bd->bi_dram[1].size, "");
board/freescale/ls2080ardb/ls2080ardb.c:302:	if (soc_has_dp_ddr() && gd->bd->bi_dram[2].size) {
board/freescale/ls2080ardb/ls2080ardb.c:304:		print_size(gd->bd->bi_dram[2].size, "");
board/freescale/ls2080ardb/ls2080ardb.c:341:	fsl_mc_ldpaa_exit(gd->bd);
board/freescale/ls2080ardb/ls2080ardb.c:380:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls2080ardb/ls2080ardb.c:381:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls2080ardb/ls2080ardb.c:382:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls2080ardb/ls2080ardb.c:383:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/ls2080ardb/ls2080ardb.c:387:	if (gd->arch.resv_ram >= base[0] &&
board/freescale/ls2080ardb/ls2080ardb.c:388:	    gd->arch.resv_ram < base[0] + size[0])
board/freescale/ls2080ardb/ls2080ardb.c:389:		size[0] = gd->arch.resv_ram - base[0];
board/freescale/ls2080ardb/ls2080ardb.c:390:	else if (gd->arch.resv_ram >= base[1] &&
board/freescale/ls2080ardb/ls2080ardb.c:391:		 gd->arch.resv_ram < base[1] + size[1])
board/freescale/ls2080ardb/ls2080ardb.c:392:		size[1] = gd->arch.resv_ram - base[1];
board/freescale/t4qds/spl.c:111:	gd->bd = bd;
board/freescale/t4qds/spl.c:119:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t4qds/spl.c:131:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t4qds/spl.c:132:	gd->env_valid = ENV_VALID;
board/freescale/t4qds/t4240qds.c:43:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t4qds/ddr.c:129:	gd->ram_size = dram_size;
board/freescale/t4qds/t4240emu.c:23:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:106:	gd->ram_size = imx_ddr_size();
board/freescale/mx6ul_14x14_evk/mx6ul_14x14_evk.c:510:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/m54455evb/m54455evb.c:77:	gd->ram_size = dramsize << 1;
board/freescale/m54455evb/m54455evb.c:134:		period = 1000000000 / gd->bus_clk;	/* period in ns */
board/freescale/ls1021aqds/dcu.c:35:	div = (unsigned long long)(gd->bus_clk / 1000);
board/freescale/ls1021aqds/ddr.c:182:	gd->ram_size = dram_size;
board/freescale/ls1021aqds/ddr.c:189:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/freescale/ls1021aqds/ddr.c:190:	gd->bd->bi_dram[0].size = gd->ram_size;
board/freescale/mpc8323erdb/mpc8323erdb.c:87:	gd->ram_size = msize * 1024 * 1024;
board/freescale/mx23evk/mx23evk.c:51:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/m5249evb/m5249evb.c:86:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
board/freescale/t104xrdb/t104xrdb.c:28:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t104xrdb/spl.c:94:	gd->bd = bd;
board/freescale/t104xrdb/spl.c:102:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t104xrdb/spl.c:121:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t104xrdb/spl.c:122:	gd->env_valid = ENV_VALID;
board/freescale/t104xrdb/ddr.c:139:	gd->ram_size = dram_size;
board/freescale/mx25pdk/mx25pdk.c:86:	/* dram_init must store complete ramsize in gd->ram_size */
board/freescale/mx25pdk/mx25pdk.c:87:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/freescale/mx25pdk/mx25pdk.c:128:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/b4860qds/spl.c:86:	gd->bd = bd;
board/freescale/b4860qds/spl.c:94:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/b4860qds/spl.c:103:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/b4860qds/spl.c:104:	gd->env_valid = ENV_VALID;
board/freescale/b4860qds/b4860qds.c:39:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/b4860qds/ddr.c:191:	gd->ram_size = dram_size;
board/freescale/mx53smd/mx53smd.c:28:	gd->ram_size = size1 + size2;
board/freescale/mx53smd/mx53smd.c:34:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/freescale/mx53smd/mx53smd.c:35:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/freescale/mx53smd/mx53smd.c:37:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/freescale/mx53smd/mx53smd.c:38:	gd->bd->bi_dram[1].size = PHYS_SDRAM_2_SIZE;
board/freescale/mx53smd/mx53smd.c:147:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/m547xevb/m547xevb.c:81:	gd->ram_size = dramsize;
board/freescale/mx6sabresd/mx6sabresd.c:65:	gd->ram_size = imx_ddr_size();
board/freescale/mx6sabresd/mx6sabresd.c:352:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/freescale/mx6sabresd/mx6sabresd.c:358:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/freescale/mx6sabresd/mx6sabresd.c:364:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/freescale/mx6sabresd/mx6sabresd.c:632:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/p1_p2_rdb_pc/spl.c:48:	gd->bus_clk = bus_clk;
board/freescale/p1_p2_rdb_pc/spl.c:74:	gd->bd = bd;
board/freescale/p1_p2_rdb_pc/spl.c:82:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/p1_p2_rdb_pc/spl.c:94:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/p1_p2_rdb_pc/spl.c:95:	gd->env_valid = ENV_VALID;
board/freescale/p1_p2_rdb_pc/spl_minimal.c:30:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/p1_p2_rdb_pc/spl_minimal.c:33:			gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/mx7dsabresd/mx7dsabresd.c:67:	gd->ram_size = PHYS_SDRAM_SIZE;
board/freescale/mx7dsabresd/mx7dsabresd.c:297:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/ls2080aqds/ddr.c:161:	gd->ram_size = fsl_ddr_sdram_size();
board/freescale/ls2080aqds/ddr.c:165:	gd->ram_size = fsl_ddr_sdram();
board/freescale/ls2080aqds/ls2080aqds.c:45:	if (gd->flags & GD_FLG_RELOC)
board/freescale/ls2080aqds/ls2080aqds.c:224:	gd->env_addr = (ulong)&default_environment[0];
board/freescale/ls2080aqds/ls2080aqds.c:263:	print_size(gd->bd->bi_dram[0].size + gd->bd->bi_dram[1].size, "");
board/freescale/ls2080aqds/ls2080aqds.c:266:	if (soc_has_dp_ddr() && gd->bd->bi_dram[2].size) {
board/freescale/ls2080aqds/ls2080aqds.c:268:		print_size(gd->bd->bi_dram[2].size, "");
board/freescale/ls2080aqds/ls2080aqds.c:305:	fsl_mc_ldpaa_exit(gd->bd);
board/freescale/ls2080aqds/ls2080aqds.c:318:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls2080aqds/ls2080aqds.c:319:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls2080aqds/ls2080aqds.c:320:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls2080aqds/ls2080aqds.c:321:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/ls2080aqds/ls2080aqds.c:325:	if (gd->arch.resv_ram >= base[0] &&
board/freescale/ls2080aqds/ls2080aqds.c:326:	    gd->arch.resv_ram < base[0] + size[0])
board/freescale/ls2080aqds/ls2080aqds.c:327:		size[0] = gd->arch.resv_ram - base[0];
board/freescale/ls2080aqds/ls2080aqds.c:328:	else if (gd->arch.resv_ram >= base[1] &&
board/freescale/ls2080aqds/ls2080aqds.c:329:		 gd->arch.resv_ram < base[1] + size[1])
board/freescale/ls2080aqds/ls2080aqds.c:330:		size[1] = gd->arch.resv_ram - base[1];
board/freescale/m548xevb/m548xevb.c:81:	gd->ram_size = dramsize;
board/freescale/mx6sxsabresd/mx6sxsabresd.c:57:	gd->ram_size = imx_ddr_size();
board/freescale/mx6sxsabresd/mx6sxsabresd.c:276:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/mx6sxsabresd/mx6sxsabresd.c:415:	gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/freescale/mpc8610hpcd/mpc8610hpcd.c:133:	gd->ram_size = dram_size;
board/freescale/mpc837xerdb/mpc837xerdb.c:83:	gd->ram_size = msize * 1024 * 1024;
board/freescale/m54451evb/m54451evb.c:84:	gd->ram_size = dramsize;
board/freescale/p1022ds/spl.c:82:	gd->bd = bd;
board/freescale/p1022ds/spl.c:90:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/p1022ds/spl.c:102:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/p1022ds/spl.c:103:	gd->env_valid = ENV_VALID;
board/freescale/m5272c3/m5272c3.c:31:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
board/freescale/ls1046aqds/ls1046aqds.c:130:	return gd->bus_clk;
board/freescale/ls1046aqds/ls1046aqds.c:300:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls1046aqds/ls1046aqds.c:301:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls1046aqds/ls1046aqds.c:302:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls1046aqds/ls1046aqds.c:303:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/ls1046aqds/ddr.c:100:	gd->ram_size = fsl_ddr_sdram_size();
board/freescale/ls1046aqds/ddr.c:115:	gd->ram_size = dram_size;
board/freescale/m54418twr/m54418twr.c:106:	gd->ram_size = dramsize;
board/freescale/p1023rdb/p1023rdb.c:91:	return gd->bus_clk;
board/freescale/p1023rdb/p1023rdb.c:96:	return gd->mem_clk;
board/freescale/mx35pdk/mx35pdk.c:45:	gd->ram_size = size1 + size2;
board/freescale/mx35pdk/mx35pdk.c:52:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/freescale/mx35pdk/mx35pdk.c:53:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/freescale/mx35pdk/mx35pdk.c:55:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/freescale/mx35pdk/mx35pdk.c:56:	gd->bd->bi_dram[1].size = PHYS_SDRAM_2_SIZE;
board/freescale/mx35pdk/mx35pdk.c:180:	gd->bd->bi_arch_number = MACH_TYPE_MX35_3DS;	/* board id for linux */
board/freescale/mx35pdk/mx35pdk.c:182:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/freescale/p2041rdb/p2041rdb.c:28:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/p2041rdb/ddr.c:138:	gd->ram_size = dram_size;
board/freescale/mx6sabreauto/mx6sabreauto.c:67:	gd->ram_size = imx_ddr_size();
board/freescale/mx6sabreauto/mx6sabreauto.c:589:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/m5235evb/m5235evb.c:53:		dramclk = gd->bus_clk / (CONFIG_SYS_HZ * CONFIG_SYS_HZ);
board/freescale/m5235evb/m5235evb.c:99:	gd->ram_size = dramsize;
board/freescale/ls1043aqds/ls1043aqds.c:344:	base[0] = gd->bd->bi_dram[0].start;
board/freescale/ls1043aqds/ls1043aqds.c:345:	size[0] = gd->bd->bi_dram[0].size;
board/freescale/ls1043aqds/ls1043aqds.c:346:	base[1] = gd->bd->bi_dram[1].start;
board/freescale/ls1043aqds/ls1043aqds.c:347:	size[1] = gd->bd->bi_dram[1].size;
board/freescale/ls1043aqds/ddr.c:116:	gd->ram_size = fsl_ddr_sdram_size();
board/freescale/ls1043aqds/ddr.c:130:	gd->ram_size = dram_size;
board/freescale/mpc8641hpcn/mpc8641hpcn.c:54:	gd->ram_size = dram_size;
board/freescale/mx6ullevk/mx6ullevk.c:29:	gd->ram_size = imx_ddr_size();
board/freescale/mx6ullevk/mx6ullevk.c:64:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/vf610twr/vf610twr.c:141:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/freescale/vf610twr/vf610twr.c:367:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/corenet_ds/ddr.c:280:	gd->ram_size = dram_size;
board/freescale/corenet_ds/corenet_ds.c:27:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/mx6slevk/mx6slevk.c:56:	gd->ram_size = imx_ddr_size();
board/freescale/mx6slevk/mx6slevk.c:233:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/mx6slevk/mx6slevk.c:327:	gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/freescale/s32v234evb/s32v234evb.c:43:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/freescale/s32v234evb/s32v234evb.c:172:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/t102xrdb/spl.c:103:	gd->bd = bd;
board/freescale/t102xrdb/spl.c:111:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t102xrdb/spl.c:127:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t102xrdb/spl.c:128:	gd->env_valid = ENV_VALID;
board/freescale/t102xrdb/ddr.c:55:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/t102xrdb/ddr.c:251:	gd->ram_size = dram_size;
board/freescale/t102xrdb/t102xrdb.c:44:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/ls1012aqds/ls1012aqds.c:78:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/freescale/ls1012aqds/ls1012aqds.c:121:	gd->env_addr = (ulong)&default_environment[0];
board/freescale/mpc8349emds/mpc8349emds.c:78:	gd->ram_size = msize;
board/freescale/m52277evb/m52277evb.c:80:	gd->ram_size = dramsize;
board/freescale/t208xrdb/spl.c:72:	gd->bd = bd;
board/freescale/t208xrdb/spl.c:80:	gd->flags |= GD_FLG_FULL_MALLOC_INIT;
board/freescale/t208xrdb/spl.c:96:	gd->env_addr  = (ulong)(CONFIG_ENV_ADDR);
board/freescale/t208xrdb/spl.c:97:	gd->env_valid = ENV_VALID;
board/freescale/t208xrdb/ddr.c:113:	gd->ram_size = dram_size;
board/freescale/t208xrdb/t208xrdb.c:26:	struct cpu_type *cpu = gd->arch.cpu;
board/freescale/bsc9131rdb/spl_minimal.c:69:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/freescale/bsc9131rdb/spl_minimal.c:72:		     gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/freescale/bsc9131rdb/bsc9131rdb.c:48:	cpu = gd->arch.cpu;
board/freescale/mx6memcal/mx6memcal.c:28:	gd->ram_size = imx_ddr_size();
board/freescale/mx6qarm2/mx6qarm2.c:37:	gd->ram_size = ((phys_size_t)CONFIG_DDR_MB * 1024 * 1024) / 2;
board/freescale/mx6qarm2/mx6qarm2.c:39:	gd->ram_size = (phys_size_t)CONFIG_DDR_MB * 1024 * 1024;
board/freescale/mx6qarm2/mx6qarm2.c:269:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/mpc832xemds/mpc832xemds.c:106:	gd->ram_size = msize * 1024 * 1024;
board/freescale/mpc8313erdb/sdram.c:32:	gd->flags &= ~GD_FLG_SILENT;
board/freescale/mpc8313erdb/sdram.c:122:	gd->ram_size = msize;
board/freescale/mpc8313erdb/mpc8313erdb.c:29:		gd->flags |= GD_FLG_SILENT;
board/freescale/mpc8313erdb/mpc8313erdb.c:148:	if (gd->flags & GD_FLG_SILENT)
board/freescale/ls1012afrdm/ls1012afrdm.c:109:		gd->ram_size = SYS_SDRAM_SIZE_1024;
board/freescale/ls1012afrdm/ls1012afrdm.c:111:		gd->ram_size = SYS_SDRAM_SIZE_512;
board/freescale/ls1012afrdm/ls1012afrdm.c:114:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/freescale/ls1012afrdm/ls1012afrdm.c:145:	gd->env_addr = (ulong)&default_environment[0];
board/freescale/mx6sxsabreauto/mx6sxsabreauto.c:53:	gd->ram_size = imx_ddr_size();
board/freescale/mx6sxsabreauto/mx6sxsabreauto.c:271:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/freescale/m5282evb/m5282evb.c:31:		dramclk = gd->bus_clk / (CONFIG_SYS_HZ * CONFIG_SYS_HZ);
board/freescale/m5282evb/m5282evb.c:82:	gd->ram_size = dramsize;
board/freescale/ls1012ardb/ls1012ardb.c:110:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/freescale/ls1012ardb/ls1012ardb.c:142:	gd->env_addr = (ulong)&default_environment[0];
board/BuS/eb_cpu5282/eb_cpu5282.c:94:	gd->ram_size = size;
board/cloudengines/pogo_e02/pogo_e02.c:66:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/cavium/thunderx/thunderx.c:89:	gd->ram_size = 0;
board/cavium/thunderx/thunderx.c:94:		gd->ram_size += dram_size;
board/cavium/thunderx/thunderx.c:97:	gd->ram_size -= MEM_BASE;
board/h2200/h2200.c:38:	gd->bd->bi_arch_number = MACH_TYPE_H2200;
board/h2200/h2200.c:41:	gd->bd->bi_boot_params = 0xa0000100;
board/h2200/h2200.c:59:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/lg/sniper/sniper.c:83:	gd->bd->bi_arch_number = 3000;
board/lg/sniper/sniper.c:86:	gd->bd->bi_boot_params = OMAP34XX_SDRC_CS0 + 0x100;
board/bluegiga/apx4devkit/apx4devkit.c:53:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/sysam/amcore/amcore.c:103:	gd->ram_size = get_ram_size(CONFIG_SYS_SDRAM_BASE,
board/sysam/stmark2/stmark2.c:38:	gd->ram_size = dramsize;
board/d-link/dns325/dns325.c:94:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/warp/warp.c:48:	gd->ram_size = imx_ddr_size();
board/warp/warp.c:147:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/synopsys/axs10x/axs10x.c:48:		gd->board_type = AXS_MB_V3;
board/synopsys/axs10x/axs10x.c:50:		gd->board_type = AXS_MB_V2;
board/synopsys/axs10x/nand.c:238:	if (gd->board_type == AXS_MB_V3)
board/synopsys/iot_devkit/iot_devkit.c:114:	gd->flags |= GD_FLG_SKIP_RELOC;
board/synopsys/iot_devkit/iot_devkit.c:128:	offset = fdt_path_offset(gd->fdt_blob, "/cpu_card/core_clk");
board/synopsys/iot_devkit/iot_devkit.c:132:	gd->cpu_clk = fdtdec_get_int(gd->fdt_blob, offset, "clock-frequency", 0);
board/synopsys/iot_devkit/iot_devkit.c:133:	if (!gd->cpu_clk)
board/synopsys/iot_devkit/iot_devkit.c:137:	if (gd->cpu_clk > 100000000) {
board/synopsys/iot_devkit/iot_devkit.c:145:	return set_cpu_freq(gd->cpu_clk);
board/synopsys/iot_devkit/iot_devkit.c:198:	printf("CPU:   ARC EM9D at %s MHz\n", strmhz(mhz, gd->cpu_clk));
board/synopsys/hsdk/hsdk.c:1006:	printf("Relocation Offset is: %08lx\n", gd->reloc_off);
board/embest/mx6boards/mx6boards.c:75:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/embest/mx6boards/mx6boards.c:560:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/ccv/xpress/xpress.c:102:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/ccv/xpress/xpress.c:304:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/atmark-techno/armadillo-800eva/armadillo-800eva.c:275:	gd->bd->bi_arch_number = MACH_TYPE_ARMADILLO800EVA;
board/atmark-techno/armadillo-800eva/armadillo-800eva.c:277:	gd->bd->bi_boot_params = ARMADILLO_800EVA_SDRAM_BASE + 0x100;
board/atmark-techno/armadillo-800eva/armadillo-800eva.c:311:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/atmark-techno/armadillo-800eva/armadillo-800eva.c:312:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/micronas/vct/vct.c:65:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/dhelectronics/dh_imx6/dh_imx6.c:123:	gd->ram_size = imx_ddr_size();
board/dhelectronics/dh_imx6/dh_imx6.c:337:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/gateworks/gw_ventana/gw_ventana.c:613:	gd->ram_size = imx_ddr_size();
board/gateworks/gw_ventana/gw_ventana.c:626:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/gateworks/gw_ventana/gw_ventana.c:786:		sprintf(str, "%d", (int) (gd->ram_size >> 20));
board/udoo/udoo.c:44:	gd->ram_size = imx_ddr_size();
board/udoo/udoo.c:244:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/udoo/neo/neo.c:77:	gd->ram_size = imx_ddr_size();
board/udoo/neo/neo.c:333:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/udoo/neo/neo.c:411:	gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/astro/mcf5373l/mcf5373l.c:81:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/astro/mcf5373l/mcf5373l.c:125:	counter = (u32) (gd->bus_clk / (baud));
board/imgtec/boston/dt.c:16:	mem_size[0] = min_t(u64, 256llu << 20, gd->ram_size);
board/imgtec/boston/dt.c:19:	if (gd->ram_size > mem_size[0]) {
board/imgtec/boston/dt.c:21:		mem_size[1] = gd->ram_size - mem_size[0];
board/imgtec/boston/ddr.c:18:	gd->ram_size = (phys_size_t)(ddrconf0 & BOSTON_PLAT_DDRCONF0_SIZE) <<
board/imgtec/boston/ddr.c:28:	if (gd->ram_top < CONFIG_SYS_SDRAM_BASE) {
board/imgtec/boston/ddr.c:33:	return min_t(unsigned long, gd->ram_top, CKSEG0ADDR(256 << 20));
board/imgtec/xilfpga/xilfpga.c:20:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;	/* in bytes */
board/imgtec/malta/malta.c:89:	gd->ram_size = CONFIG_SYS_MEM_SIZE;
board/congatec/cgtqmx6eval/cgtqmx6eval.c:64:	gd->ram_size = imx_ddr_size();
board/congatec/cgtqmx6eval/cgtqmx6eval.c:470:	gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/congatec/cgtqmx6eval/cgtqmx6eval.c:695:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/liebherr/display5/display5.c:117:	gd->ram_size = imx_ddr_size();
board/liebherr/display5/display5.c:350:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/liebherr/display5/spl.c:216:	gd->arch.sdhc_clk = usdhc_cfg.sdhc_clk;
board/liebherr/mccmon6/mccmon6.c:61:	gd->ram_size = imx_ddr_size();
board/liebherr/mccmon6/mccmon6.c:354:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/advantech/dms-ba16/dms-ba16.c:63:	gd->ram_size = imx_ddr_size();
board/advantech/dms-ba16/dms-ba16.c:518:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/samsung/common/misc.c:239:	lcd_printf("\tDRAM size: %u MB\n", gd->ram_size / SZ_1M);
board/samsung/common/board.c:80:	gd->bd->bi_boot_params = (PHYS_SDRAM_1 + 0x100UL);
board/samsung/common/board.c:82:	if (tmu_init(gd->fdt_blob) != TMU_STATUS_NORMAL) {
board/samsung/common/board.c:92:	gd->ram_size -= size;
board/samsung/common/board.c:93:	gd->bd->bi_dram[CONFIG_NR_DRAM_BANKS - 1].size -= size;
board/samsung/common/board.c:105:		gd->ram_size += get_ram_size((long *)addr, SDRAM_BANK_SIZE);
board/samsung/common/board.c:119:		gd->bd->bi_dram[i].start = addr;
board/samsung/common/board.c:120:		gd->bd->bi_dram[i].size = size;
board/samsung/common/board.c:159:	board_i2c_init(gd->fdt_blob);
board/samsung/common/board.c:209:	node = decode_sromc(gd->fdt_blob, &config);
board/samsung/common/board.c:214:	node = fdtdec_next_compatible(gd->fdt_blob, node, COMPAT_SMSC_LAN9215);
board/samsung/common/board.c:221:	base_addr = fdtdec_get_addr(gd->fdt_blob, node, "reg");
board/samsung/common/board.c:256:	return exynos_mmc_init(gd->fdt_blob);
board/samsung/common/board.c:265:	return exynos_dwmmc_init(gd->fdt_blob);
board/samsung/common/board.c:295:	board_info = fdt_getprop(gd->fdt_blob, 0, "model", NULL);
board/samsung/common/board.c:313:		gd->flags &= ~GD_FLG_SILENT;
board/samsung/common/board.c:348:	node = fdt_node_offset_by_compatible(gd->fdt_blob, 0,
board/samsung/common/exynos5-dt.c:42:	node = fdtdec_next_compatible(gd->fdt_blob, 0,
board/samsung/common/exynos5-dt-types.c:51:		if (odroid_info[i].board_type == gd->board_type)
board/samsung/common/exynos5-dt-types.c:91:	if (gd->board_type != EXYNOS5_BOARD_ODROID_XU3_REV02)
board/samsung/common/exynos5-dt-types.c:115:		if (odroid_info[i].board_type == gd->board_type)
board/samsung/common/exynos5-dt-types.c:124:	if (gd->board_type >= EXYNOS5_BOARD_ODROID_XU3 &&
board/samsung/common/exynos5-dt-types.c:125:	    gd->board_type <= EXYNOS5_BOARD_ODROID_XU3_REV02)
board/samsung/common/exynos5-dt-types.c:133:	if (gd->board_type == EXYNOS5_BOARD_ODROID_XU4_REV01)
board/samsung/common/exynos5-dt-types.c:141:	if (gd->board_type == EXYNOS5_BOARD_ODROID_HC1_REV01)
board/samsung/common/exynos5-dt-types.c:149:	if (gd->board_type == EXYNOS5_BOARD_GENERIC)
board/samsung/common/exynos5-dt-types.c:184: * set_board_type() - set board type in gd->board_type.
board/samsung/common/exynos5-dt-types.c:193:	gd->board_type = EXYNOS5_BOARD_GENERIC;
board/samsung/common/exynos5-dt-types.c:196:		ret = fdt_node_check_compatible(gd->fdt_blob, 0,
board/samsung/common/exynos5-dt-types.c:201:		gd->board_type = of_match->data;
board/samsung/common/exynos5-dt-types.c:207:		gd->board_type = odroid_get_board_type();
board/samsung/odroid/odroid.c:52:		gd->board_type = ODROID_TYPE_X2;
board/samsung/odroid/odroid.c:54:		gd->board_type = ODROID_TYPE_U3;
board/samsung/odroid/odroid.c:61:	return board_type[gd->board_type];
board/samsung/odroid/odroid.c:473:	if (gd->board_type == ODROID_TYPE_U3)
board/samsung/goni/goni.c:31:	gd->bd->bi_arch_number = MACH_TYPE_GONI;
board/samsung/goni/goni.c:32:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/samsung/goni/goni.c:49:	gd->ram_size = PHYS_SDRAM_1_SIZE + PHYS_SDRAM_2_SIZE +
board/samsung/goni/goni.c:57:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/samsung/goni/goni.c:58:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/samsung/goni/goni.c:59:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/samsung/goni/goni.c:60:	gd->bd->bi_dram[1].size = PHYS_SDRAM_2_SIZE;
board/samsung/goni/goni.c:61:	gd->bd->bi_dram[2].start = PHYS_SDRAM_3;
board/samsung/goni/goni.c:62:	gd->bd->bi_dram[2].size = PHYS_SDRAM_3_SIZE;
board/samsung/smdkc100/smdkc100.c:41:	gd->bd->bi_arch_number = MACH_TYPE_SMDKC100;
board/samsung/smdkc100/smdkc100.c:42:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/samsung/smdkc100/smdkc100.c:49:	gd->ram_size = get_ram_size((long *)PHYS_SDRAM_1, PHYS_SDRAM_1_SIZE);
board/samsung/smdkc100/smdkc100.c:56:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/samsung/smdkc100/smdkc100.c:57:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/samsung/universal_c210/universal.c:358:	gd->bd->bi_arch_number = MACH_TYPE_UNIVERSAL_C210;
board/samsung/arndale/arndale.c:35:	gd->bd->bi_boot_params = (PHYS_SDRAM_1 + 0x100UL);
board/samsung/arndale/arndale.c:46:		gd->ram_size += get_ram_size((long *)addr, SDRAM_BANK_SIZE);
board/samsung/arndale/arndale.c:66:		gd->bd->bi_dram[i].start = addr;
board/samsung/arndale/arndale.c:67:		gd->bd->bi_dram[i].size = size;
board/samsung/arndale/arndale.c:78:	ret = exynos_dwmmc_init(gd->fdt_blob);
board/samsung/smdkv310/smdkv310.c:40:	gd->bd->bi_boot_params = (PHYS_SDRAM_1 + 0x100UL);
board/samsung/smdkv310/smdkv310.c:46:	gd->ram_size	= get_ram_size((long *)PHYS_SDRAM_1, PHYS_SDRAM_1_SIZE)
board/samsung/smdkv310/smdkv310.c:56:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/samsung/smdkv310/smdkv310.c:57:	gd->bd->bi_dram[0].size = get_ram_size((long *)PHYS_SDRAM_1,
board/samsung/smdkv310/smdkv310.c:59:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/samsung/smdkv310/smdkv310.c:60:	gd->bd->bi_dram[1].size = get_ram_size((long *)PHYS_SDRAM_2,
board/samsung/smdkv310/smdkv310.c:62:	gd->bd->bi_dram[2].start = PHYS_SDRAM_3;
board/samsung/smdkv310/smdkv310.c:63:	gd->bd->bi_dram[2].size = get_ram_size((long *)PHYS_SDRAM_3,
board/samsung/smdkv310/smdkv310.c:65:	gd->bd->bi_dram[3].start = PHYS_SDRAM_4;
board/samsung/smdkv310/smdkv310.c:66:	gd->bd->bi_dram[3].size = get_ram_size((long *)PHYS_SDRAM_4,
board/cobra5272/cobra5272.c:29:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE * 1024 * 1024;
board/armadeus/apf27/apf27.c:171:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/armadeus/apf27/apf27.c:187:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM_1, PHYS_SDRAM_1_SIZE);
board/armadeus/apf27/apf27.c:189:		gd->ram_size += get_ram_size((void *)PHYS_SDRAM_2,
board/armadeus/apf27/apf27.c:197:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/armadeus/apf27/apf27.c:198:	gd->bd->bi_dram[0].size  = get_ram_size((void *)PHYS_SDRAM_1,
board/armadeus/apf27/apf27.c:200:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/armadeus/apf27/apf27.c:202:		gd->bd->bi_dram[1].size = get_ram_size((void *)PHYS_SDRAM_2,
board/armadeus/apf27/apf27.c:205:		gd->bd->bi_dram[1].size = 0;
board/atmel/at91sam9x5ek/at91sam9x5ek.c:112:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9X5EK;
board/atmel/at91sam9x5ek/at91sam9x5ek.c:115:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9x5ek/at91sam9x5ek.c:129:	gd->ram_size = get_ram_size((void *) CONFIG_SYS_SDRAM_BASE,
board/atmel/common/video_display.c:41:		dram_size += gd->bd->bi_dram[i].size;
board/atmel/at91sam9m10g45ek/at91sam9m10g45ek.c:213:	gd->fb_base = CONFIG_AT91SAM9G45_LCD_BASE;
board/atmel/at91sam9m10g45ek/at91sam9m10g45ek.c:235:		dram_size += gd->bd->bi_dram[i].size;
board/atmel/at91sam9m10g45ek/at91sam9m10g45ek.c:267:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9M10G45EK;
board/atmel/at91sam9m10g45ek/at91sam9m10g45ek.c:269:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9G45EKES;
board/atmel/at91sam9m10g45ek/at91sam9m10g45ek.c:273:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9m10g45ek/at91sam9m10g45ek.c:289:	gd->ram_size = get_ram_size((void *) CONFIG_SYS_SDRAM_BASE,
board/atmel/sama5d3xek/sama5d3xek.c:152:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d3xek/sama5d3xek.c:171:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/sama5d27_som1_ek/sama5d27_som1_ek.c:67:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d27_som1_ek/sama5d27_som1_ek.c:78:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/sama5d2_ptc_ek/sama5d2_ptc_ek.c:111:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d2_ptc_ek/sama5d2_ptc_ek.c:124:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/at91sam9261ek/at91sam9261ek.c:190:	gd->fb_base = ATMEL_BASE_SRAM;
board/atmel/at91sam9261ek/at91sam9261ek.c:213:		dram_size += gd->bd->bi_dram[i].size;
board/atmel/at91sam9261ek/at91sam9261ek.c:245:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9G10EK;
board/atmel/at91sam9261ek/at91sam9261ek.c:248:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9261EK;
board/atmel/at91sam9261ek/at91sam9261ek.c:251:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9261ek/at91sam9261ek.c:274:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/sama5d3_xplained/sama5d3_xplained.c:98:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d3_xplained/sama5d3_xplained.c:114:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/at91sam9263ek/at91sam9263ek.c:130:	gd->fb_base = ATMEL_BASE_SRAM0;
board/atmel/at91sam9263ek/at91sam9263ek.c:159:		dram_size += gd->bd->bi_dram[i].size;
board/atmel/at91sam9263ek/at91sam9263ek.c:200:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9263EK;
board/atmel/at91sam9263ek/at91sam9263ek.c:202:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9263ek/at91sam9263ek.c:218:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/at91sam9n12ek/at91sam9n12ek.c:123:		dram_size += gd->bd->bi_dram[i].size;
board/atmel/at91sam9n12ek/at91sam9n12ek.c:185:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9n12ek/at91sam9n12ek.c:215:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/at91sam9rlek/at91sam9rlek.c:148:		dram_size += gd->bd->bi_dram[i].size;
board/atmel/at91sam9rlek/at91sam9rlek.c:179:	gd->bd->bi_arch_number = MACH_TYPE_AT91SAM9RLEK;
board/atmel/at91sam9rlek/at91sam9rlek.c:181:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9rlek/at91sam9rlek.c:194:	gd->ram_size = get_ram_size(
board/atmel/at91sam9260ek/at91sam9260ek.c:84:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91sam9260ek/at91sam9260ek.c:94:	gd->ram_size = get_ram_size(
board/atmel/sama5d2_xplained/sama5d2_xplained.c:67:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d2_xplained/sama5d2_xplained.c:78:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/at91rm9200ek/at91rm9200ek.c:34:	gd->bd->bi_arch_number = MACH_TYPE_AT91RM9200EK;
board/atmel/at91rm9200ek/at91rm9200ek.c:36:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/at91rm9200ek/at91rm9200ek.c:49:	/* dram_init must store complete ramsize in gd->ram_size */
board/atmel/at91rm9200ek/at91rm9200ek.c:50:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/atmel/sama5d4ek/sama5d4ek.c:111:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d4ek/sama5d4ek.c:125:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/atmel/sama5d4_xplained/sama5d4_xplained.c:125:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/atmel/sama5d4_xplained/sama5d4_xplained.c:139:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/hisilicon/poplar/poplar.c:63:	gd->ram_size = get_ram_size(NULL, 0x80000000);
board/hisilicon/poplar/poplar.c:84:	gd->bd->bi_dram[0].start = KERNEL_TEXT_OFFSET;
board/hisilicon/poplar/poplar.c:85:	gd->bd->bi_dram[0].size = gd->ram_size - gd->bd->bi_dram[0].start;
board/hisilicon/hikey/hikey.c:443:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/hisilicon/hikey/hikey.c:462:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/hisilicon/hikey/hikey.c:463:	gd->bd->bi_dram[0].size = 0x05e00000;
board/hisilicon/hikey/hikey.c:465:	gd->bd->bi_dram[1].start = 0x05f00000;
board/hisilicon/hikey/hikey.c:466:	gd->bd->bi_dram[1].size = 0x00001000;
board/hisilicon/hikey/hikey.c:468:	gd->bd->bi_dram[2].start = 0x05f02000;
board/hisilicon/hikey/hikey.c:469:	gd->bd->bi_dram[2].size = 0x00efd000;
board/hisilicon/hikey/hikey.c:471:	gd->bd->bi_dram[3].start = 0x06e00000;
board/hisilicon/hikey/hikey.c:472:	gd->bd->bi_dram[3].size = 0x0060f000;
board/hisilicon/hikey/hikey.c:474:	gd->bd->bi_dram[4].start = 0x07410000;
board/hisilicon/hikey/hikey.c:475:	gd->bd->bi_dram[4].size = 0x1aaf0000;
board/hisilicon/hikey/hikey.c:477:	gd->bd->bi_dram[5].start = 0x22000000;
board/hisilicon/hikey/hikey.c:478:	gd->bd->bi_dram[5].size = 0x1c000000;
board/tcl/sl50/board.c:237:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/tbs/tbs2910/tbs2910.c:132:	gd->ram_size = 2048ul * 1024 * 1024;
board/tbs/tbs2910/tbs2910.c:427:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/timll/devkit8000/devkit8000.c:68:	gd->bd->bi_arch_number = MACH_TYPE_DEVKIT8000;
board/timll/devkit8000/devkit8000.c:70:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/timll/devkit3250/devkit3250.c:56:	gd->bd->bi_boot_params  = CONFIG_SYS_SDRAM_BASE + 0x100;
board/timll/devkit3250/devkit3250.c:76:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/rockchip/evb_rv1108/evb_rv1108.c:37:	node = fdt_node_offset_by_compatible(gd->fdt_blob, -1, "rockchip,rv1108-grf");
board/rockchip/evb_rv1108/evb_rv1108.c:38:	grf = (struct rv1108_grf *)fdtdec_get_addr(gd->fdt_blob, node, "reg");
board/rockchip/evb_rv1108/evb_rv1108.c:58:	gd->ram_size = 0x8000000;
board/rockchip/evb_rv1108/evb_rv1108.c:65:	gd->bd->bi_dram[0].start = 0x60000000;
board/rockchip/evb_rv1108/evb_rv1108.c:66:	gd->bd->bi_dram[0].size = 0x8000000;
board/rockchip/evb_rk3328/evb-rk3328.c:40:	const void *blob = gd->fdt_blob;
board/laird/wb50n/wb50n.c:72:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/laird/wb50n/wb50n.c:83:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/laird/wb45n/wb45n.c:98:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/laird/wb45n/wb45n.c:111:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/Marvell/aspenite/aspenite.c:39:	gd->bd->bi_arch_number = MACH_TYPE_ASPENITE;
board/Marvell/aspenite/aspenite.c:41:	gd->bd->bi_boot_params = armd1_sdram_base(0) + 0x100;
board/Marvell/db-88f6820-gp/db-88f6820-gp.c:139:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/mvebu_armada-8k/board.c:150:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/Marvell/openrd/openrd.c:99:	gd->bd->bi_arch_number = MACH_TYPE_OPENRD_BASE;
board/Marvell/openrd/openrd.c:101:	gd->bd->bi_arch_number = MACH_TYPE_OPENRD_CLIENT;
board/Marvell/openrd/openrd.c:103:	gd->bd->bi_arch_number = MACH_TYPE_OPENRD_ULTIMATE;
board/Marvell/openrd/openrd.c:107:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/dreamplug/dreamplug.c:92:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/db-88f6720/db-88f6720.c:74:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/db-mv784mp-gp/db-mv784mp-gp.c:71:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/guruplug/guruplug.c:92:	gd->bd->bi_arch_number = MACH_TYPE_GURUPLUG;
board/Marvell/guruplug/guruplug.c:95:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/mvebu_armada-37xx/board.c:58:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/Marvell/sheevaplug/sheevaplug.c:92:	gd->bd->bi_arch_number = MACH_TYPE_SHEEVAPLUG;
board/Marvell/sheevaplug/sheevaplug.c:95:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/db-88f6820-amc/db-88f6820-amc.c:116:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Marvell/gplugd/gplugd.c:79:	gd->bd->bi_arch_number = MACH_TYPE_GPLUGD;
board/Marvell/gplugd/gplugd.c:81:	gd->bd->bi_boot_params = armd1_sdram_base(0) + 0x100;
board/Seagate/nas220/nas220.c:78:	gd->bd->bi_arch_number = MACH_TYPE_RD88F6192_NAS;
board/Seagate/nas220/nas220.c:81:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Seagate/goflexhome/goflexhome.c:98:	gd->bd->bi_arch_number = MACH_TYPE_GOFLEXHOME;
board/Seagate/goflexhome/goflexhome.c:101:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Seagate/dockstar/dockstar.c:96:	gd->bd->bi_arch_number = MACH_TYPE_DOCKSTAR;
board/Seagate/dockstar/dockstar.c:99:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/sks-kinkel/sksimx6/sksimx6.c:180:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/sks-kinkel/sksimx6/sksimx6.c:191:	gd->ram_size = imx_ddr_size();
board/cadence/xtfpga/xtfpga.c:52:	gd->bd->bi_memstart = PHYSADDR(CONFIG_SYS_SDRAM_BASE);
board/cadence/xtfpga/xtfpga.c:53:	gd->bd->bi_memsize = CONFIG_SYS_SDRAM_SIZE;
board/cadence/xtfpga/xtfpga.c:67:	gd->cpu_clk = (*(volatile unsigned long *)CONFIG_SYS_FPGAREG_FREQ);
board/cadence/xtfpga/xtfpga.c:70:	gd->cpu_clk = 50000000UL;
board/kmc/kzm9g/kzm9g.c:345:	gd->bd->bi_boot_params = (CONFIG_SYS_SDRAM_BASE + 0x100);
board/kmc/kzm9g/kzm9g.c:352:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/nokia/rx51/rx51.c:165:	struct tag *t = (struct tag *)gd->bd->bi_boot_params;
board/nokia/rx51/rx51.c:200:	gd->bd->bi_boot_params = OMAP34XX_SDRC_CS0 + 0x100;
board/nokia/rx51/rx51.c:229:	params = (struct tag *)gd->bd->bi_boot_params;
board/quipos/cairo/cairo.c:35:	gd->bd->bi_arch_number = CONFIG_MACH_TYPE;
board/quipos/cairo/cairo.c:37:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/htkw/mcx/mcx.c:62:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/BuR/brxre1/board.c:281:		 (unsigned int) gd->fb_base-0x20,
board/BuR/brxre1/board.c:282:		 (u32)env_get_ulong("vx_memtop", 16, gd->fb_base-0x20),
board/BuR/brppt1/board.c:150:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/gdsys/mpc8308/sdram.c:80:	gd->ram_size = msize;
board/gdsys/mpc8308/mpc8308.c:29:	return gd->arch.fpga_state[dev];
board/gdsys/mpc8308/mpc8308.c:37:		gd->arch.fpga_state[k] = 0;
board/gdsys/mpc8308/mpc8308.c:48:		gd->arch.fpga_state[k] = 0;
board/gdsys/mpc8308/mpc8308.c:64:				gd->arch.fpga_state[k] |=
board/gdsys/mpc8308/mpc8308.c:91:				gd->arch.fpga_state[k] |=
board/gdsys/a38x/controlcenterdc.c:165:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/renesas/ulcb/ulcb.c:81:	gd->bd->bi_boot_params = CONFIG_SYS_TEXT_BASE + 0x50000;
board/renesas/silk/silk.c:67:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/lager/lager.c:84:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/eagle/eagle.c:70:	gd->bd->bi_boot_params = CONFIG_SYS_TEXT_BASE + 0x50000;
board/renesas/gose/gose.c:73:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/porter/porter.c:73:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/stout/stout.c:85:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/ebisu/ebisu.c:46:	gd->bd->bi_boot_params = CONFIG_SYS_TEXT_BASE + 0x50000;
board/renesas/draak/draak.c:81:	gd->bd->bi_boot_params = CONFIG_SYS_TEXT_BASE + 0x50000;
board/renesas/blanche/blanche.c:309:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/alt/alt.c:67:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/koelsch/koelsch.c:75:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/renesas/salvator-x/salvator-x.c:84:	gd->bd->bi_boot_params = CONFIG_SYS_TEXT_BASE + 0x50000;
board/sbc8349/sbc8349.c:66:	gd->ram_size = msize * 1024 * 1024;
board/cssi/MCR3000/MCR3000.c:110:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/sandbox/sandbox.c:47:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/sandbox/sandbox.c:64:		gd->flags &= ~GD_FLG_SILENT;
board/phytec/pcm052/pcm052.c:328:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/phytec/pcm052/pcm052.c:560:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/phytec/phycore_rk3288/phycore-rk3288.c:38:	off = fdt_path_offset(gd->fdt_blob, "eeprom0");
board/phytec/pcm051/board.c:162:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/phytec/pcm058/pcm058.c:70:	gd->ram_size = imx_ddr_size();
board/phytec/pcm058/pcm058.c:257:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/phytec/pcm058/pcm058.c:350:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/phytec/pfla02/pfla02.c:65:	gd->ram_size = imx_ddr_size();
board/phytec/pfla02/pfla02.c:346:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/phytec/pfla02/pfla02.c:568:	gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/lego/ev3/legoev3.c:156:	gd->bd->bi_arch_number = MACH_TYPE_DAVINCI_DA850_EVM;
board/lego/ev3/legoev3.c:159:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/varisys/cyrus/ddr.c:186:	gd->ram_size = dram_size;
board/alliedtelesis/SBx81LIFXCAT/sbx81lifxcat.c:97:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/alliedtelesis/SBx81LIFKW/sbx81lifkw.c:160:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/LaCie/edminiv2/edminiv2.c:23:	gd->bd->bi_arch_number = MACH_TYPE_EDMINI_V2;
board/LaCie/edminiv2/edminiv2.c:26:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/LaCie/netspace_v2/netspace_v2.c:74:	gd->bd->bi_arch_number = CONFIG_MACH_TYPE;
board/LaCie/netspace_v2/netspace_v2.c:77:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/LaCie/net2big_v2/net2big_v2.c:78:	gd->bd->bi_arch_number = MACH_TYPE_NET2BIG_V2;
board/LaCie/net2big_v2/net2big_v2.c:81:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/ti/ti814x/evm.c:110:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ti/ks2_evm/board.c:44:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/ti/ks2_evm/board.c:56:				      gd->ram_size >> 30);
board/ti/ks2_evm/board.c:64:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ti/dra7xx/evm.c:628:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
board/ti/dra7xx/evm.c:639:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/ti/dra7xx/evm.c:640:	gd->bd->bi_dram[0].size = get_effective_memsize();
board/ti/dra7xx/evm.c:642:		gd->bd->bi_dram[1].start = 0x200000000;
board/ti/dra7xx/evm.c:643:		gd->bd->bi_dram[1].size = ram_size - CONFIG_MAX_MEM_MAPPED;
board/ti/am335x/board.c:698:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ti/beagle/beagle.c:94:	gd->bd->bi_arch_number = MACH_TYPE_OMAP3_BEAGLE;
board/ti/beagle/beagle.c:96:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/ti/omap5_uevm/evm.c:141:	gd->bd->bi_arch_number = MACH_TYPE_OMAP5_SEVM;
board/ti/omap5_uevm/evm.c:142:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
board/ti/am43xx/board.c:640:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ti/ti816x/evm.c:28:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ti/am65x/evm.c:24:	gd->ram_size = 0x100000000;
board/ti/am65x/evm.c:26:	gd->ram_size = 0x80000000;
board/ti/am65x/evm.c:36:	if (gd->ram_top > 0x100000000)
board/ti/am65x/evm.c:40:	return gd->ram_top;
board/ti/am65x/evm.c:46:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/ti/am65x/evm.c:47:	gd->bd->bi_dram[0].size = 0x80000000;
board/ti/am65x/evm.c:51:	gd->bd->bi_dram[1].start = CONFIG_SYS_SDRAM_BASE1;
board/ti/am65x/evm.c:52:	gd->bd->bi_dram[1].size = 0x80000000;
board/ti/am3517crane/am3517crane.c:32:	gd->bd->bi_arch_number = MACH_TYPE_CRANEBOARD;
board/ti/am3517crane/am3517crane.c:34:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/ti/sdp4430/sdp.c:30:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
board/ti/evm/evm.c:117:	gd->bd->bi_arch_number = MACH_TYPE_OMAP3EVM;
board/ti/evm/evm.c:119:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/ti/panda/panda.c:48:	gd->bd->bi_arch_number = MACH_TYPE_OMAP4_PANDA;
board/ti/panda/panda.c:49:	gd->bd->bi_boot_params = (0x80000000 + 0x100); /* boot param addr */
board/ti/am57xx/board.c:617:	gd->bd->bi_boot_params = (CONFIG_SYS_SDRAM_BASE + 0x100);
board/pandora/pandora.c:58:	gd->bd->bi_arch_number = MACH_TYPE_OMAP3_PANDORA;
board/pandora/pandora.c:60:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/gumstix/duovero/duovero.c:50:	gd->bd->bi_arch_number = MACH_TYPE_DUOVERO;
board/gumstix/duovero/duovero.c:51:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/gumstix/pepper/board.c:189:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ppcag/bg0900/bg0900.c:46:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/bachmann/ot1200/ot1200.c:50:	gd->ram_size = imx_ddr_size();
board/bachmann/ot1200/ot1200.c:323:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/samtec/vining_2000/vining_2000.c:65:	gd->ram_size = imx_ddr_size();
board/samtec/vining_2000/vining_2000.c:503:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/samtec/vining_fpga/socfpga.c:28:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/ge/bx50v3/bx50v3.c:82:	gd->ram_size = imx_ddr_size();
board/ge/bx50v3/bx50v3.c:730:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/ge/mx53ppd/mx53ppd.c:73:	gd->ram_size = mx53_dram_size[0] + mx53_dram_size[1];
board/ge/mx53ppd/mx53ppd.c:80:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/ge/mx53ppd/mx53ppd.c:81:	gd->bd->bi_dram[0].size = mx53_dram_size[0];
board/ge/mx53ppd/mx53ppd.c:83:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/ge/mx53ppd/mx53ppd.c:84:	gd->bd->bi_dram[1].size = mx53_dram_size[1];
board/ge/mx53ppd/mx53ppd.c:362:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/ve8313/ve8313.c:108:	gd->ram_size = msize;
board/warp7/warp7.c:58:	gd->ram_size = PHYS_SDRAM_SIZE;
board/warp7/warp7.c:62:		gd->ram_size -= CONFIG_OPTEE_TZDRAM_SIZE;
board/warp7/warp7.c:165:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/buffalo/lsxl/lsxl.c:171:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/iomega/iconnect/iconnect.c:89:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/highbank/highbank.c:94:	gd->ram_size = SZ_512M;
board/siemens/common/board.c:48:	gd->baudrate = CONFIG_BAUDRATE;
board/siemens/common/board.c:50:	gd->have_console = 1;
board/siemens/common/board.c:79:	gd->bd->bi_arch_number = CONFIG_MACH_TYPE;
board/siemens/common/board.c:81:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/siemens/smartweb/smartweb.c:167:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/siemens/smartweb/smartweb.c:176:	gd->ram_size = get_ram_size(
board/siemens/corvus/board.c:242:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/siemens/corvus/board.c:267:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/siemens/taurus/taurus.c:325:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/siemens/taurus/taurus.c:345:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/woodburn/woodburn.c:39:	gd->ram_size = get_ram_size((long *)PHYS_SDRAM_1,
board/woodburn/woodburn.c:166:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/olimex/mx23_olinuxino/mx23_olinuxino.c:72:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/k+p/kp_imx53/kp_imx53.c:35:	gd->ram_size = size;
board/k+p/kp_imx53/kp_imx53.c:42:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/k+p/kp_imx53/kp_imx53.c:43:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/k+p/kp_imx53/kp_imx53.c:166:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc.c:71:	gd->ram_size = imx_ddr_size();
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc.c:265:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:298:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/k+p/kp_imx6q_tpc/kp_imx6q_tpc_spl.c:304:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/toradex/common/tdx-cfg-block.c:319:			if (gd->ram_size == 0x10000000)
board/toradex/common/tdx-cfg-block.c:324:			if (gd->ram_size == 0x10000000)
board/toradex/common/tdx-cfg-block.c:339:				if (gd->ram_size == 0x40000000)
board/toradex/apalis_imx6/apalis_imx6.c:90:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/toradex/apalis_imx6/apalis_imx6.c:445:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/toradex/apalis_imx6/apalis_imx6.c:452:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/toradex/apalis_imx6/apalis_imx6.c:459:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/toradex/apalis_imx6/apalis_imx6.c:774:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/toradex/apalis_imx6/apalis_imx6.c:855:	       (gd->ram_size == 0x80000000) ? "2GB" :
board/toradex/apalis_imx6/apalis_imx6.c:856:	       (gd->ram_size == 0x40000000) ? "1GB" : "512MB", it);
board/toradex/apalis_t30/apalis_t30.c:45:	       (gd->ram_size == 0x40000000) ? 1 : 2);
board/toradex/colibri-imx6ull/colibri-imx6ull.c:60:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/toradex/colibri-imx6ull/colibri-imx6ull.c:286:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/toradex/colibri_vf/colibri_vf.c:160:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/toradex/colibri_vf/colibri_vf.c:549:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/toradex/colibri_pxa270/colibri_pxa270.c:33:	gd->bd->bi_arch_number = MACH_TYPE_COLIBRI;
board/toradex/colibri_pxa270/colibri_pxa270.c:36:	gd->bd->bi_boot_params = 0xa0000100;
board/toradex/colibri_pxa270/colibri_pxa270.c:58:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/toradex/colibri_imx6/colibri_imx6.c:87:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/toradex/colibri_imx6/colibri_imx6.c:377:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/toradex/colibri_imx6/colibri_imx6.c:384:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/toradex/colibri_imx6/colibri_imx6.c:648:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/toradex/colibri_imx6/colibri_imx6.c:709:	       (gd->ram_size == 0x20000000) ? "512" : "256", it);
board/toradex/colibri_t20/colibri_t20.c:70:	       (gd->ram_size == 0x10000000) ? 256 : 512,
board/toradex/colibri_t20/colibri_t20.c:72:	       ((gd->ram_size == 0x10000000) ? "1.1B" : "1.1C") : "1.2A");
board/toradex/colibri_imx7/colibri_imx7.c:55:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/toradex/colibri_imx7/colibri_imx7.c:335:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/corscience/tricorder/tricorder.c:33:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/armltd/vexpress64/vexpress64.c:68:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/armltd/vexpress64/vexpress64.c:74:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/armltd/vexpress64/vexpress64.c:75:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/armltd/vexpress64/vexpress64.c:77:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/armltd/vexpress64/vexpress64.c:78:	gd->bd->bi_dram[1].size = PHYS_SDRAM_2_SIZE;
board/armltd/integrator/integrator.c:67:	gd->bd->bi_arch_number = MACH_TYPE_CINTEGRATOR;
board/armltd/integrator/integrator.c:69:	gd->bd->bi_arch_number = MACH_TYPE_INTEGRATOR;
board/armltd/integrator/integrator.c:73:	gd->bd->bi_boot_params = 0x00000100;
board/armltd/integrator/integrator.c:133:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/armltd/integrator/integrator.c:156:	gd->ram_size = get_ram_size((long *) CONFIG_SYS_SDRAM_BASE +
board/armltd/integrator/integrator.c:161:	gd->ram_size = get_ram_size((long *) CONFIG_SYS_SDRAM_BASE +
board/armltd/integrator/integrator.c:166:	gd->bd->bi_dram[0].size	 = gd->ram_size;
board/armltd/vexpress/vexpress_common.c:52:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/armltd/vexpress/vexpress_common.c:53:	gd->bd->bi_arch_number = MACH_TYPE_VEXPRESS;
board/armltd/vexpress/vexpress_common.c:54:	gd->flags = 0;
board/armltd/vexpress/vexpress_common.c:108:	gd->ram_size =
board/armltd/vexpress/vexpress_common.c:115:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/armltd/vexpress/vexpress_common.c:116:	gd->bd->bi_dram[0].size =
board/armltd/vexpress/vexpress_common.c:118:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/armltd/vexpress/vexpress_common.c:119:	gd->bd->bi_dram[1].size =
board/socrates/socrates.c:78:	gd->bd->bi_flashstart = 0 - gd->bd->bi_flashsize;
board/socrates/socrates.c:79:	gd->bd->bi_flashoffset = 0;
board/socrates/socrates.c:84:	if (gd->bd->bi_flashsize < (0 - CONFIG_SYS_FLASH0)) {
board/socrates/socrates.c:85:		set_lbc_or(0, gd->bd->bi_flashstart |
board/socrates/socrates.c:87:		set_lbc_br(0, gd->bd->bi_flashstart |
board/socrates/socrates.c:93:		flash_get_size(gd->bd->bi_flashstart, CONFIG_SYS_MAX_FLASH_BANKS - 1);
board/socrates/socrates.c:99:	if (gd->bd->bi_flashsize != CONFIG_SYS_MAX_FLASH_BANKS * (0 - CONFIG_SYS_FLASH0)) {
board/socrates/socrates.c:107:			       gd->bd->bi_flashstart, 0xffffffff,
board/socrates/socrates.c:230:	val[i++] = gd->bd->bi_flashstart;
board/socrates/socrates.c:231:	val[i++] = gd->bd->bi_flashsize;
board/work-microwave/work_92105/work_92105.c:65:	gd->bd->bi_boot_params  = CONFIG_SYS_SDRAM_BASE + 0x100;
board/work-microwave/work_92105/work_92105.c:72:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/CZ.NIC/turris_mox/turris_mox.c:124:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/CZ.NIC/turris_omnia/turris_omnia.c:374:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/beckhoff/mx53cx9020/mx53cx9020.c:234:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/raspberrypi/rpi/rpi.c:281:	gd->ram_size = msg->get_arm_mem.body.resp.mem_size;
board/raspberrypi/rpi/rpi.c:317:	if ((gd->ram_top - fw_dtb_pointer) > SZ_64M)
board/raspberrypi/rpi/rpi.c:318:		return gd->ram_top;
board/raspberrypi/rpi/rpi.c:465:	gd->bd->bi_boot_params = 0x100;
board/bluewater/snapper9260/snapper9260.c:114:	gd->bd->bi_arch_number = MACH_TYPE_SNAPPER_9260;
board/bluewater/snapper9260/snapper9260.c:117:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/bluewater/snapper9260/snapper9260.c:135:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/bluewater/gurnard/gurnard.c:120:	u16 *base_addr = (u16 *)gd->video_bottom;
board/bluewater/gurnard/gurnard.c:304:	gd->bd->bi_arch_number = MACH_TYPE_SNAPPER_9260;
board/bluewater/gurnard/gurnard.c:307:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/bluewater/gurnard/gurnard.c:407:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/tqc/tqm834x/tqm834x.c:114:	gd->ram_size = size;
board/tqc/tqm834x/tqm834x.c:142:	f = gd->pci_clk;
board/tqc/tqma6/tqma6.c:54:	gd->ram_size = imx_ddr_size();
board/tqc/tqma6/tqma6.c:202:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/tqc/tqma6/tqma6.c:279:	fdt_fixup_memory(blob, (u64)PHYS_SDRAM, (u64)gd->ram_size);
board/technexion/twister/twister.c:70:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/technexion/pico-imx6ul/pico-imx6ul.c:148:	gd->ram_size = imx_ddr_size();
board/technexion/pico-imx6ul/pico-imx6ul.c:275:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/technexion/tao3530/tao3530.c:114:	gd->bd->bi_arch_number = MACH_TYPE_OMAP3_TAO3530;
board/technexion/tao3530/tao3530.c:116:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/technexion/pico-imx7d/pico-imx7d.c:61:	gd->ram_size = imx_ddr_size();
board/technexion/pico-imx7d/pico-imx7d.c:252:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/overo/common.c:34:	gd->bd->bi_arch_number = MACH_TYPE_OVERO;
board/overo/common.c:36:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/engicam/common/board.c:97:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/engicam/common/board.c:112:	gd->ram_size = imx_ddr_size();
board/omicron/calimain/calimain.c:106:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/technologic/ts4800/ts4800.c:41:	/* dram_init must store complete ramsize in gd->ram_size */
board/technologic/ts4800/ts4800.c:42:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/technologic/ts4800/ts4800.c:158:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/technologic/ts4600/ts4600.c:51:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/broadcom/bcm23550_w1d/bcm23550_w1d.c:35:	printf("Relocation Offset is: %08lx\n", gd->reloc_off);
board/broadcom/bcm23550_w1d/bcm23550_w1d.c:38:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/broadcom/bcm23550_w1d/bcm23550_w1d.c:58:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/broadcom/bcm23550_w1d/bcm23550_w1d.c:66:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/broadcom/bcm23550_w1d/bcm23550_w1d.c:67:	gd->bd->bi_dram[0].size = gd->ram_size;
board/broadcom/bcm_ep/board.c:24:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/broadcom/bcm_ep/board.c:34:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/broadcom/bcm_ep/board.c:41:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/broadcom/bcm_ep/board.c:42:	gd->bd->bi_dram[0].size = gd->ram_size;
board/broadcom/bcmns2/northstar2.c:40:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/broadcom/bcmns2/northstar2.c:47:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/broadcom/bcmns2/northstar2.c:48:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/broadcom/bcmns2/northstar2.c:50:	gd->bd->bi_dram[1].start = CONFIG_SYS_SDRAM_BASE + PHYS_SDRAM_1_SIZE;
board/broadcom/bcmns2/northstar2.c:51:	gd->bd->bi_dram[1].size = PHYS_SDRAM_2_SIZE;
board/broadcom/bcmstb/bcmstb.c:64:	 * setup_reloc, gd->reloc_off works out to 0, effectively
board/broadcom/bcmstb/bcmstb.c:69:	gd->relocaddr = CONFIG_SYS_TEXT_BASE;
board/broadcom/bcmstb/bcmstb.c:88:	const void *fdt = gd->fdt_blob;
board/broadcom/bcmstb/bcmstb.c:93:		printf("%s: Invalid gd->fdt_blob\n", __func__);
board/broadcom/bcmstb/bcmstb.c:148:	gd->arch.timer_rate_hz = readl(BCMSTB_TIMER_FREQUENCY);
board/broadcom/bcmstb/bcmstb.c:155:	return gd->arch.timer_rate_hz;
board/broadcom/bcmstb/bcmstb.c:160:	gd->timebase_h = readl(BCMSTB_TIMER_HIGH);
board/broadcom/bcmstb/bcmstb.c:161:	gd->timebase_l = readl(BCMSTB_TIMER_LOW);
board/broadcom/bcmstb/bcmstb.c:163:	return ((uint64_t)gd->timebase_h << 32) | gd->timebase_l;
board/broadcom/bcmstb/bcmstb.c:177:	debug("Read timer frequency (in Hz): %ld\n", gd->arch.timer_rate_hz);
board/broadcom/bcm28155_ap/bcm28155_ap.c:35:	printf("Relocation Offset is: %08lx\n", gd->reloc_off);
board/broadcom/bcm28155_ap/bcm28155_ap.c:38:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/broadcom/bcm28155_ap/bcm28155_ap.c:65:	gd->ram_size = get_ram_size((long *)CONFIG_SYS_SDRAM_BASE,
board/broadcom/bcm28155_ap/bcm28155_ap.c:73:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/broadcom/bcm28155_ap/bcm28155_ap.c:74:	gd->bd->bi_dram[0].size = gd->ram_size;
board/sbc8641d/sbc8641d.c:52:	gd->ram_size = dram_size;
board/maxbcm/maxbcm.c:128:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/aristainetos/aristainetos.c:105:	gd->ram_size = imx_ddr_size();
board/aristainetos/aristainetos.c:270:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/bticino/mamoj/mamoj.c:16:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/bticino/mamoj/mamoj.c:23:	gd->ram_size = imx_ddr_size();
board/esd/meesc/meesc.c:130:	/* dram_init must store complete ramsize in gd->ram_size */
board/esd/meesc/meesc.c:131:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM,
board/esd/meesc/meesc.c:138:	gd->bd->bi_dram[0].start = PHYS_SDRAM;
board/esd/meesc/meesc.c:139:	gd->bd->bi_dram[0].size = PHYS_SDRAM_SIZE;
board/esd/meesc/meesc.c:166:		gd->bd->bi_arch_number = MACH_TYPE_MEESC;
board/esd/meesc/meesc.c:171:		gd->bd->bi_arch_number = MACH_TYPE_ETHERCAN2;
board/esd/meesc/meesc.c:178:		gd->bd->bi_arch_number = MACH_TYPE_ETHERCAN2;
board/esd/meesc/meesc.c:190:	printf("Mach-type: %lu\n", gd->bd->bi_arch_number);
board/esd/meesc/meesc.c:261:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/esd/vme8349/vme8349.c:56:	gd->ram_size = msize * 1024 * 1024;
board/ucRobotics/bubblegum_96/bubblegum_96.c:22:	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
board/ucRobotics/bubblegum_96/bubblegum_96.c:29:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/ucRobotics/bubblegum_96/bubblegum_96.c:30:	gd->bd->bi_dram[0].size = gd->ram_size;
board/calao/usb_a9263/usb_a9263.c:96:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/calao/usb_a9263/usb_a9263.c:112:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/qualcomm/dragonboard410c/dragonboard410c.c:34:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/qualcomm/dragonboard410c/dragonboard410c.c:41:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/qualcomm/dragonboard410c/dragonboard410c.c:42:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/qualcomm/dragonboard410c/dragonboard410c.c:65:		node = fdt_subnode_offset(gd->fdt_blob,
board/qualcomm/dragonboard410c/dragonboard410c.c:81:		node = fdt_subnode_offset(gd->fdt_blob,
board/qualcomm/dragonboard410c/dragonboard410c.c:128:	node = fdt_subnode_offset(gd->fdt_blob, dev_of_offset(pon),
board/qualcomm/dragonboard820c/dragonboard820c.c:22:	gd->ram_size = PHYS_SDRAM_SIZE;
board/qualcomm/dragonboard820c/dragonboard820c.c:29:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/qualcomm/dragonboard820c/dragonboard820c.c:30:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/qualcomm/dragonboard820c/dragonboard820c.c:32:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/qualcomm/dragonboard820c/dragonboard820c.c:33:	gd->bd->bi_dram[1].size  = PHYS_SDRAM_2_SIZE;
board/qualcomm/dragonboard820c/dragonboard820c.c:143:	node = fdt_subnode_offset(gd->fdt_blob, dev_of_offset(pon),
board/solidrun/mx6cuboxi/mx6cuboxi.c:109:	gd->ram_size = get_ram_size_stride_test((u32 *) CONFIG_SYS_SDRAM_BASE,
board/solidrun/mx6cuboxi/mx6cuboxi.c:236:		gd->arch.sdhc_clk = usdhc_cfg.sdhc_clk;
board/solidrun/mx6cuboxi/mx6cuboxi.c:241:		gd->arch.sdhc_clk = emmc_cfg.sdhc_clk;
board/solidrun/mx6cuboxi/mx6cuboxi.c:469:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/solidrun/clearfog/clearfog.c:114:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/CarMediaLab/flea3/flea3.c:45:	gd->ram_size = get_ram_size((long *)PHYS_SDRAM_1,
board/CarMediaLab/flea3/flea3.c:185:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/creative/xfi3/xfi3.c:211:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/compulab/cm_t35/cm_t35.c:88:		gd->bd->bi_arch_number = MACH_TYPE_CM_T35;
board/compulab/cm_t35/cm_t35.c:90:		gd->bd->bi_arch_number = MACH_TYPE_CM_T3730;
board/compulab/cm_t35/cm_t35.c:93:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/compulab/cm_t335/cm_t335.c:30:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/compulab/cm_t43/cm_t43.c:45:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/compulab/cm_t54/cm_t54.c:46:	gd->bd->bi_boot_params = (CONFIG_SYS_SDRAM_BASE + 0x100);
board/compulab/cm_t54/cm_t54.c:85:	u32 bootmode = gd->arch.omap_boot_mode;
board/compulab/cm_fx6/cm_fx6.c:578:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/compulab/cm_fx6/cm_fx6.c:660:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/compulab/cm_fx6/cm_fx6.c:661:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/compulab/cm_fx6/cm_fx6.c:663:	switch (gd->ram_size) {
board/compulab/cm_fx6/cm_fx6.c:665:		gd->bd->bi_dram[0].size = 0x10000000;
board/compulab/cm_fx6/cm_fx6.c:666:		gd->bd->bi_dram[1].size = 0;
board/compulab/cm_fx6/cm_fx6.c:669:		gd->bd->bi_dram[0].size = 0x20000000;
board/compulab/cm_fx6/cm_fx6.c:670:		gd->bd->bi_dram[1].size = 0;
board/compulab/cm_fx6/cm_fx6.c:674:			gd->bd->bi_dram[0].size = 0x20000000;
board/compulab/cm_fx6/cm_fx6.c:675:			gd->bd->bi_dram[1].size = 0x20000000;
board/compulab/cm_fx6/cm_fx6.c:677:			gd->bd->bi_dram[0].size = 0x40000000;
board/compulab/cm_fx6/cm_fx6.c:678:			gd->bd->bi_dram[1].size = 0;
board/compulab/cm_fx6/cm_fx6.c:682:		gd->bd->bi_dram[0].size = 0x40000000;
board/compulab/cm_fx6/cm_fx6.c:683:		gd->bd->bi_dram[1].size = 0x40000000;
board/compulab/cm_fx6/cm_fx6.c:686:		gd->bd->bi_dram[0].size = 0x70000000;
board/compulab/cm_fx6/cm_fx6.c:687:		gd->bd->bi_dram[1].size = 0x7FF00000;
board/compulab/cm_fx6/cm_fx6.c:696:	gd->ram_size = imx_ddr_size();
board/compulab/cm_fx6/cm_fx6.c:697:	switch (gd->ram_size) {
board/compulab/cm_fx6/cm_fx6.c:704:		gd->ram_size -= 0x100000;
board/compulab/cm_fx6/cm_fx6.c:707:		printf("ERROR: Unsupported DRAM size 0x%lx\n", gd->ram_size);
board/compulab/cl-som-am57x/cl-som-am57x.c:31:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/compulab/cm_t3517/cm_t3517.c:90:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/compulab/cl-som-imx7/cl-som-imx7.c:66:	gd->ram_size = imx_ddr_size();
board/compulab/cl-som-imx7/cl-som-imx7.c:258:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/silica/pengwyn/board.c:128:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/vscom/baltos/board.c:270:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/Arcturus/ucp1020/spl.c:56:	gd->bus_clk = bus_clk;
board/Arcturus/ucp1020/spl.c:82:	gd->bd = bd;
board/Arcturus/ucp1020/spl.c:101:	gd->env_addr = (ulong)(CONFIG_ENV_ADDR);
board/Arcturus/ucp1020/spl.c:102:	gd->env_valid = ENV_VALID;
board/Arcturus/ucp1020/spl_minimal.c:34:	gd->bus_clk = CONFIG_SYS_CLK_FREQ * plat_ratio;
board/Arcturus/ucp1020/spl_minimal.c:37:		     gd->bus_clk / 16 / CONFIG_BAUDRATE);
board/zipitz2/zipitz2.c:34:	gd->bd->bi_arch_number = MACH_TYPE_ZIPIT2;
board/zipitz2/zipitz2.c:37:	gd->bd->bi_boot_params = 0xa0000100;
board/zipitz2/zipitz2.c:48:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/zipitz2/zipitz2.c:74:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/zipitz2/zipitz2.c:75:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/egnite/ethernut5/ethernut5.c:85:	gd->ram_size = get_ram_size(
board/egnite/ethernut5/ethernut5.c:136:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/xilinx/microblaze-generic/microblaze-generic.c:35:	gd->bd->bi_dram[0].start = ram_base;
board/xilinx/microblaze-generic/microblaze-generic.c:36:	gd->bd->bi_dram[0].size = get_effective_memsize();
board/xilinx/microblaze-generic/microblaze-generic.c:46:	const void *blob = gd->fdt_blob;
board/xilinx/microblaze-generic/microblaze-generic.c:61:	gd->ram_top = addr; /* In setup_dest_addr() is done +ram_size */
board/xilinx/microblaze-generic/microblaze-generic.c:62:	gd->ram_size = size;
board/xilinx/microblaze-generic/microblaze-generic.c:108:	ret = device_bind_driver(gd->dm_root, "mb_soft_reset",
board/xilinx/zynq/cmds.c:347:		if (part_load_addr < gd->bd->bi_dram[0].start &&
board/xilinx/zynq/cmds.c:349:		    (gd->bd->bi_dram[0].start +
board/xilinx/zynq/cmds.c:350:		     gd->bd->bi_dram[0].size))) {
board/xilinx/zynq/board.c:111:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/xilinx/zynqmp/zynqmp.c:444:	gd->bd->bi_dram[0].start = CONFIG_SYS_SDRAM_BASE;
board/xilinx/zynqmp/zynqmp.c:445:	gd->bd->bi_dram[0].size = get_effective_memsize();
board/xilinx/zynqmp/zynqmp.c:455:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/xilinx/zynqmp/zynqmp.c:520:	if (!(gd->flags & GD_FLG_ENV_DEFAULT)) {
board/seco/mx6quq7/mx6quq7.c:39:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/seco/mx6quq7/mx6quq7.c:156:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/Barix/ipam390/ipam390.c:194:	gd->bd->bi_arch_number = MACH_TYPE_DAVINCI_DA850_EVM;
board/Barix/ipam390/ipam390.c:197:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/amazon/kc1/kc1.c:78:	gd->bd->bi_arch_number = MACH_TYPE_OMAP_4430SDP;
board/amazon/kc1/kc1.c:81:	gd->bd->bi_boot_params = OMAP44XX_DRAM_ADDR_SPACE_START + 0x100;
board/bosch/shc/board.c:446:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/cirrus/edb93xx/edb93xx.c:90:	gd->bd->bi_arch_number = CONFIG_MACH_TYPE;
board/cirrus/edb93xx/edb93xx.c:93:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/cirrus/edb93xx/edb93xx.c:96:	gd->have_console = 1;
board/cirrus/edb93xx/edb93xx.c:185:		gd->bd->bi_dram[i].start = dram_bank_base[i];
board/cirrus/edb93xx/edb93xx.c:186:		gd->bd->bi_dram[i].size = dram_bank_size;
board/cirrus/edb93xx/edb93xx.c:190:		gd->bd->bi_dram[i].start = 0;
board/cirrus/edb93xx/edb93xx.c:191:		gd->bd->bi_dram[i].size = 0;
board/cirrus/edb93xx/edb93xx.c:284:	gd->ram_size = dram_init_banksize_int(1);
board/inversepath/usbarmory/usbarmory.c:401:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/inversepath/usbarmory/usbarmory.c:408:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE, 1 << 30);
board/grinn/liteboard/board.c:227:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/grinn/chiliboard/board.c:105:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/Synology/ds109/ds109.c:90:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/Synology/ds414/ds414.c:158:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/teejet/mt_ventoux/mt_ventoux.c:227:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/ronetix/pm9261/pm9261.c:168:	gd->fb_base = ATMEL_BASE_SRAM;
board/ronetix/pm9261/pm9261.c:192:		dram_size += gd->bd->bi_dram[i].size;
board/ronetix/pm9261/pm9261.c:220:	gd->bd->bi_arch_number = MACH_TYPE_PM9261;
board/ronetix/pm9261/pm9261.c:223:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/ronetix/pm9261/pm9261.c:246:	/* dram_init must store complete ramsize in gd->ram_size */
board/ronetix/pm9261/pm9261.c:247:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM,
board/ronetix/pm9261/pm9261.c:254:	gd->bd->bi_dram[0].start = PHYS_SDRAM;
board/ronetix/pm9261/pm9261.c:255:	gd->bd->bi_dram[0].size = PHYS_SDRAM_SIZE;
board/ronetix/pm9263/pm9263.c:263:	gd->fb_base = (stat == 0) ? PHYS_PSRAM : ATMEL_BASE_SRAM0;
board/ronetix/pm9263/pm9263.c:265:	gd->fb_base = ATMEL_BASE_SRAM0;
board/ronetix/pm9263/pm9263.c:291:		dram_size += gd->bd->bi_dram[i].size;
board/ronetix/pm9263/pm9263.c:319:	gd->bd->bi_arch_number = MACH_TYPE_PM9263;
board/ronetix/pm9263/pm9263.c:322:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/ronetix/pm9263/pm9263.c:341:	/* dram_init must store complete ramsize in gd->ram_size */
board/ronetix/pm9263/pm9263.c:342:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM,
board/ronetix/pm9263/pm9263.c:349:	gd->bd->bi_dram[0].start = PHYS_SDRAM;
board/ronetix/pm9263/pm9263.c:350:	gd->bd->bi_dram[0].size = PHYS_SDRAM_SIZE;
board/ronetix/pm9263/pm9263.c:377:	switch (gd->fb_base) {
board/ronetix/pm9263/pm9263.c:390:	printf("Video memory : 0x%08lX %s\n", gd->fb_base, ss );
board/ronetix/pm9g45/pm9g45.c:125:	gd->bd->bi_arch_number = MACH_TYPE_PM9G45;
board/ronetix/pm9g45/pm9g45.c:127:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/ronetix/pm9g45/pm9g45.c:141:	/* dram_init must store complete ramsize in gd->ram_size */
board/ronetix/pm9g45/pm9g45.c:142:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM,
board/ronetix/pm9g45/pm9g45.c:149:	gd->bd->bi_dram[0].start = PHYS_SDRAM;
board/ronetix/pm9g45/pm9g45.c:150:	gd->bd->bi_dram[0].size = PHYS_SDRAM_SIZE;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:28:	gd->bd->bi_arch_number = MACH_TYPE_ADPAE3XX;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:29:	gd->bd->bi_boot_params = PHYS_SDRAM_0 + 0x400;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:39:	gd->ram_size = actual_size;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:50:	gd->bd->bi_dram[0].start = PHYS_SDRAM_0;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:51:	gd->bd->bi_dram[0].size =  PHYS_SDRAM_0_SIZE;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:52:	gd->bd->bi_dram[1].start = PHYS_SDRAM_1;
board/AndesTech/adp-ae3xx/adp-ae3xx.c:53:	gd->bd->bi_dram[1].size =  PHYS_SDRAM_1_SIZE;
board/AndesTech/adp-ag101p/adp-ag101p.c:31:	gd->bd->bi_arch_number = MACH_TYPE_ADPAG101P;
board/AndesTech/adp-ag101p/adp-ag101p.c:32:	gd->bd->bi_boot_params = PHYS_SDRAM_0 + 0x400;
board/AndesTech/adp-ag101p/adp-ag101p.c:45:	gd->ram_size = actual_size;
board/AndesTech/adp-ag101p/adp-ag101p.c:57:	gd->bd->bi_dram[0].start = PHYS_SDRAM_0;
board/AndesTech/adp-ag101p/adp-ag101p.c:58:	gd->bd->bi_dram[0].size =  PHYS_SDRAM_0_SIZE;
board/AndesTech/adp-ag101p/adp-ag101p.c:59:	gd->bd->bi_dram[1].start = PHYS_SDRAM_1;
board/AndesTech/adp-ag101p/adp-ag101p.c:60:	gd->bd->bi_dram[1].size =  PHYS_SDRAM_1_SIZE;
board/AndesTech/ax25-ae350/ax25-ae350.c:23:	gd->bd->bi_boot_params = PHYS_SDRAM_0 + 0x400;
board/AndesTech/ax25-ae350/ax25-ae350.c:35:	gd->ram_size = actual_size;
board/AndesTech/ax25-ae350/ax25-ae350.c:47:	gd->bd->bi_dram[0].start = PHYS_SDRAM_0;
board/AndesTech/ax25-ae350/ax25-ae350.c:48:	gd->bd->bi_dram[0].size =  PHYS_SDRAM_0_SIZE;
board/AndesTech/ax25-ae350/ax25-ae350.c:49:	gd->bd->bi_dram[1].start = PHYS_SDRAM_1;
board/AndesTech/ax25-ae350/ax25-ae350.c:50:	gd->bd->bi_dram[1].size =  PHYS_SDRAM_1_SIZE;
board/AndesTech/ax25-ae350/ax25-ae350.c:80:	void *blob = (void *)gd->fdt_blob;
board/qemu-mips/qemu-mips.c:19:	gd->ram_size = MEM_SIZE * 1024 * 1024;
board/xes/xpedite517x/xpedite517x.c:69:	gd->ram_size = dram_size;
board/mini-box/picosam9g45/picosam9g45.c:210:	gd->fb_base = CONFIG_AT91SAM9G45_LCD_BASE;
board/mini-box/picosam9g45/picosam9g45.c:232:		dram_size += gd->bd->bi_dram[i].size;
board/mini-box/picosam9g45/picosam9g45.c:255:	gd->bd->bi_arch_number = MACH_TYPE_PICOSAM9G45;
board/mini-box/picosam9g45/picosam9g45.c:258:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/mini-box/picosam9g45/picosam9g45.c:277:	gd->ram_size    = get_ram_size((long *)PHYS_SDRAM_1, PHYS_SDRAM_1_SIZE)
board/mini-box/picosam9g45/picosam9g45.c:285:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/mini-box/picosam9g45/picosam9g45.c:286:	gd->bd->bi_dram[0].size = get_ram_size((long *)PHYS_SDRAM_1,
board/mini-box/picosam9g45/picosam9g45.c:288:	gd->bd->bi_dram[1].start = PHYS_SDRAM_2;
board/mini-box/picosam9g45/picosam9g45.c:289:	gd->bd->bi_dram[1].size = get_ram_size((long *)PHYS_SDRAM_2,
board/sandisk/sansa_fuze_plus/sfp.c:375:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/barco/platinum/platinum.c:93:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/barco/platinum/platinum.c:179:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/barco/titanium/titanium.c:41:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM, PHYS_SDRAM_SIZE);
board/barco/titanium/titanium.c:281:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/l+g/vinco/vinco.c:167:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/l+g/vinco/vinco.c:191:	gd->ram_size = get_ram_size((void *)CONFIG_SYS_SDRAM_BASE,
board/davinci/ea20/ea20.c:279:	gd->bd->bi_arch_number = MACH_TYPE_EA20;
board/davinci/ea20/ea20.c:282:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/davinci/da8xxevm/omapl138_lcdk.c:177:	gd->bd->bi_arch_number = MACH_TYPE_OMAPL138_LCDK;
board/davinci/da8xxevm/omapl138_lcdk.c:180:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/davinci/da8xxevm/da850evm.c:381:	gd->bd->bi_arch_number = MACH_TYPE_DAVINCI_DA850_EVM;
board/davinci/da8xxevm/da850evm.c:384:	gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR;
board/ids/ids8313/ids8313.c:136:	gd->ram_size = msize;
board/ids/ids8313/ids8313.c:176:	gd->fdt_blob = (void *)CONFIG_SYS_FLASH_BASE;
board/eets/pdu001/board.c:255:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/syteco/zmx25/zmx25.c:100:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/syteco/zmx25/zmx25.c:169:	/* dram_init must store complete ramsize in gd->ram_size */
board/syteco/zmx25/zmx25.c:170:	gd->ram_size = get_ram_size((void *)PHYS_SDRAM,
board/wandboard/wandboard.c:61:	gd->ram_size = imx_ddr_size();
board/wandboard/wandboard.c:531:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/st/stm32h743-eval/stm32h743-eval.c:53:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/st/stm32h743-disco/stm32h743-disco.c:53:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/st/stm32f429-evaluation/stm32f429-evaluation.c:51:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/st/stv0991/stv0991.c:91:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/st/stv0991/stv0991.c:97:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/st/stv0991/stv0991.c:98:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/st/stm32f429-discovery/stm32f429-discovery.c:57:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/st/stm32mp1/stm32mp1.c:39:	const void *blob = gd->fdt_blob;
board/st/stm32mp1/stm32mp1.c:192:	gd->bd->bi_boot_params = STM32_DDR_BASE + 0x100;
board/st/stm32f469-discovery/stm32f469-discovery.c:51:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/st/stm32f746-disco/stm32f746-disco.c:90:	node = fdt_node_offset_by_compatible(gd->fdt_blob, 0, "st,led1");
board/st/stm32f746-disco/stm32f746-disco.c:104:	node = fdt_node_offset_by_compatible(gd->fdt_blob, 0, "st,button1");
board/st/stm32f746-disco/stm32f746-disco.c:123:	gd->bd->bi_boot_params = gd->bd->bi_dram[0].start + 0x100;
board/st/stih410-b2260/board.c:17:	gd->ram_size = PHYS_SDRAM_1_SIZE;
board/st/stih410-b2260/board.c:23:	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
board/st/stih410-b2260/board.c:24:	gd->bd->bi_dram[0].size = PHYS_SDRAM_1_SIZE;
board/st/stih410-b2260/board.c:58:	const void *blob = gd->fdt_blob;
board/isee/igep00x0/common.c:52:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/isee/igep003x/board.c:183:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/zyxel/nsa310s/nsa310s.c:76:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/theadorable/theadorable.c:170:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/theadorable/theadorable.c:226:	lcd_info.fb_base	= gd->ram_size;
board/boundary/nitrogen6x/nitrogen6x.c:71:	gd->ram_size = ((ulong)CONFIG_DDR_MB * 1024 * 1024);
board/boundary/nitrogen6x/nitrogen6x.c:894:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/keymile/common/common.c:50:	pnvramaddr = gd->ram_size - CONFIG_KM_RESERVED_PRAM - CONFIG_KM_PHRAM
board/keymile/common/common.c:64:	varaddr = gd->ram_size - CONFIG_KM_RESERVED_PRAM - CONFIG_KM_PHRAM;
board/keymile/common/common.c:68:	kernelmem = gd->ram_size - 0x400 * pram;
board/keymile/kmp204x/ddr.c:64:	gd->ram_size = dram_size;
board/keymile/km_arm/km_arm.c:193:	bootcountaddr = gd->ram_size - BOOTCOUNT_ADDR;
board/keymile/km_arm/km_arm.c:259:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/keymile/km_arm/km_arm.c:524:	void* addr = (void *) (gd->ram_size - BOOTCOUNT_ADDR + POST_WORD_OFF);
board/keymile/km_arm/km_arm.c:530:	void* addr = (void *) (gd->ram_size - BOOTCOUNT_ADDR + POST_WORD_OFF);
board/keymile/km83xx/km83xx.c:352:	gd->ram_size = msize * 1024 * 1024;
board/sunxi/board.c:198:	gd->bd->bi_boot_params = (PHYS_SDRAM_0 + 0x100);
board/sunxi/board.c:260:	gd->ram_size = get_ram_size((long *)PHYS_SDRAM_0, PHYS_SDRAM_0_SIZE);
board/sunxi/board.c:587:	gd->ram_size = sunxi_dram_init();
board/sunxi/board.c:588:	printf(" %d MiB\n", (int)(gd->ram_size >> 20));
board/sunxi/board.c:589:	if (!gd->ram_size)
board/sunxi/board.c:779:	setup_environment(gd->fdt_blob);
board/sunxi/board.c:825:		if ((gd->ram_size > 512 * 1024 * 1024))
board/8dtech/eco5pk/eco5pk.c:32:	gd->bd->bi_boot_params = (OMAP34XX_SDRC_CS0 + 0x100);
board/birdland/bav335x/board.c:292:	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
board/el/el6x/el6x.c:68:	gd->ram_size = imx_ddr_size();
board/el/el6x/el6x.c:341:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/el/el6x/el6x.c:348:		gd->arch.sdhc_clk = usdhc_cfg[0].sdhc_clk;
board/el/el6x/el6x.c:388:	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
board/raidsonic/ib62x0/ib62x0.c:64:	gd->bd->bi_boot_params = mvebu_sdram_bar(0) + 0x100;
board/schulercontrol/sc_sps_1/sc_sps_1.c:51:	gd->bd->bi_boot_params = PHYS_SDRAM_1 + 0x100;
board/mpc8308_p1m/sdram.c:75:	gd->ram_size = msize;
env/nowhere.c:23:	gd->env_addr	= (ulong)&default_environment[0];
env/nowhere.c:24:	gd->env_valid	= ENV_INVALID;
env/nvram.c:101:		gd->env_addr	= (ulong)CONFIG_ENV_ADDR + sizeof(long);
env/nvram.c:104:		gd->env_addr	= (ulong)&env_ptr->data;
env/nvram.c:106:		gd->env_valid = ENV_VALID;
env/nvram.c:108:		gd->env_addr	= (ulong)&default_environment[0];
env/nvram.c:109:		gd->env_valid	= ENV_INVALID;
env/mmc.c:81:	str = fdtdec_get_config_string(gd->fdt_blob, dt_prop.partition);
env/mmc.c:98:	return fdtdec_get_config_int(gd->fdt_blob, propname, defvalue);
env/mmc.c:219:	if (gd->env_valid == ENV_VALID)
env/mmc.c:238:	gd->env_valid = gd->env_valid == ENV_REDUND ? ENV_VALID : ENV_REDUND;
env/common.c:49:	unsigned long really_valid = gd->env_valid;
env/common.c:50:	unsigned long real_gd_flags = gd->flags;
env/common.c:53:	gd->flags &= ~GD_FLG_ENV_READY;
env/common.c:54:	gd->env_valid = ENV_INVALID;
env/common.c:56:	gd->env_valid = really_valid;
env/common.c:57:	gd->flags = real_gd_flags;
env/common.c:85:	gd->flags |= GD_FLG_ENV_READY;
env/common.c:86:	gd->flags |= GD_FLG_ENV_DEFAULT;
env/common.c:124:		gd->flags |= GD_FLG_ENV_READY;
env/common.c:158:		gd->env_valid = ENV_VALID;
env/common.c:161:		gd->env_valid = ENV_REDUND;
env/common.c:174:		gd->env_valid = ENV_VALID;
env/common.c:176:		gd->env_valid = ENV_REDUND;
env/common.c:180:			gd->env_valid = ENV_REDUND;
env/common.c:182:			gd->env_valid = ENV_VALID;
env/common.c:184:			gd->env_valid = ENV_VALID;
env/common.c:186:			gd->env_valid = ENV_REDUND;
env/common.c:188:			gd->env_valid = ENV_VALID;
env/common.c:191:	if (gd->env_valid == ENV_VALID)
env/common.c:228:	env_htab.change_ok += gd->reloc_off;
env/common.c:230:	if (gd->env_valid == ENV_INVALID) {
env/callback.c:71:			var_entry->callback = clbkp->callback + gd->reloc_off;
env/callback.c:112:				ep->callback = clbkp->callback + gd->reloc_off;
env/sf.c:102:	if (gd->env_valid == ENV_VALID) {
env/sf.c:154:	gd->env_valid = gd->env_valid == ENV_REDUND ? ENV_VALID : ENV_REDUND;
env/sf.c:156:	printf("Valid environment: %d\n", (int)gd->env_valid);
env/sf.c:289:		gd->env_valid = ENV_VALID;
env/sf.c:307:		gd->env_addr	= (ulong)&(env_ptr->data);
env/sf.c:308:		gd->env_valid	= 1;
env/sf.c:310:		gd->env_addr = (ulong)&default_environment[0];
env/sf.c:311:		gd->env_valid = 1;
env/eeprom.c:72:	if (gd->env_valid == ENV_REDUND)
env/eeprom.c:126:		gd->env_addr	= 0;
env/eeprom.c:127:		gd->env_valid = ENV_INVALID;
env/eeprom.c:129:		gd->env_valid = ENV_VALID;
env/eeprom.c:131:		gd->env_valid = ENV_REDUND;
env/eeprom.c:135:			gd->env_valid = ENV_VALID;
env/eeprom.c:137:			gd->env_valid = ENV_REDUND;
env/eeprom.c:139:			gd->env_valid = ENV_REDUND;
env/eeprom.c:141:			gd->env_valid = ENV_VALID;
env/eeprom.c:143:			gd->env_valid = ENV_VALID;
env/eeprom.c:171:		gd->env_valid = ENV_VALID;
env/eeprom.c:173:		gd->env_valid = ENV_INVALID;
env/eeprom.c:179:	if (gd->env_valid == ENV_REDUND)
env/eeprom.c:204:	if (gd->env_valid == ENV_VALID) {
env/eeprom.c:221:		if (gd->env_valid == ENV_VALID)
env/eeprom.c:222:			gd->env_valid = ENV_REDUND;
env/eeprom.c:224:			gd->env_valid = ENV_VALID;
env/onenand.c:60:		gd->env_valid = ENV_VALID;
env/nand.c:80:		gd->env_addr	= 0;
env/nand.c:81:		gd->env_valid	= ENV_INVALID;
env/nand.c:85:		gd->env_valid = ENV_VALID;
env/nand.c:89:		gd->env_valid = ENV_REDUND;
env/nand.c:93:			gd->env_valid = ENV_REDUND;
env/nand.c:95:			gd->env_valid = ENV_VALID;
env/nand.c:97:			gd->env_valid = ENV_VALID;
env/nand.c:99:			gd->env_valid = ENV_REDUND;
env/nand.c:101:			gd->env_valid = ENV_VALID;
env/nand.c:104:	if (gd->env_valid == ENV_REDUND)
env/nand.c:108:	if (gd->env_valid == ENV_VALID)
env/nand.c:111:	gd->env_addr = (ulong)env_ptr->data;
env/nand.c:114:	gd->env_addr	= (ulong)&default_environment[0];
env/nand.c:115:	gd->env_valid	= ENV_VALID;
env/nand.c:218:	env_idx = (gd->env_valid == ENV_VALID);
env/nand.c:225:		gd->env_valid = gd->env_valid == ENV_REDUND ? ENV_VALID :
env/ubi.c:37:	if (gd->env_valid == ENV_VALID) {
env/ubi.c:59:	gd->env_valid = gd->env_valid == ENV_REDUND ? ENV_VALID : ENV_REDUND;
env/env.c:22:			entry->name += gd->reloc_off;
env/env.c:24:			entry->load += gd->reloc_off;
env/env.c:26:			entry->save += gd->reloc_off;
env/env.c:28:			entry->init += gd->reloc_off;
env/env.c:87:	return gd->env_has_init & BIT(location);
env/env.c:99:	gd->env_has_init |= BIT(location);
env/env.c:125:	gd->env_load_prio = prio;
env/env.c:163:	return *(uchar *)(gd->env_addr + index);
env/env.c:168:	if (gd->env_valid == ENV_INVALID)
env/env.c:217:	drv = env_driver_lookup(ENVOP_SAVE, gd->env_load_prio);
env/env.c:259:		gd->env_addr = (ulong)&default_environment[0];
env/env.c:260:		gd->env_valid = ENV_VALID;
env/flash.c:89:		gd->env_addr	= addr1;
env/flash.c:90:		gd->env_valid	= ENV_VALID;
env/flash.c:92:		gd->env_addr	= addr2;
env/flash.c:93:		gd->env_valid	= ENV_VALID;
env/flash.c:95:		gd->env_addr	= addr_default;
env/flash.c:96:		gd->env_valid	= ENV_INVALID;
env/flash.c:98:		gd->env_addr	= addr1;
env/flash.c:99:		gd->env_valid	= ENV_VALID;
env/flash.c:101:		gd->env_addr	= addr2;
env/flash.c:102:		gd->env_valid	= ENV_VALID;
env/flash.c:104:		gd->env_addr	= addr1;
env/flash.c:105:		gd->env_valid	= ENV_REDUND;
env/flash.c:107:		gd->env_addr	= addr1;
env/flash.c:108:		gd->env_valid	= ENV_REDUND;
env/flash.c:110:		gd->env_addr	= addr2;
env/flash.c:111:		gd->env_valid	= ENV_REDUND;
env/flash.c:227:		gd->env_addr	= (ulong)&(env_ptr->data);
env/flash.c:228:		gd->env_valid	= ENV_VALID;
env/flash.c:232:	gd->env_addr	= (ulong)&default_environment[0];
env/flash.c:233:	gd->env_valid	= ENV_INVALID;
env/flash.c:313:	if (gd->env_addr != (ulong)&(flash_addr->data)) {
env/flash.c:328:		gd->env_valid = ENV_REDUND;
env/flash.c:340:		gd->env_valid = ENV_REDUND;
env/flash.c:348:	if (gd->env_valid == ENV_REDUND)
env/remote.c:28:		gd->env_addr = (ulong)&(env_ptr->data);
env/remote.c:29:		gd->env_valid = ENV_VALID;
post/drivers/memory.c:472:	bd_t *bd = gd->bd;
post/drivers/memory.c:475:	*size = (gd->ram_size >= 256 << 20 ?
post/drivers/memory.c:476:			256 << 20 : gd->ram_size) - (1 << 20);
post/post.c:35:	gd->post_init_f_time = post_time_ms(0);
post/post.c:36:	if (!gd->post_init_f_time)
post/post.c:94:	gd->post_log_word = 0;
post/post.c:95:	gd->post_log_res = 0;
post/post.c:117:	gd->post_log_word |= testid;
post/post.c:122:	gd->post_log_res |= testid;
post/post.c:131:		if (gd->post_log_word & (post_list[j].testid)) {
post/post.c:133:			if (gd->post_log_res & post_list[j].testid)
post/post.c:246:					(gd->flags & GD_FLG_POSTFAIL) ?
post/post.c:265:					gd->flags |= GD_FLG_POSTFAIL;
post/post.c:267:					gd->flags |= GD_FLG_POSTSTOP;
post/post.c:275:					gd->flags |= GD_FLG_POSTFAIL;
post/post.c:277:					gd->flags |= GD_FLG_POSTSTOP;
post/post.c:303:		if (gd->flags & GD_FLG_POSTSTOP)
post/post.c:309:				gd->flags |= GD_FLG_POSTFAIL;
post/post.c:320:					if (gd->flags & GD_FLG_POSTSTOP)
post/post.c:329:				if (gd->flags & GD_FLG_POSTSTOP)
post/post.c:424:			addr = (ulong)(test->name) + gd->reloc_off;
post/post.c:429:			addr = (ulong)(test->cmd) + gd->reloc_off;
post/post.c:434:			addr = (ulong)(test->desc) + gd->reloc_off;
post/post.c:439:			addr = (ulong)(test->test) + gd->reloc_off;
post/post.c:444:			addr = (ulong)(test->init_f) + gd->reloc_off;
post/post.c:449:			addr = (ulong)(test->reloc) + gd->reloc_off;
net/eth_legacy.c:249:		if (board_eth_init(gd->bd) < 0)
net/eth_legacy.c:252:		if (cpu_eth_init(gd->bd) < 0)
net/eth_legacy.c:353:		if (eth_current->init(eth_current, gd->bd) >= 0) {
net/eth-uclass.c:470:			ops->start += gd->reloc_off;
net/eth-uclass.c:472:			ops->send += gd->reloc_off;
net/eth-uclass.c:474:			ops->recv += gd->reloc_off;
net/eth-uclass.c:476:			ops->free_pkt += gd->reloc_off;
net/eth-uclass.c:478:			ops->stop += gd->reloc_off;
net/eth-uclass.c:481:			ops->mcast += gd->reloc_off;
net/eth-uclass.c:484:			ops->write_hwaddr += gd->reloc_off;
net/eth-uclass.c:486:			ops->read_rom_hwaddr += gd->reloc_off;
fs/ext4/ext4_write.c:80:		bgd->bg_checksum = cpu_to_le16(ext4fs_checksum_update(i));
fs/ext4/ext4_common.c:1112:					bgd->bg_itable_unused = free_inodes;
fs/ext4/ext4_common.c:1181:						le32_to_cpu(bgd->inode_id)))
fs/ext4/ext4_common.c:1187:			bgd->bg_itable_unused = bgd->free_inodes;
fs/ubifs/ubifs.c:213:	ubifs_compressors[compr->compr_type]->name += gd->reloc_off;
fs/ubifs/ubifs.c:214:	ubifs_compressors[compr->compr_type]->capi_name += gd->reloc_off;
fs/ubifs/ubifs.c:215:	ubifs_compressors[compr->compr_type]->decompress += gd->reloc_off;
fs/fs.c:317:			info->name += gd->reloc_off;
fs/fs.c:318:			info->probe += gd->reloc_off;
fs/fs.c:319:			info->close += gd->reloc_off;
fs/fs.c:320:			info->ls += gd->reloc_off;
fs/fs.c:321:			info->read += gd->reloc_off;
fs/fs.c:322:			info->write += gd->reloc_off;
doc/driver-model/livetree.txt:89:    const void *blob = gd->fdt_blob;
doc/driver-model/livetree.txt:108:    const void *blob = gd->fdt_blob;
doc/driver-model/README.txt:696:   do various calls like fdtdec_get_int(gd->fdt_blob, dev_of_offset(dev), ...)
doc/driver-model/spi-howto.txt:225:	const void *blob = gd->fdt_blob;
doc/driver-model/of-plat.txt:212:            const void *blob = gd->fdt_blob;
doc/README.arm-relocation:25:	detect the real dramsize, and store it in gd->ram_size. Bst detected
doc/README.arm-relocation:167:		       or get it from gd->relocaddr in gdb
doc/README.arm-relocation:187:specified by gd->relocaddr -- this is only valid after board_init_f.
doc/README.arm-relocation:189:(gdb) set $s = gd->relocaddr
doc/README.silent:17:   suppressed by testing for the flag "GD_FLG_SILENT" in "gd->flags".
doc/device-tree-bindings/misc/intel,baytrail-fsp.txt:36:- fsp,igd-render-standby
doc/device-tree-bindings/misc/intel,baytrail-fsp.txt:59:- fsp,igd-dvmt50-pre-alloc
doc/device-tree-bindings/misc/intel,baytrail-fsp.txt:126:		fsp,igd-dvmt50-pre-alloc = <IGD_DVMT50_PRE_ALLOC_64MB>;
doc/README.standalone:15:	gd->jt->malloc	= my_malloc;
doc/README.standalone:16:	gd->jt->free = my_free;
doc/README.standalone:34:	printf("U-Boot relocation offset: %x\n", gd->reloc_off);
doc/README.standalone:93:	gd->jt->foobar = another_foobar;
include/configs/mx53cx9020.h:143:#define PHYS_SDRAM_1_SIZE		(gd->bd->bi_dram[0].size)
include/configs/mx53cx9020.h:145:#define PHYS_SDRAM_2_SIZE		(gd->bd->bi_dram[1].size)
include/configs/mx53cx9020.h:146:#define PHYS_SDRAM_SIZE			(gd->ram_size)
include/configs/bcmstb.h:69: * Setting gd->relocaddr to CONFIG_SYS_TEXT_BASE in dram_init_banksize
include/configs/xtfpga.h:26:#define CONFIG_SYS_CLK_FREQ		(gd->cpu_clk)
include/configs/mx53ppd.h:180:#define PHYS_SDRAM_1_SIZE		(gd->bd->bi_dram[0].size)
include/configs/mx53ppd.h:182:#define PHYS_SDRAM_2_SIZE		(gd->bd->bi_dram[1].size)
include/configs/mx53ppd.h:183:#define PHYS_SDRAM_SIZE			(gd->ram_size)
include/configs/usbarmory.h:86:#define PHYS_SDRAM_SIZE			(gd->ram_size)
include/configs/mx53loco.h:153:#define PHYS_SDRAM_1_SIZE		(gd->bd->bi_dram[0].size)
include/configs/mx53loco.h:155:#define PHYS_SDRAM_2_SIZE		(gd->bd->bi_dram[1].size)
include/configs/mx53loco.h:156:#define PHYS_SDRAM_SIZE			(gd->ram_size)
include/image.h:1085:# define gd_fdt_blob()		(gd->fdt_blob)
include/dm/read.h:568:	return fdt_address_cells(gd->fdt_blob, dev_of_offset(dev));
include/dm/read.h:574:	return fdt_size_cells(gd->fdt_blob, dev_of_offset(dev));
include/dm/read.h:579:	return fdt_address_cells(gd->fdt_blob, dev_of_offset(dev));
include/dm/read.h:584:	return fdt_size_cells(gd->fdt_blob, dev_of_offset(dev));
include/dm/read.h:589:	return fdt_get_phandle(gd->fdt_blob, dev_of_offset(dev));
include/dm/read.h:600:	return fdtdec_get_alias_seq(gd->fdt_blob, dev->uclass->uc_drv->name,
include/dm/read.h:628:	return fdtdec_get_is_enabled(gd->fdt_blob, dev_of_offset(dev));
include/dm/of.h:96:	return gd->of_root != NULL;
include/i2c.h:642:#define	I2C_BUS			gd->cur_i2c_bus
include/i2c.h:645:#define	I2C_ADAP		I2C_ADAP_NR(gd->cur_i2c_bus)
include/asm-generic/global_data.h:129:#define gd_board_type()		gd->board_type
include/log.h:329:/* Log format flags (bit numbers) for gd->log_fmt. See log_fmt_chars */
include/autoboot.h:8: * JinHua Luo, GuangDong Linux Center, <luo.jinhua@gd-linux.com>
include/video.h:110: * gd->video_top is set to the initial value of *@addrp and gd->video_bottom
include/timer.h:11: * initializes gd->timer so that lib/timer can use it for future
include/init.h:74: * gd->bd->bi_dram(). It is called just before relocation, after dram_init()
include/init.h:93: * On entry gd->start_addr_sp is pointing to the suggested top of the stack.
include/init.h:94: * The callee ensures gd->start_add_sp is 16-byte aligned, so architectures
include/init.h:97: * On exit gd->start_addr_sp and gd->irq_sp should be set to the respective
include/init.h:99: * gd->irq_sp is only required, if the architecture needs it.
include/fdtdec.h:915: * fdtdec_setup_mem_size_base() - decode and setup gd->ram_size and
include/fdtdec.h:916: * gd->ram_start
include/fdtdec.h:933: * fdtdec_setup_memory_banksize() - decode and populate gd->bd->bi_dram
include/bootcount.h:53:		if (!(gd->flags & GD_FLG_SPL_INIT))
include/bootcount.h:67:	if (gd->flags & GD_FLG_SPL_INIT) {
disk/part_efi.c:582:	config_offset = fdtdec_get_config_int(gd->fdt_blob,
